{
  "Action": {
    "FunctionName": "Select",
    "Parameters": [
      {
        "Type": "string",
        "Name": "sql",
        "Value": "SELECT * FROM tasks"
      }
    ],
    "ReturnValue": {
      "Type": "dynamic",
      "VariableName": "tasks"
    }
  },
  "Text": "select * from tasks, write to %tasks%",
  "Reload": false,
  "LlmQuestion": {
    "type": "PLang.Modules.BaseBuilder",
    "system": "Map user command to this c# function: \r\n\r\n## csharp function ##\r\ndynamic Select(String sql, Dictionary`2? Parameters)  \r\n## csharp function ##\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%.\r\nYou MUST generate a valid sql statement for SQLiteConnection.\r\nYou MUST provide Parameters if SQL has @parameter.\r\n\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
    "question": "command: select * from tasks, write to %tasks%",
    "assistant": "# examples #\r\n\"select everything from tableX\" => sql: \"SELECT * FROM tableX\"\r\n\"select from tableB where id=%id%\" => sql: \"SELECT * FROM tableB WHERE id=@id\"\r\n# examples #\n### tasks table info starts ###\n[{\"cid\":0,\"name\":\"id\",\"type\":\"INTEGER\",\"notnull\":0,\"dflt_value\":null,\"pk\":1},{\"cid\":1,\"name\":\"description\",\"type\":\"TEXT\",\"notnull\":1,\"dflt_value\":null,\"pk\":0},{\"cid\":2,\"name\":\"due_date\",\"type\":\"DATETIME\",\"notnull\":1,\"dflt_value\":null,\"pk\":0},{\"cid\":3,\"name\":\"created\",\"type\":\"DATETIME\",\"notnull\":0,\"dflt_value\":\"CURRENT_TIMESTAMP\",\"pk\":0}]\n### table info ends ###",
    "model": "gpt-4",
    "caching": true,
    "Reload": false,
    "PreviousResult": null,
    "RawResponse": "{\"FunctionName\": \"Select\", \n\"Parameters\": [{\"Type\": \"string\", \n\"Name\": \"sql\", \n\"Value\": \"SELECT * FROM tasks\"}], \n\"ReturnValue\": {\"Type\": \"dynamic\", \n\"VariableName\": \"tasks\"}}"
  },
  "RunOnBuild": false
}
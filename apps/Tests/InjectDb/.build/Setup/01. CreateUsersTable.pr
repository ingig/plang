{
  "Action": {
    "FunctionName": "CreateTable",
    "Parameters": [
      {
        "Type": "String",
        "Name": "sql",
        "Value": "CREATE TABLE users (name TEXT NOT NULL, email TEXT NOT NULL);"
      }
    ],
    "ReturnValue": null
  },
  "Text": "Create table users, columns name(not null), email(not null)",
  "Reload": false,
  "LlmQuestion": {
    "type": "PLang.Modules.BaseBuilder",
    "system": "Map user command to this c# function: \r\n\r\n## csharp function ##\r\nvoid CreateTable(String sql)  \r\n## csharp function ##\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%.\r\nYou MUST generate a valid sql statement for NpgsqlConnection.\r\n\r\n\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
    "question": "command: Create table users, columns name(not null), email(not null)",
    "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nInt32 Execute(String sql) \nvoid CreateTable(String sql) \nObject Select(String sql, Dictionary`2<String>? Parameters) \nInt32 Update(String sql, Dictionary`2<String>? Parameters) \nInt32 Delete(String sql, Dictionary`2<String>? Parameters) \nInt32 Insert(String sql, Dictionary`2<String>? Parameters)  // Basic insert statement. Will return affected row count. \nObject InsertAndSelectIdOfInsertedRow(String sql, Dictionary`2<String>? Parameters)  // Insert statement that will return the id of the inserted row. Use only if user requests the id. \n\r\n## functions available ends ##",
    "model": "gpt-4",
    "caching": true,
    "Reload": false,
    "PreviousResult": null,
    "RawResponse": "{\"FunctionName\": \"CreateTable\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"sql\",\n\"Value\": \"CREATE TABLE users (name TEXT NOT NULL, email TEXT NOT NULL);\"}]}"
  },
  "RunOnBuild": false
}
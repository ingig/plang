{
  "GoalName": "DoRequest",
  "Method": null,
  "Comment": null,
  "GoalSteps": [
    {
      "Text": "wait 2 sec",
      "Comment": null,
      "ModuleType": "ScheduleModule",
      "Name": "WaitForTwoSeconds",
      "Description": "Pause the execution of the program for 2 seconds",
      "File": "01. WaitForTwoSeconds.pr",
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Executed": null,
      "Generated": "0001-01-01T00:00:00",
      "WaitForReply": true,
      "ErrorHandler": {
        "IgnoreErrors": false,
        "Except": null
      },
      "RetryHandler": {
        "RetryCount": 0,
        "RetryDelayInMilliseconds": 0
      },
      "Custom": {},
      "Number": 0,
      "LlmQuestion": null
    },
    {
      "Text": "GET http://localhost:13333/api/ShowIdentity.goal\n    sign the request\n    write to %response%",
      "Comment": null,
      "ModuleType": "HttpModule",
      "Name": "HttpGetRequest",
      "Description": "Make a GET request to the specified URL (http://localhost:13333/api/ShowIdentity.goal) and sign the request. The response from the request is then written to the variable %response%.",
      "File": "02. HttpGetRequest.pr",
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Executed": null,
      "Generated": "0001-01-01T00:00:00",
      "WaitForReply": true,
      "ErrorHandler": {
        "IgnoreErrors": false,
        "Except": null
      },
      "RetryHandler": {
        "RetryCount": 0,
        "RetryDelayInMilliseconds": 0
      },
      "Custom": {},
      "Number": 0,
      "LlmQuestion": null
    },
    {
      "Text": "write out %response% to console",
      "Comment": null,
      "ModuleType": "OutputModule",
      "Name": "WriteToConsole",
      "Description": "Write the value of the variable %response% to the console",
      "File": "03. WriteToConsole.pr",
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Executed": null,
      "Generated": "2023-08-30T10:32:34.5199105+00:00",
      "WaitForReply": true,
      "ErrorHandler": {
        "IgnoreErrors": false,
        "Except": null
      },
      "RetryHandler": {
        "RetryCount": 0,
        "RetryDelayInMilliseconds": 0
      },
      "Custom": {},
      "Number": 2,
      "LlmQuestion": {
        "type": "ModuleDecider",
        "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
        "question": "write out %response% to console",
        "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n## previous request ##\r\nYou responded with the following json in my last request. \r\nYou can use it for context.\r\n{\"Text\":\"write out %response% to console\",\"Comment\":null,\"ModuleType\":\"OutputModule\",\"Name\":\"WriteToConsole\",\"Description\":\"Write the value of the variable %response% to the console\",\"File\":\"03. WriteToConsole.pr\",\"Indent\":0,\"Execute\":true,\"RunOnce\":false,\"Executed\":null,\"Generated\":\"0001-01-01T00:00:00\",\"WaitForReply\":true,\"ErrorHandler\":{\"IgnoreErrors\":false,\"Except\":null},\"RetryHandler\":{\"RetryCount\":0,\"RetryDelayInMilliseconds\":0},\"Custom\":{},\"Number\":0,\"LlmQuestion\":null}\r\n## previous request ##\r\n",
        "model": "gpt-4",
        "caching": true,
        "Reload": false,
        "PreviousResult": null,
        "RawResponse": null
      }
    }
  ],
  "Description": null,
  "FolderPath": "c:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLangExamples\\apps\\HttpRequestWithSignature\\.build\\Start\\DoRequest"
}
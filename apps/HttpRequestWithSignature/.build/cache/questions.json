[
  {
    "question": {
      "type": "ModuleBuilder",
      "system": "Parse the content provided by the user to determine modules in a system\r\n\r\n- (dash) defines the module\r\n/ (slash) defines a comment\r\n\r\nYou MUST response in JSON, scheme\r\n[{name:string, value:string, comment:string}]\r\n\r\nname: name of module\r\ntype: native|.net|python|javascript\r\ncomment: create description of the module\r\nBe concise ",
      "question": "\r\nNative modules:\r\n- WindowAppModule\n- WebserverModule - Start webserver, write to Body, Header, Cookie\n- TerminalModule - Terminal/Console access to run external applications\n- SeleniumModule - Run a browser instance, browse a website, input values and extract content\n- ScheduleModule - Sleep and time delay. Cron scheduler\n- PythonModule - Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\n- OutputModule - Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response\n- MessageModule - Send and recieve private messages using Nostr protocol\n- LoopModule - While, for, foreach, loops through a list\n- LocalOrGlobalVariableModule - Set & Get local and static variables. Bind events to variable.\n- LlmModule - Ask LLM a question and recieve and answer\n- ListDictionaryModule - Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\n- HttpModule - Make Http request\n- HtmlModule\n- FileModule - Handle file system access\n- EnvironmentSettingsModule - Various settings for the program, such as culture, date & number formatting\n- DbModule - Database access, select, insert, update, delete and execute raw sql. Handles transactions\n- CryptographicModule - Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token\n- ConditionalModule - Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\n- CodeModule - Generate c# code from user description. Only use if no other module is found\n- CallGoalModule - Call another Goal, when ! is prefixed, e.g. !RenameFile\n- BlockchainModule - Use blockchain, create wallet, account info, transfer money, sign message, verify signature\n\r\n",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "[\n  {\"name\": \"WindowAppModule\", \"type\": \"native\", \"comment\": \"Native module for window applications\"},\n  {\"name\": \"WebserverModule\", \"type\": \"native\", \"comment\": \"Start webserver, write to Body, Header, Cookie\"},\n  {\"name\": \"TerminalModule\", \"type\": \"native\", \"comment\": \"Terminal/Console access to run external applications\"},\n  {\"name\": \"SeleniumModule\", \"type\": \"native\", \"comment\": \"Run a browser instance, browse a website, input values and extract content\"},\n  {\"name\": \"ScheduleModule\", \"type\": \"native\", \"comment\": \"Sleep and time delay. Cron scheduler\"},\n  {\"name\": \"PythonModule\", \"type\": \"python\", \"comment\": \"Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\"},\n  {\"name\": \"OutputModule\", \"type\": \"native\", \"comment\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response\"},\n  {\"name\": \"MessageModule\", \"type\": \"native\", \"comment\": \"Send and recieve private messages using Nostr protocol\"},\n  {\"name\": \"LoopModule\", \"type\": \"native\", \"comment\": \"While, for, foreach, loops through a list\"},\n  {\"name\": \"LocalOrGlobalVariableModule\", \"type\": \"native\", \"comment\": \"Set & Get local and static variables. Bind events to variable.\"},\n  {\"name\": \"LlmModule\", \"type\": \"native\", \"comment\": \"Ask LLM a question and recieve and answer\"},\n  {\"name\": \"ListDictionaryModule\", \"type\": \"native\", \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"},\n  {\"name\": \"HttpModule\", \"type\": \"native\", \"comment\": \"Make Http request\"},\n  {\"name\": \"HtmlModule\", \"type\": \"native\", \"comment\": \"Native module for handling HTML\"},\n  {\"name\": \"FileModule\", \"type\": \"native\", \"comment\": \"Handle file system access\"},\n  {\"name\": \"EnvironmentSettingsModule\", \"type\": \"native\", \"comment\": \"Various settings for the program, such as culture, date & number formatting\"},\n  {\"name\": \"DbModule\", \"type\": \"native\", \"comment\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions\"},\n  {\"name\": \"CryptographicModule\", \"type\": \"native\", \"comment\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token\"},\n  {\"name\": \"ConditionalModule\", \"type\": \"native\", \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\"},\n  {\"name\": \"CodeModule\", \"type\": \".net\", \"comment\": \"Generate c# code from user description. Only use if no other module is found\"},\n  {\"name\": \"CallGoalModule\", \"type\": \"native\", \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"},\n  {\"name\": \"BlockchainModule\", \"type\": \"native\", \"comment\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature\"}\n]"
    },
    "answer": "[\n  {\"name\": \"WindowAppModule\", \"type\": \"native\", \"comment\": \"Native module for window applications\"},\n  {\"name\": \"WebserverModule\", \"type\": \"native\", \"comment\": \"Start webserver, write to Body, Header, Cookie\"},\n  {\"name\": \"TerminalModule\", \"type\": \"native\", \"comment\": \"Terminal/Console access to run external applications\"},\n  {\"name\": \"SeleniumModule\", \"type\": \"native\", \"comment\": \"Run a browser instance, browse a website, input values and extract content\"},\n  {\"name\": \"ScheduleModule\", \"type\": \"native\", \"comment\": \"Sleep and time delay. Cron scheduler\"},\n  {\"name\": \"PythonModule\", \"type\": \"python\", \"comment\": \"Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\"},\n  {\"name\": \"OutputModule\", \"type\": \"native\", \"comment\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response\"},\n  {\"name\": \"MessageModule\", \"type\": \"native\", \"comment\": \"Send and recieve private messages using Nostr protocol\"},\n  {\"name\": \"LoopModule\", \"type\": \"native\", \"comment\": \"While, for, foreach, loops through a list\"},\n  {\"name\": \"LocalOrGlobalVariableModule\", \"type\": \"native\", \"comment\": \"Set & Get local and static variables. Bind events to variable.\"},\n  {\"name\": \"LlmModule\", \"type\": \"native\", \"comment\": \"Ask LLM a question and recieve and answer\"},\n  {\"name\": \"ListDictionaryModule\", \"type\": \"native\", \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"},\n  {\"name\": \"HttpModule\", \"type\": \"native\", \"comment\": \"Make Http request\"},\n  {\"name\": \"HtmlModule\", \"type\": \"native\", \"comment\": \"Native module for handling HTML\"},\n  {\"name\": \"FileModule\", \"type\": \"native\", \"comment\": \"Handle file system access\"},\n  {\"name\": \"EnvironmentSettingsModule\", \"type\": \"native\", \"comment\": \"Various settings for the program, such as culture, date & number formatting\"},\n  {\"name\": \"DbModule\", \"type\": \"native\", \"comment\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions\"},\n  {\"name\": \"CryptographicModule\", \"type\": \"native\", \"comment\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token\"},\n  {\"name\": \"ConditionalModule\", \"type\": \"native\", \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\"},\n  {\"name\": \"CodeModule\", \"type\": \".net\", \"comment\": \"Generate c# code from user description. Only use if no other module is found\"},\n  {\"name\": \"CallGoalModule\", \"type\": \"native\", \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"},\n  {\"name\": \"BlockchainModule\", \"type\": \"native\", \"comment\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature\"}\n]",
    "hash": "f663b9f7b502a96e3c0c9feedf156388ce81a273c1f5a04ae722029684216e0f"
  },
  {
    "question": {
      "type": "Events",
      "system": "User will provide event binding, you will be provide with c# model to map the code to. \r\n\r\nUser should provide event type, event scope and what GoalToCallFilter, in his description. \r\nIf it Scope is Goal, user should define GoalToBindToFilter. \r\nIf user if binding to step he should provide GoalToBindToFilter and the nr or text of the step\r\nGoalToBindToFilter  is the goal name to bind the event, this can be 1 file or a search pattern, the search pattern always ends with .goal\r\nAppName is prefixed by !, e.g. !SendEmail, AppName can be null\r\n\r\nYou must respond in json, scheme {EventType EventType, EventScope EventScope, string? AppName, string[] GoalToCallFilter, bool runAndForget = false, string[]? GoalToBindToFilter = null, int? stepNumber = null, string? stepText = null}",
      "question": "before each goal in /api/*.goal,  call !ValidateIdentity",
      "assistant": "\t\r\nMap correct number to EventType and EventScope\r\n\r\nenum EventType { Before = 0, After = 1, OnError = 40 }\r\nenum EventScope { StartOfApp = 0, EndOfApp = 1,RunningApp = 2,\tGoal = 20, Step = 30 }\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"EventType\": 0,\n  \"EventScope\": 20,\n  \"AppName\": \"!ValidateIdentity\",\n  \"GoalToCallFilter\": [\"/api/*.goal\"],\n  \"runAndForget\": false,\n  \"GoalToBindToFilter\": null,\n  \"stepNumber\": null,\n  \"stepText\": null\n}"
    },
    "answer": "{\n  \"EventType\": 0,\n  \"EventScope\": 20,\n  \"AppName\": \"!ValidateIdentity\",\n  \"GoalToCallFilter\": [\"/api/*.goal\"],\n  \"runAndForget\": false,\n  \"GoalToBindToFilter\": null,\n  \"stepNumber\": null,\n  \"stepText\": null\n}",
    "hash": "db59a5c3001a9cd37db72b8977a1dc3d4ff1b24312989e34ccbcb0c182e29fba"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "Call !DoRequest and forget",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CallDoRequest\",\n\"StepDescription\":\"Invoke the function 'DoRequest' and do not wait for a response.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CallDoRequest\",\n\"StepDescription\":\"Invoke the function 'DoRequest' and do not wait for a response.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"CallGoalModule\"\n]\n}",
    "hash": "f5bfa16b11f4726f16f1b39baf7ab474679a678860f00a87ccb46cf19adfedc2"
  },
  {
    "question": {
      "type": "PLang.Modules.CallGoalModule",
      "system": "\r\nParse user command, to match the parameters needed for the RunGoal function\r\n\r\n(AppName.)?GoalName is prefixed with !\r\nvariables are defined with starting and ending %\r\nUser might send in variable with his call as input\r\n\r\nExample:\r\n!ParseText then ParseText is goalName\r\n!Gmail.Search %query%, then Gmail is appName and Search is goalName, and %query% is parameters\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Parameters\": [\r\n    {\r\n      \"Type\": \"String\",\r\n      \"Name\": \"String\",\r\n      \"Value\": \"String\"\r\n    }\r\n  ],\r\n  \"ReturnValue\": {\r\n    \"Type\": \"String\",\r\n    \"VariableName\": \"String\"\r\n  }\r\n}",
      "question": "command: Call !DoRequest and forget",
      "assistant": "## functions available defined in csharp ##\r\nvoid RunGoal(String goalName, String? appName, Dictionary`2? parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50) \n\r\n## functions available ends ##\nThese goals are available to choose from ",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunGoal\",\n    \"Parameters\": [\n      {\n        \"Type\": \"String\",\n        \"Name\": \"goalName\",\n        \"Value\": \"DoRequest\"\n      },\n      {\n        \"Type\": \"String\",\n        \"Name\": \"appName\",\n        \"Value\": \"\"\n      },\n      {\n        \"Type\": \"Boolean\",\n        \"Name\": \"waitForResponse\",\n        \"Value\": \"False\"\n      }\n    ],\n    \"ReturnValue\": {\n      \"Type\": \"Void\",\n      \"VariableName\": \"\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunGoal\",\n    \"Parameters\": [\n      {\n        \"Type\": \"String\",\n        \"Name\": \"goalName\",\n        \"Value\": \"DoRequest\"\n      },\n      {\n        \"Type\": \"String\",\n        \"Name\": \"appName\",\n        \"Value\": \"\"\n      },\n      {\n        \"Type\": \"Boolean\",\n        \"Name\": \"waitForResponse\",\n        \"Value\": \"False\"\n      }\n    ],\n    \"ReturnValue\": {\n      \"Type\": \"Void\",\n      \"VariableName\": \"\"\n    }\n  }\n}",
    "hash": "3c8422c9fd4149d5c85042e117f292045853a39f541009b1035d0a454cb956ed"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "start webserver, port 13333",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"StartWebserver\",\n\"StepDescription\":\"Start a webserver on port 13333\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"WebserverModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"StartWebserver\",\n\"StepDescription\":\"Start a webserver on port 13333\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"WebserverModule\"\n]\n}",
    "hash": "655dde3b81946c28d7d9a4e1214d2b76ea256f6d7c83b704f6e85c3673190293"
  },
  {
    "question": {
      "type": "PLang.Modules.WebserverModule",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if user defines it\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Parameters\": [\r\n    {\r\n      \"Type\": \"String\",\r\n      \"Name\": \"String\",\r\n      \"Value\": \"String\"\r\n    }\r\n  ],\r\n  \"ReturnValue\": {\r\n    \"Type\": \"String\",\r\n    \"VariableName\": \"String\"\r\n  }\r\n}",
      "question": "command: start webserver, port 13333",
      "assistant": "## functions available defined in csharp ##\r\nvoid StartWebserver(String? scheme = http, String? host = localhost, Int32? port = 8080, List`1? publicPaths) \nWriteToHeader(String key, String value) \nString GetHeader(String[] keys)  // Returns the first key that has value, else empty string on ASP.NET webserver. e.g. ip address(REMOTE_ADDR, HTTP_X_FORWARDED_FOR) can be represented by multiple headers keys.. \nString GetCookie(String name) \nvoid WriteCookie(String name, String value, Int32? expiresInSeconds = 604800) \nvoid DeleteCookie(String name, String value, Int32? expiresInSeconds = 604800) \n\r\n## functions available ends ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"StartWebserver\",\n    \"Parameters\": [\n      {\n        \"Type\": \"Int32\",\n        \"Name\": \"port\",\n        \"Value\": \"13333\"\n      }\n    ],\n    \"ReturnValue\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"StartWebserver\",\n    \"Parameters\": [\n      {\n        \"Type\": \"Int32\",\n        \"Name\": \"port\",\n        \"Value\": \"13333\"\n      }\n    ],\n    \"ReturnValue\": {}\n  }\n}",
    "hash": "c0a294c591b566fdecfc46786d21393ef7fa32152ca89695e43fff7630edef13"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "wait 2 sec",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WaitForTwoSeconds\",\n\"StepDescription\":\"Pause the execution of the program for 2 seconds\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ScheduleModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WaitForTwoSeconds\",\n\"StepDescription\":\"Pause the execution of the program for 2 seconds\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ScheduleModule\"\n]\n}",
    "hash": "f82064b5e6de57e46da4e68eaed42499d0421c331b319e7027d8494b1c123f89"
  },
  {
    "question": {
      "type": "PLang.Modules.ScheduleModule",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if user defines it\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Parameters\": [\r\n    {\r\n      \"Type\": \"String\",\r\n      \"Name\": \"String\",\r\n      \"Value\": \"String\"\r\n    }\r\n  ],\r\n  \"ReturnValue\": {\r\n    \"Type\": \"String\",\r\n    \"VariableName\": \"String\"\r\n  }\r\n}",
      "question": "command: wait 2 sec",
      "assistant": "## functions available defined in csharp ##\r\nvoid Sleep(Int32 sleepTimeInMilliseconds) \nvoid Schedule(String cronCommand, String goalName, String? appName, Nullable`1? lastRun) \n\r\n## functions available ends ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Sleep\",\n    \"Parameters\": [\n      {\n        \"Type\": \"Int32\",\n        \"Name\": \"sleepTimeInMilliseconds\",\n        \"Value\": \"2000\"\n      }\n    ],\n    \"ReturnValue\": null\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Sleep\",\n    \"Parameters\": [\n      {\n        \"Type\": \"Int32\",\n        \"Name\": \"sleepTimeInMilliseconds\",\n        \"Value\": \"2000\"\n      }\n    ],\n    \"ReturnValue\": null\n  }\n}",
    "hash": "def747b99091fefe64bd72cd7e96eb6fb5895caea5a961d30f50b60881690623"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "GET http://localhost:13333/api/ShowIdentity.goal\n    sign the request\n    write to %response%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"HttpGetRequest\",\n\"StepDescription\":\"Make a GET request to the specified URL (http://localhost:13333/api/ShowIdentity.goal) and sign the request. The response from the request is then written to the variable %response%.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HttpModule\",\n    \"CryptographicModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"HttpGetRequest\",\n\"StepDescription\":\"Make a GET request to the specified URL (http://localhost:13333/api/ShowIdentity.goal) and sign the request. The response from the request is then written to the variable %response%.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HttpModule\",\n    \"CryptographicModule\"\n]\n}",
    "hash": "0141c8d2e01b5fa20fcad379f620f2d7a29fd15dd1211a28c24ec2eda28f0189"
  },
  {
    "question": {
      "type": "PLang.Modules.HttpModule",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if user defines it\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Parameters\": [\r\n    {\r\n      \"Type\": \"String\",\r\n      \"Name\": \"String\",\r\n      \"Value\": \"String\"\r\n    }\r\n  ],\r\n  \"ReturnValue\": {\r\n    \"Type\": \"String\",\r\n    \"VariableName\": \"String\"\r\n  }\r\n}",
      "question": "command: GET http://localhost:13333/api/ShowIdentity.goal\n    sign the request\n    write to %response%",
      "assistant": "## functions available defined in csharp ##\r\nObject Post(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json) \nObject Patch(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json) \nObject Get(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json) \nObject Option(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json) \nObject Head(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json) \nObject Put(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json) \nObject Delete(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json) \n\r\n## functions available ends ##\nUser might use JSONPath to describe how to load variable in ReturnValue, keep the $ for the ReturnValue.VariableName.\\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Get\",\n    \"Parameters\": [\n      {\n        \"Type\": \"String\",\n        \"Name\": \"url\",\n        \"Value\": \"http://localhost:13333/api/ShowIdentity.goal\"\n      },\n      {\n        \"Type\": \"Object\",\n        \"Name\": \"data\",\n        \"Value\": \"{}\"\n      },\n      {\n        \"Type\": \"Boolean\",\n        \"Name\": \"signRequest\",\n        \"Value\": \"True\"\n      },\n      {\n        \"Type\": \"Dictionary`2\",\n        \"Name\": \"headers\",\n        \"Value\": \"{}\"\n      },\n      {\n        \"Type\": \"String\",\n        \"Name\": \"encoding\",\n        \"Value\": \"utf-8\"\n      },\n      {\n        \"Type\": \"String\",\n        \"Name\": \"contentType\",\n        \"Value\": \"application/json\"\n      }\n    ],\n    \"ReturnValue\": {\n      \"Type\": \"Object\",\n      \"VariableName\": \"response\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Get\",\n    \"Parameters\": [\n      {\n        \"Type\": \"String\",\n        \"Name\": \"url\",\n        \"Value\": \"http://localhost:13333/api/ShowIdentity.goal\"\n      },\n      {\n        \"Type\": \"Object\",\n        \"Name\": \"data\",\n        \"Value\": \"{}\"\n      },\n      {\n        \"Type\": \"Boolean\",\n        \"Name\": \"signRequest\",\n        \"Value\": \"True\"\n      },\n      {\n        \"Type\": \"Dictionary`2\",\n        \"Name\": \"headers\",\n        \"Value\": \"{}\"\n      },\n      {\n        \"Type\": \"String\",\n        \"Name\": \"encoding\",\n        \"Value\": \"utf-8\"\n      },\n      {\n        \"Type\": \"String\",\n        \"Name\": \"contentType\",\n        \"Value\": \"application/json\"\n      }\n    ],\n    \"ReturnValue\": {\n      \"Type\": \"Object\",\n      \"VariableName\": \"response\"\n    }\n  }\n}",
    "hash": "8c100475b461df9ea1cf44736873cf6274226d31d20a6afc7556f49dc5dc6537"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "write out %response% to console",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WriteToConsole\",\n\"StepDescription\":\"Write the value of the variable %response% to the console\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WriteToConsole\",\n\"StepDescription\":\"Write the value of the variable %response% to the console\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}",
    "hash": "8387240b3819f82260822d568c127cbfabe19f466aa5ec66102852ca62dc021f"
  },
  {
    "question": {
      "type": "PLang.Modules.OutputModule",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if user defines it\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Parameters\": [\r\n    {\r\n      \"Type\": \"String\",\r\n      \"Name\": \"String\",\r\n      \"Value\": \"String\"\r\n    }\r\n  ],\r\n  \"ReturnValue\": {\r\n    \"Type\": \"String\",\r\n    \"VariableName\": \"String\"\r\n  }\r\n}",
      "question": "command: write out %response% to console",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t{\"response\":{\"Events\":[],\"value\":null,\"type\":\"System.Threading.Tasks.Task`1[[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\"Initiated\":false}}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Write\",\n    \"Parameters\": [\n      {\n        \"Type\": \"String\",\n        \"Name\": \"text\",\n        \"Value\": \"%response%\"\n      },\n      {\n        \"Type\": \"Boolean\",\n        \"Name\": \"writeToBuffer\",\n        \"Value\": \"False\"\n      }\n    ],\n    \"ReturnValue\": {\n      \"Type\": \"void\",\n      \"VariableName\": \"\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Write\",\n    \"Parameters\": [\n      {\n        \"Type\": \"String\",\n        \"Name\": \"text\",\n        \"Value\": \"%response%\"\n      },\n      {\n        \"Type\": \"Boolean\",\n        \"Name\": \"writeToBuffer\",\n        \"Value\": \"False\"\n      }\n    ],\n    \"ReturnValue\": {\n      \"Type\": \"void\",\n      \"VariableName\": \"\"\n    }\n  }\n}",
    "hash": "beb6188cd90b25d3b6233b47ba73612da2dc182e815942f8b8eed6c21b4db0e6"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "if %Identity% is empty, give error \"You need to sign your requests\"",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CheckIdentity\",\n\"StepDescription\":\"Check if the variable 'Identity' is empty. If it is, an error message 'You need to sign your requests' is displayed.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ConditionalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CheckIdentity\",\n\"StepDescription\":\"Check if the variable 'Identity' is empty. If it is, an error message 'You need to sign your requests' is displayed.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ConditionalModule\"\n]\n}",
    "hash": "9e9795f4797ea8e8de4f39d27c80b9d00571cec4cebaf102751dd2ac61ba41b3"
  },
  {
    "question": {
      "type": "ConditionalModule",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\n\r\nName: is CamelCase name of class\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\nName cannot be: \n\r\nYou MUST respond in JSON, scheme:\r\n{Name:string, Implementation:string, Using:string[]}\r\n\r\nBe Concise",
      "question": "if %Identity% is empty, give error \"You need to sign your requests\"",
      "assistant": null,
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Name\": \"IdentityCheck\",\n  \"Implementation\": \"public static class IdentityCheck {\\n\\tpublic static bool Process(string identity) {\\n\\t\\tif(string.IsNullOrEmpty(identity)) {\\n\\t\\t\\tthrow new ArgumentException(\\\"You need to sign your requests\\\");\\n\\t\\t}\\n\\t\\treturn true;\\n\\t}\\n}\",\n  \"Using\": [\"System\"]\n}"
    },
    "answer": "{\n  \"Name\": \"IdentityCheck\",\n  \"Implementation\": \"public static class IdentityCheck {\\n\\tpublic static bool Process(string identity) {\\n\\t\\tif(string.IsNullOrEmpty(identity)) {\\n\\t\\t\\tthrow new ArgumentException(\\\"You need to sign your requests\\\");\\n\\t\\t}\\n\\t\\treturn true;\\n\\t}\\n}\",\n  \"Using\": [\"System\"]\n}",
    "hash": "f9c22cfaca6bdace53d3e1ee482c0b10a87a6c0c9738211e63b1ea3286dd2672"
  },
  {
    "question": {
      "type": "ApiMethodType",
      "system": "Determine the Method and write description of this api, using the content of the file.\r\nMethods can be: GET, POST, DELETE, PUT, PATCH, OPTIONS, HEAD. The content will describe a function in multiple steps.\r\nYou MUST response in JSON, scheme: {Method:string, Description:string}\r\n",
      "question": "ShowIdentity\nwrite out %Identity%",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"Method\": \"GET\", \"Description\": \"This API function retrieves and displays the identity of the user. The identity is obtained from the system and written out for the user to view.\"}"
    },
    "answer": "{\"Method\": \"GET\", \"Description\": \"This API function retrieves and displays the identity of the user. The identity is obtained from the system and written out for the user to view.\"}",
    "hash": "8011945cee43ca0242d2e43e507df5745f56541befcf6a14e8f7e01b35f59d96"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "write out %Identity%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WriteOutIdentity\",\n\"StepDescription\":\"Output the value of the variable 'Identity' to the user interface.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WriteOutIdentity\",\n\"StepDescription\":\"Output the value of the variable 'Identity' to the user interface.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}",
    "hash": "301ef357da0f9dfeb60be4d513e884a243a1bc6f272bd18e7895d8976d303788"
  },
  {
    "question": {
      "type": "PLang.Modules.OutputModule",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if user defines it\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Parameters\": [\r\n    {\r\n      \"Type\": \"String\",\r\n      \"Name\": \"String\",\r\n      \"Value\": \"String\"\r\n    }\r\n  ],\r\n  \"ReturnValue\": {\r\n    \"Type\": \"String\",\r\n    \"VariableName\": \"String\"\r\n  }\r\n}",
      "question": "command: write out %Identity%",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Write\",\n    \"Parameters\": [\n      {\n        \"Type\": \"String\",\n        \"Name\": \"text\",\n        \"Value\": \"%Identity%\"\n      },\n      {\n        \"Type\": \"Boolean\",\n        \"Name\": \"writeToBuffer\",\n        \"Value\": \"False\"\n      }\n    ],\n    \"ReturnValue\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Write\",\n    \"Parameters\": [\n      {\n        \"Type\": \"String\",\n        \"Name\": \"text\",\n        \"Value\": \"%Identity%\"\n      },\n      {\n        \"Type\": \"Boolean\",\n        \"Name\": \"writeToBuffer\",\n        \"Value\": \"False\"\n      }\n    ],\n    \"ReturnValue\": {}\n  }\n}",
    "hash": "5a98e9bbc36dc5e11dadb6cceef7fc886eddb45725f976a8faacb33d62f7f118"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "write out %response% to console",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n## previous request ##\r\nYou responded with the following json in my last request. \r\nYou can use it for context.\r\n{\"Text\":\"write out %response% to console\",\"Comment\":null,\"ModuleType\":\"OutputModule\",\"Name\":\"WriteToConsole\",\"Description\":\"Write the value of the variable %response% to the console\",\"File\":\"03. WriteToConsole.pr\",\"Indent\":0,\"Execute\":true,\"RunOnce\":false,\"Executed\":null,\"Generated\":\"0001-01-01T00:00:00\",\"WaitForReply\":true,\"ErrorHandler\":{\"IgnoreErrors\":false,\"Except\":null},\"RetryHandler\":{\"RetryCount\":0,\"RetryDelayInMilliseconds\":0},\"Custom\":{},\"Number\":0,\"LlmQuestion\":null}\r\n## previous request ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WriteToConsole\",\n\"StepDescription\":\"Write the value of the variable %response% to the console\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WriteToConsole\",\n\"StepDescription\":\"Write the value of the variable %response% to the console\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}",
    "hash": "f535d68d2aed066aff223e20242631e31f7c70773a721a07c691abdd650141ff"
  },
  {
    "question": {
      "type": "PLang.Modules.OutputModule",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if user defines it\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Parameters\": [\r\n    {\r\n      \"Type\": \"String\",\r\n      \"Name\": \"String\",\r\n      \"Value\": \"String\"\r\n    }\r\n  ],\r\n  \"ReturnValue\": {\r\n    \"Type\": \"String\",\r\n    \"VariableName\": \"String\"\r\n  }\r\n}",
      "question": "command: write out %response% to console",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Write\",\n    \"Parameters\": [\n      {\n        \"Type\": \"String\",\n        \"Name\": \"text\",\n        \"Value\": \"%response%\"\n      }\n    ],\n    \"ReturnValue\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Write\",\n    \"Parameters\": [\n      {\n        \"Type\": \"String\",\n        \"Name\": \"text\",\n        \"Value\": \"%response%\"\n      }\n    ],\n    \"ReturnValue\": {}\n  }\n}",
    "hash": "d05ee405b80b69a28b1816800079ef35774aa46c89cefe8ac4ddef3593481655"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'Call !DoRequest and forget' had exception\r\n ---> Newtonsoft.Json.JsonReaderException: Unexpected character encountered while parsing value: F. Path '', line 1, position 1.\r\n   at Newtonsoft.Json.JsonTextReader.ReadAsBoolean()\r\n   at Newtonsoft.Json.JsonReader.ReadForType(JsonContract contract, Boolean hasConverter)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type)\r\n   at PLang.Modules.BaseProgram.GetMethodAndParameters(GenericFunction function) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 302\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 99\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 303\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 238\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 203\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 166\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred while the program was trying to read a JSON file. It encountered an unexpected character at the start of the file.\",\n\"howToFix\": \"Please check the JSON file that the program is trying to read. It seems like it's starting with a character 'F' which is not expected. Make sure the JSON file is correctly formatted and try again.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred while the program was trying to read a JSON file. It encountered an unexpected character at the start of the file.\",\n\"howToFix\": \"Please check the JSON file that the program is trying to read. It seems like it's starting with a character 'F' which is not expected. Make sure the JSON file is correctly formatted and try again.\"\n}",
    "hash": "e51459352f6a42242f839c1d1e018f286eb09020227852806669379c8bc43cf9"
  }
]
[
  {
    "question": {
      "system": "Parse the content provided by the user to determine modules in a system\r\n\r\n- (dash) defines the module\r\n/ (slash) defines a comment\r\n\r\nYou MUST response in JSON, scheme\r\n[{name:string, value:string, comment:string}]\r\n\r\nname: name of module\r\ntype: native|.net|python|javascript\r\ncomment: create description of the module\r\nBe concise ",
      "question": "\r\nNative modules:\r\nWebserverModule - Start webserver, write to Body, Header, Cookie\nTerminalModule\nSeleniumModule\nScheduleModule\nOutputModule\nLoopModule\nLocalOrGlobalVariableModule\nLlmModule\nListDictionaryModule - Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\nHttpModule\nFileModule\nDbModule\nCryptographicModule\nConditionalModule - Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false\nCodeModule\nCallGoalModule - Call another Goal, when ! is prefixed, e.g. !RenameFile\nBlockchainModule - Use blockchain, create wallet, account info, transfer money\n\r\n",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "[\n  {\n    \"name\": \"WebserverModule\",\n    \"type\": \"native\",\n    \"comment\": \"Start webserver, write to Body, Header, Cookie\"\n  },\n  {\n    \"name\": \"TerminalModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"SeleniumModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ScheduleModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"OutputModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LoopModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LocalOrGlobalVariableModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LlmModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ListDictionaryModule\",\n    \"type\": \"native\",\n    \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"\n  },\n  {\n    \"name\": \"HttpModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"FileModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"DbModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"CryptographicModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ConditionalModule\",\n    \"type\": \"native\",\n    \"comment\": \"Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false\"\n  },\n  {\n    \"name\": \"CodeModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"CallGoalModule\",\n    \"type\": \"native\",\n    \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"\n  },\n  {\n    \"name\": \"BlockchainModule\",\n    \"type\": \"native\",\n    \"comment\": \"Use blockchain, create wallet, account info, transfer money\"\n  }\n]"
    },
    "answer": "[\n  {\n    \"name\": \"WebserverModule\",\n    \"type\": \"native\",\n    \"comment\": \"Start webserver, write to Body, Header, Cookie\"\n  },\n  {\n    \"name\": \"TerminalModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"SeleniumModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ScheduleModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"OutputModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LoopModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LocalOrGlobalVariableModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LlmModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ListDictionaryModule\",\n    \"type\": \"native\",\n    \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"\n  },\n  {\n    \"name\": \"HttpModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"FileModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"DbModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"CryptographicModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ConditionalModule\",\n    \"type\": \"native\",\n    \"comment\": \"Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false\"\n  },\n  {\n    \"name\": \"CodeModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"CallGoalModule\",\n    \"type\": \"native\",\n    \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"\n  },\n  {\n    \"name\": \"BlockchainModule\",\n    \"type\": \"native\",\n    \"comment\": \"Use blockchain, create wallet, account info, transfer money\"\n  }\n]",
    "hash": "40997db24dd1931bc78e4b8b1e8d5124b5865c07cc28577e1e03eddfe02f3cbd"
  },
  {
    "question": {
      "system": "Parse the content provided by user to determine settings in a system\r\n\r\n- (dash) defines the module\r\n/ (slash) defines a comment\r\n\r\nYou MUST response in JSON, scheme\r\n[{name:string, value:string, comment:string}]\r\n\r\nname: name of setting\r\nvalue: value of the setting,  format value according to standards\r\ncomment: description of the setting\r\n\r\nFor response_type (a synonym for ContentType), format the value according to standard.\r\nFor example if value is json then it should be formatted as application/json, html is text/html\r\n\r\nBe concise",
      "question": "Settings\r\n- use Sqlite for db\r\n- use UTF-8 for encoding\r\n- is dev environment / change to production when you go live\r\n- use json as output\r\n",
      "assistant": "available settings are\r\ndb_type, encoding, environment, auth_type, auth_method, variable_pre_postfix, response_type",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "[\n  {\n    \"name\": \"db_type\",\n    \"value\": \"Sqlite\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"encoding\",\n    \"value\": \"UTF-8\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"environment\",\n    \"value\": \"dev\",\n    \"comment\": \"change to production when you go live\"\n  },\n  {\n    \"name\": \"response_type\",\n    \"value\": \"application/json\",\n    \"comment\": \"\"\n  }\n]"
    },
    "answer": "[\n  {\n    \"name\": \"db_type\",\n    \"value\": \"Sqlite\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"encoding\",\n    \"value\": \"UTF-8\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"environment\",\n    \"value\": \"dev\",\n    \"comment\": \"change to production when you go live\"\n  },\n  {\n    \"name\": \"response_type\",\n    \"value\": \"application/json\",\n    \"comment\": \"\"\n  }\n]",
    "hash": "8f96a2dd5839b0d21f050c26d7b5d788027682482c2d4bc1630aca5f41085649"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "convert sample.mp4 to audio.mp3, stream to %stream% write output to %output%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"This step involves converting a video file named 'sample.mp4' into an audio file named 'audio.mp3'. The audio file is then streamed to a variable named '%stream%'. The output of this process is written to a variable named '%output%'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\",\n\t\"TerminalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"This step involves converting a video file named 'sample.mp4' into an audio file named 'audio.mp3'. The audio file is then streamed to a variable named '%stream%'. The output of this process is written to a variable named '%output%'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\",\n\t\"TerminalModule\"\n]\n}",
    "hash": "b2c781434d12340be18bffd05e7fe31392e5b661957092c05b3dc7b9757cb7c5"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: convert sample.mp4 to audio.mp3, stream to %stream% write output to %output%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadFile(String path)\nWriteToFile(String path, String content)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"N/A\",\n    \"Inputs\": {},\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"N/A\",\n    \"Inputs\": {},\n    \"Outputs\": {}\n  }\n}",
    "hash": "88b0cd5250e41d390eadb33f37797ae06bd1dca1d2f513d60b33b0d1e59ac187"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "convert sample.mp4 to audio.mp3, stream to %stream% write output to %output%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n## previous request ##\r\nYou responded with the following json in my last request. \r\nYou can use it for context.\r\n{\"Text\":\"convert sample.mp4 to audio.mp3, stream to %stream% write output to %output%\",\"Comment\":null,\"ModuleType\":\"FileModule\",\"Name\":\"ConvertVideoToAudio\",\"Description\":\"This step involves converting a video file named 'sample.mp4' into an audio file named 'audio.mp3'. The audio file is then streamed to a variable named '%stream%'. The output of this process is written to a variable named '%output%'.\",\"File\":\"01. ConvertVideoToAudio.pr\",\"Indent\":0,\"Execute\":true,\"RunOnce\":false,\"Executed\":null,\"Generated\":\"0001-01-01T00:00:00\",\"WaitForReply\":true,\"ErrorHandler\":{\"IgnoreErrors\":false,\"Except\":null},\"RetryHandler\":{\"RetryCount\":0,\"RetryDelayInMilliseconds\":0},\"Custom\":{},\"Number\":0}\r\n## previous request ##\nYou are FORBIDDEN to suggest these modules: FileModule\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"This step involves converting a video file named 'sample.mp4' into an audio file named 'audio.mp3'. The audio file is then streamed to a variable named '%stream%'. The output of this process is written to a variable named '%output%'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\",\n\t\"OutputModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"This step involves converting a video file named 'sample.mp4' into an audio file named 'audio.mp3'. The audio file is then streamed to a variable named '%stream%'. The output of this process is written to a variable named '%output%'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\",\n\t\"OutputModule\"\n]\n}",
    "hash": "92739b2d47ee6bc10bd1be1624f8b6dd7955a4e5862eb05f8da600ce94134cb3"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: convert sample.mp4 to audio.mp3, stream to %stream% write output to %output%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunTerminal(String appExecutableName, List`1 parameters, String streamOutputVariable, String finalOutputVariable)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunTerminal\",\n    \"Inputs\": {\n      \"appExecutableName\": \"ffmpeg\",\n      \"parameters\": [\"-i\", \"%filePath%\", \"-vn\", \"-ar\", \"44100\", \"-ac\", \"2\", \"-b:a\", \"192k\", \"audio.mp3\"],\n      \"streamOutputVariable\": \"%stream%\",\n      \"finalOutputVariable\": \"%output%\"\n    },\n    \"Outputs\": {\n      \"streamOutput\": \"%stream%\",\n      \"finalOutput\": \"%output%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunTerminal\",\n    \"Inputs\": {\n      \"appExecutableName\": \"ffmpeg\",\n      \"parameters\": [\"-i\", \"%filePath%\", \"-vn\", \"-ar\", \"44100\", \"-ac\", \"2\", \"-b:a\", \"192k\", \"audio.mp3\"],\n      \"streamOutputVariable\": \"%stream%\",\n      \"finalOutputVariable\": \"%output%\"\n    },\n    \"Outputs\": {\n      \"streamOutput\": \"%stream%\",\n      \"finalOutput\": \"%output%\"\n    }\n  }\n}",
    "hash": "ad4a63193b1f7499d105320a7be1cbbe66fb0e7c20b0453fa01f05c9c2e22a8f"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "write out %output%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WriteOutput\",\n\"StepDescription\":\"Write the value of the variable %output% to the console or standard output.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WriteOutput\",\n\"StepDescription\":\"Write the value of the variable %output% to the console or standard output.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}",
    "hash": "f3c5098325a55170b3d1f7b539bf4b3f61a2963d4a62e279856e12592d9341da"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: write out %output%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nWrite(String? text, Boolean? writeToBuffer = False)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Write\",\n    \"Inputs\": {\n      \"text\": \"%output%\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Write\",\n    \"Inputs\": {\n      \"text\": \"%output%\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "19ab3fd2522776273212e5b4aa5deea5a72938fe58618de1b90b68a56e21a201"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "convert file named \"sample.mp4\" to audio.mp3, stream to %stream% write output to %output%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"This step involves converting a video file named 'sample.mp4' to an audio file 'audio.mp3'. The audio file is then streamed to a specified stream and the output is written to a specified output variable.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\",\n\t\"TerminalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"This step involves converting a video file named 'sample.mp4' to an audio file 'audio.mp3'. The audio file is then streamed to a specified stream and the output is written to a specified output variable.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\",\n\t\"TerminalModule\"\n]\n}",
    "hash": "48707601b23c9bd3ca4868df78d160d2feafab628b923c6d03771ce8f5d8d407"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: convert file named \"sample.mp4\" to audio.mp3, stream to %stream% write output to %output%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadFile(String path)\nWriteToFile(String path, String content)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"N/A\",\n    \"Inputs\": {},\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"N/A\",\n    \"Inputs\": {},\n    \"Outputs\": {}\n  }\n}",
    "hash": "62a0485c5bfd6cb4103f32e373dd1dd1de61329fcfcce908d53a18d16329fa74"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "convert file named \"sample.mp4\" to audio.mp3, stream to %stream% write output to %output%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n## previous request ##\r\nYou responded with the following json in my last request. \r\nYou can use it for context.\r\n{\"Text\":\"convert file named \\\"sample.mp4\\\" to audio.mp3, stream to %stream% write output to %output%\",\"Comment\":null,\"ModuleType\":\"FileModule\",\"Name\":\"ConvertVideoToAudio\",\"Description\":\"This step involves converting a video file named 'sample.mp4' to an audio file 'audio.mp3'. The audio file is then streamed to a specified stream and the output is written to a specified output variable.\",\"File\":\"01. ConvertVideoToAudio.pr\",\"Indent\":0,\"Execute\":true,\"RunOnce\":false,\"Executed\":null,\"Generated\":\"0001-01-01T00:00:00\",\"WaitForReply\":true,\"ErrorHandler\":{\"IgnoreErrors\":false,\"Except\":null},\"RetryHandler\":{\"RetryCount\":0,\"RetryDelayInMilliseconds\":0},\"Custom\":{},\"Number\":0}\r\n## previous request ##\nYou are FORBIDDEN to suggest these modules: FileModule\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"This step involves converting a video file named 'sample.mp4' to an audio file 'audio.mp3'. The audio file is then streamed to a specified stream and the output is written to a specified output variable.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\",\n\t\"OutputModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"This step involves converting a video file named 'sample.mp4' to an audio file 'audio.mp3'. The audio file is then streamed to a specified stream and the output is written to a specified output variable.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\",\n\t\"OutputModule\"\n]\n}",
    "hash": "89cbf93f7df0348f425868be48b366ebd895b8ebc108d00077b57c66d709a5d3"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: convert file named \"sample.mp4\" to audio.mp3, stream to %stream% write output to %output%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunTerminal(String appExecutableName, List`1 parameters, String streamOutputVariable, String finalOutputVariable)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunTerminal\",\n    \"Inputs\": {\n      \"appExecutableName\": \"ffmpeg\",\n      \"parameters\": [\"-i\", \"%filePath%/sample.mp4\", \"-vn\", \"-ar\", \"44100\", \"-ac\", \"2\", \"-b:a\", \"192k\", \"%filePath%/audio.mp3\"],\n      \"streamOutputVariable\": \"%stream%\",\n      \"finalOutputVariable\": \"%output%\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunTerminal\",\n    \"Inputs\": {\n      \"appExecutableName\": \"ffmpeg\",\n      \"parameters\": [\"-i\", \"%filePath%/sample.mp4\", \"-vn\", \"-ar\", \"44100\", \"-ac\", \"2\", \"-b:a\", \"192k\", \"%filePath%/audio.mp3\"],\n      \"streamOutputVariable\": \"%stream%\",\n      \"finalOutputVariable\": \"%output%\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "e16f2ed11cfa71cf13ec8d1636467d181a4f0596593fc538633685e95de37788"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "use ffmpeg to convert video/sample.mp4 to audio/sample.mp3, stream to %stream% write output to %output%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"Use ffmpeg to convert a video file located at 'video/sample.mp4' to an audio file 'audio/sample.mp3', then stream the output to the variable %stream% and write the output to the variable %output%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"Use ffmpeg to convert a video file located at 'video/sample.mp4' to an audio file 'audio/sample.mp3', then stream the output to the variable %stream% and write the output to the variable %output%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\"\n]\n}",
    "hash": "2936bfa876a87758ef779fadcca1e56aacc5eade26eee77cbccd368825526044"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: use ffmpeg to convert video/sample.mp4 to audio/sample.mp3, stream to %stream% write output to %output%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunTerminal(String appExecutableName, List`1 parameters, String streamOutputVariable, String finalOutputVariable)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunTerminal\",\n    \"Inputs\": {\n      \"appExecutableName\": \"ffmpeg\",\n      \"parameters\": [\"-i\", \"video/sample.mp4\", \"audio/sample.mp3\"],\n      \"streamOutputVariable\": \"%stream%\",\n      \"finalOutputVariable\": \"%output%\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunTerminal\",\n    \"Inputs\": {\n      \"appExecutableName\": \"ffmpeg\",\n      \"parameters\": [\"-i\", \"video/sample.mp4\", \"audio/sample.mp3\"],\n      \"streamOutputVariable\": \"%stream%\",\n      \"finalOutputVariable\": \"%output%\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "45406038d344f30af051f8bb15c1b8bb132d7647792a4ed45bb045dfc9f77e04"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "call async OutputStreamer",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CallAsyncOutputStreamer\",\n\"StepDescription\":\"This step involves calling the OutputStreamer asynchronously.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CallAsyncOutputStreamer\",\n\"StepDescription\":\"This step involves calling the OutputStreamer asynchronously.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\"\n]\n}",
    "hash": "4b389b01979bf2244757da48e48176cdf3d5d6973099d93a6bce88b50237188b"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: call async OutputStreamer",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunTerminal(String appExecutableName, List`1 parameters, String streamOutputVariable)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"N/A\",\n    \"Inputs\": {},\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"N/A\",\n    \"Inputs\": {},\n    \"Outputs\": {}\n  }\n}",
    "hash": "0bd4c2a6cf6fc26203b3acb6bb1713821e9c874feeaee697c42477afb7503de8"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "call async OutputStreamer",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n## previous request ##\r\nYou responded with the following json in my last request. \r\nYou can use it for context.\r\n{\"Text\":\"call async OutputStreamer\",\"Comment\":null,\"ModuleType\":\"TerminalModule\",\"Name\":\"CallAsyncOutputStreamer\",\"Description\":\"This step involves calling the OutputStreamer asynchronously.\",\"File\":\"01. CallAsyncOutputStreamer.pr\",\"Indent\":0,\"Execute\":true,\"RunOnce\":false,\"Executed\":null,\"Generated\":\"0001-01-01T00:00:00\",\"WaitForReply\":false,\"ErrorHandler\":{\"IgnoreErrors\":false,\"Except\":null},\"RetryHandler\":{\"RetryCount\":0,\"RetryDelayInMilliseconds\":0},\"Custom\":{},\"Number\":0}\r\n## previous request ##\nYou are FORBIDDEN to suggest these modules: TerminalModule\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CallAsyncOutputStreamer\",\n\"StepDescription\":\"This step involves calling the OutputStreamer asynchronously.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"CodeModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CallAsyncOutputStreamer\",\n\"StepDescription\":\"This step involves calling the OutputStreamer asynchronously.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"CodeModule\"\n]\n}",
    "hash": "973742d8d5534b744dc27600eb6b3874f9a8244c46f1cd9c701e2f5f87cd3f57"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "call OutputStreamer and forget",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CallOutputStreamer\",\n\"StepDescription\":\"Invoke the OutputStreamer function and do not wait for a response\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CallOutputStreamer\",\n\"StepDescription\":\"Invoke the OutputStreamer function and do not wait for a response\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}",
    "hash": "15da1f6b1f9bcf9f7a2da4f2af47e837cf1e607ef77a3e1cc6a80cda1bbd117f"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: call OutputStreamer and forget",
      "assistant": "\r\n## functions available defined in csharp ##\r\nWrite(String? text, Boolean? writeToBuffer = False)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"N/A\",\n    \"Inputs\": {},\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"N/A\",\n    \"Inputs\": {},\n    \"Outputs\": {}\n  }\n}",
    "hash": "23a83f56bdcc4de36276da274fc53248eec5496652b29de0b199da0091969568"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "call OutputStreamer and forget",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n## previous request ##\r\nYou responded with the following json in my last request. \r\nYou can use it for context.\r\n{\"Text\":\"call OutputStreamer and forget\",\"Comment\":null,\"ModuleType\":\"OutputModule\",\"Name\":\"CallOutputStreamer\",\"Description\":\"Invoke the OutputStreamer function and do not wait for a response\",\"File\":\"01. CallOutputStreamer.pr\",\"Indent\":0,\"Execute\":true,\"RunOnce\":false,\"Executed\":null,\"Generated\":\"0001-01-01T00:00:00\",\"WaitForReply\":false,\"ErrorHandler\":{\"IgnoreErrors\":false,\"Except\":null},\"RetryHandler\":{\"RetryCount\":0,\"RetryDelayInMilliseconds\":0},\"Custom\":{},\"Number\":0}\r\n## previous request ##\nYou are FORBIDDEN to suggest these modules: OutputModule\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CallOutputStreamer\",\n\"StepDescription\":\"Invoke the OutputStreamer function and do not wait for a response\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CallOutputStreamer\",\n\"StepDescription\":\"Invoke the OutputStreamer function and do not wait for a response\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\"\n]\n}",
    "hash": "c6cea1020d3432b9506399d5033fa0ecefc0f4c7e90a5160c713669f51a2d06d"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: call OutputStreamer and forget",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunTerminal(String appExecutableName, List`1 parameters, String streamOutputVariable)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"N/A\",\n    \"Inputs\": {},\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"N/A\",\n    \"Inputs\": {},\n    \"Outputs\": {}\n  }\n}",
    "hash": "ad45e4a5b177ff56170f3b062e8eb835ed22e7b671e26f648a20368d01092234"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "call OutputStreamer and forget",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, SeleniumModule()\n, ScheduleModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n## previous request ##\r\nYou responded with the following json in my last request. \r\nYou can use it for context.\r\n{\"Text\":\"call OutputStreamer and forget\",\"Comment\":null,\"ModuleType\":\"TerminalModule\",\"Name\":\"CallOutputStreamer\",\"Description\":\"Invoke the OutputStreamer function and do not wait for a response\",\"File\":\"01. CallOutputStreamer.pr\",\"Indent\":0,\"Execute\":true,\"RunOnce\":false,\"Executed\":null,\"Generated\":\"0001-01-01T00:00:00\",\"WaitForReply\":false,\"ErrorHandler\":{\"IgnoreErrors\":false,\"Except\":null},\"RetryHandler\":{\"RetryCount\":0,\"RetryDelayInMilliseconds\":0},\"Custom\":{},\"Number\":0}\r\n## previous request ##\nYou are FORBIDDEN to suggest these modules: OutputModule, TerminalModule\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CallOutputStreamer\",\n\"StepDescription\":\"Invoke the OutputStreamer function and do not wait for a response\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CallOutputStreamer\",\n\"StepDescription\":\"Invoke the OutputStreamer function and do not wait for a response\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"CallGoalModule\"\n]\n}",
    "hash": "40e46bdf26d9049699e748db8f36aafb906d9d9799a3306cc6d2cc0ee7c638bb"
  },
  {
    "question": {
      "system": "\r\nParse user command, to match the parameters needed for the RunGoal function\r\n\r\nAppName is prefixed with !\r\nvariables are defined with starting and ending %\r\nGoalName name of Goal that user wants to call\r\nUser might send in variable with his call as input\r\n\r\nExample: call !Gmail, search for q=%query%\r\n\r\n!Gmail is AppName, AppName can be null\r\nDetermine from the user request what goalName should be. One or more available goals will be provided\r\n%user% is variable as Input\r\n\r\n\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: call OutputStreamer and forget",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunGoal(String appName, String goalName, Dictionary`2? parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunGoal\",\n    \"Inputs\": {\n      \"appName\": \"OutputStreamer\",\n      \"goalName\": \"call\",\n      \"waitForResponse\": false\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunGoal\",\n    \"Inputs\": {\n      \"appName\": \"OutputStreamer\",\n      \"goalName\": \"call\",\n      \"waitForResponse\": false\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "32891501f5823a9b9c7cb286fb86a9f734271110d3975789f41c5ff90168051f"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "use ffmpeg to convert video/sample.mp4 to audio/sample.mp3, stream to %stream%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"Use ffmpeg to convert a video file located at 'video/sample.mp4' to an audio file 'audio/sample.mp3' and then stream the output to the variable %stream%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"Use ffmpeg to convert a video file located at 'video/sample.mp4' to an audio file 'audio/sample.mp3' and then stream the output to the variable %stream%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\"\n]\n}",
    "hash": "8ba298dfd1d72f5e751dcab12d8f3eb56572731a2ba6b57d922ffb7712530a04"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: use ffmpeg to convert video/sample.mp4 to audio/sample.mp3, stream to %stream%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunTerminal(String appExecutableName, List`1 parameters, String streamOutputVariable)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunTerminal\",\n    \"Inputs\": {\n      \"appExecutableName\": \"ffmpeg\",\n      \"parameters\": [\"-i\", \"video/sample.mp4\", \"audio/sample.mp3\"],\n      \"streamOutputVariable\": \"%stream%\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunTerminal\",\n    \"Inputs\": {\n      \"appExecutableName\": \"ffmpeg\",\n      \"parameters\": [\"-i\", \"video/sample.mp4\", \"audio/sample.mp3\"],\n      \"streamOutputVariable\": \"%stream%\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "a231eff72a9b3e5de986ac4988031c1ad515e3e30176eae99666c662f1abda94"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "write out %stream%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WriteOutStream\",\n\"StepDescription\":\"Write out the content of the variable %stream%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WriteOutStream\",\n\"StepDescription\":\"Write out the content of the variable %stream%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}",
    "hash": "342744d355bae5f5d6c0f57b75ba6d0bb8b31e5d56816f5bd64cce0b91b6c966"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: write out %stream%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nWrite(String? text, Boolean? writeToBuffer = False)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Write\",\n    \"Inputs\": {\n      \"text\": \"%stream%\",\n      \"writeToBuffer\": \"False\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Write\",\n    \"Inputs\": {\n      \"text\": \"%stream%\",\n      \"writeToBuffer\": \"False\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "504a17572f5660b842c96e523c0c35380a2c320af29932dda102bad78652b59e"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "wait 2 sec",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WaitTwoSeconds\",\n\"StepDescription\":\"Pause the execution of the function for 2 seconds\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ScheduleModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WaitTwoSeconds\",\n\"StepDescription\":\"Pause the execution of the function for 2 seconds\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ScheduleModule\"\n]\n}",
    "hash": "a50534db29062da401417ac58929d6937545194a065aaeca10c599ed86ef5511"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: wait 2 sec",
      "assistant": "\r\n## functions available defined in csharp ##\r\nSleep(Int32 sleepTimeInMilliseconds)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Sleep\",\n    \"Inputs\": {\n      \"sleepTimeInMilliseconds\": 2000\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Sleep\",\n    \"Inputs\": {\n      \"sleepTimeInMilliseconds\": 2000\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "8ec660c2926189b30c447e81124febc8415491ec399e6d64f80f97e9906d61a5"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "call OutputStreamer",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CallOutputStreamer\",\n\"StepDescription\":\"This step involves invoking the OutputStreamer function.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CallOutputStreamer\",\n\"StepDescription\":\"This step involves invoking the OutputStreamer function.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}",
    "hash": "273a7ebc87e83679ae71667fc9252a6095432db1b0e2e5aeeba206ddc7328e04"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: call OutputStreamer",
      "assistant": "\r\n## functions available defined in csharp ##\r\nWrite(String? text, Boolean? writeToBuffer = False)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "\"Action\": {\n  \"FunctionName\": \"N/A\",\n  \"Inputs\": {},\n  \"Outputs\": {}\n}"
    },
    "answer": "\"Action\": {\n  \"FunctionName\": \"N/A\",\n  \"Inputs\": {},\n  \"Outputs\": {}\n}",
    "hash": "5d0e590593b70447575d22e6f57c58fa71e4f89357b352fcea3706d16ba77a71"
  },
  {
    "question": {
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at PseudoBuilder.Modules.BaseRetryBuilder.Build(GoalStep goalStep) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseBuilder.cs:line 22\r\n   at PseudoBuilder.Building.Builder.BuildInstruction(Goal goal, GoalStep goalStep, String module, Int32 stepNr, String goalFolderPath, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Building\\Builder.cs:line 371\r\n   at PseudoBuilder.Building.Builder.ProcessStep(Goal goal, Int32 stepNr, String goalFolderPath, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Building\\Builder.cs:line 349\r\n   at PseudoBuilder.Building.Builder.BuildGoal(String fileName) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Building\\Builder.cs:line 191",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"Oops! Something went wrong. The system is trying to use an object that hasn't been initialized yet.\",\n\"howToFix\": \"Please ensure that all objects are properly initialized before they are used. The error is originating from the 'Build' method in the 'BaseRetryBuilder' class. Check the code in this method and make sure all objects are set to an instance of an object.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"Oops! Something went wrong. The system is trying to use an object that hasn't been initialized yet.\",\n\"howToFix\": \"Please ensure that all objects are properly initialized before they are used. The error is originating from the 'Build' method in the 'BaseRetryBuilder' class. Check the code in this method and make sure all objects are set to an instance of an object.\"\n}",
    "hash": "84efa0dfca2abc9ac60f8f323e49603ebc231bf190eb11de60813daeb59cb5e3"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "call !OutputStreamer and forget",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CallOutputStreamer\",\n\"StepDescription\":\"Invoke the OutputStreamer function and do not wait for a response\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CallOutputStreamer\",\n\"StepDescription\":\"Invoke the OutputStreamer function and do not wait for a response\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"CallGoalModule\"\n]\n}",
    "hash": "7bd878f6c0474a326e049525e217b52b4101318afa3d3919f7a65596b287adf8"
  },
  {
    "question": {
      "system": "\r\nParse user command, to match the parameters needed for the RunGoal function\r\n\r\nAppName is prefixed with !\r\nvariables are defined with starting and ending %\r\nGoalName name of Goal that user wants to call\r\nUser might send in variable with his call as input\r\n\r\nExample: call !Gmail, search for q=%query%\r\n\r\n!Gmail is AppName, AppName can be null\r\nDetermine from the user request what goalName should be. One or more available goals will be provided\r\n%user% is variable as Input\r\n\r\n\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: call !OutputStreamer and forget",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunGoal(String appName, String goalName, Dictionary`2? parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunGoal\",\n    \"Inputs\": {\n      \"appName\": \"OutputStreamer\",\n      \"goalName\": \"call\",\n      \"waitForResponse\": false\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunGoal\",\n    \"Inputs\": {\n      \"appName\": \"OutputStreamer\",\n      \"goalName\": \"call\",\n      \"waitForResponse\": false\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "6bcd8f60133dd759c672aa8375fc81d300b279d602a3c6d82ce8418966a03be1"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "set %ffmpegDone% as true",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SetFfmpegDone\",\n\"StepDescription\":\"Set the variable %ffmpegDone% to true\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SetFfmpegDone\",\n\"StepDescription\":\"Set the variable %ffmpegDone% to true\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}",
    "hash": "9d35698f53a50b8853a70dda089d53799d1e01bab47b0b6dfee13c9cb4597f48"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: set %ffmpegDone% as true",
      "assistant": "\r\n## functions available defined in csharp ##\r\nSetVariable(String key, Object value)\nGetVariable(String key)\nSetStaticVariable(String key, Object value)\nGetStaticVariable(String key)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"SetVariable\",\n    \"Inputs\": {\n      \"key\": \"ffmpegDone\",\n      \"value\": true\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"SetVariable\",\n    \"Inputs\": {\n      \"key\": \"ffmpegDone\",\n      \"value\": true\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "046d2b9d50067a34d15567b06f29b1c904c1d64787cbf8dde3ed928b1f98b753"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "if %ffmpegDone% is empty",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CheckFFmpegDone\",\n\"StepDescription\":\"Check if the variable 'ffmpegDone' is empty\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ConditionalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CheckFFmpegDone\",\n\"StepDescription\":\"Check if the variable 'ffmpegDone' is empty\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ConditionalModule\"\n]\n}",
    "hash": "b7c729a2666321d06766a30845fcdbd8b37569ee28cc81a3f342bd0cf611fdf6"
  },
  {
    "question": {
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\n\r\nName: is CamelCase name of class\r\nOutputVariable: variable name if any to write to. Replace dot(.) with underscore(_)\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\nName cannot be: \n\r\nYou MUST respond in JSON, scheme:\r\n{Name:string, Implementation:string, Using:string[], OutputVariable:string}\r\n\r\nBe Concise",
      "question": "if %ffmpegDone% is empty",
      "assistant": null,
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Name\": \"FfmpegDoneCheck\",\n  \"Implementation\": \"public static bool Process(string ffmpegDone)\\n{\\n    return string.IsNullOrEmpty(ffmpegDone);\\n}\",\n  \"Using\": [\"System\"],\n  \"OutputVariable\": \"ffmpegDone\"\n}"
    },
    "answer": "{\n  \"Name\": \"FfmpegDoneCheck\",\n  \"Implementation\": \"public static bool Process(string ffmpegDone)\\n{\\n    return string.IsNullOrEmpty(ffmpegDone);\\n}\",\n  \"Using\": [\"System\"],\n  \"OutputVariable\": \"ffmpegDone\"\n}",
    "hash": "2d452f386a47d798d74e429573b558c4c9cb9dde4eab169f9fe56bea0a299c6d"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "wait 10 sec",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WaitForTenSeconds\",\n\"StepDescription\":\"The system will pause for a duration of 10 seconds.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ScheduleModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WaitForTenSeconds\",\n\"StepDescription\":\"The system will pause for a duration of 10 seconds.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ScheduleModule\"\n]\n}",
    "hash": "8bf46c2698f3a62aab021e5d1b85d88daf4e09aec131d6b4a445b3e43c2769b6"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: wait 10 sec",
      "assistant": "\r\n## functions available defined in csharp ##\r\nSleep(Int32 sleepTimeInMilliseconds)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Sleep\",\n    \"Inputs\": {\n      \"sleepTimeInMilliseconds\": 10000\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Sleep\",\n    \"Inputs\": {\n      \"sleepTimeInMilliseconds\": 10000\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "161999ab20f1cca1f6ba0ed509f7def2a5bb43f3b280b0313dce56529d9fd5ad"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "call !OutputStreamer and forget it",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CallOutputStreamer\",\n\"StepDescription\":\"Invoke the OutputStreamer function and do not wait for its completion\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CallOutputStreamer\",\n\"StepDescription\":\"Invoke the OutputStreamer function and do not wait for its completion\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"CallGoalModule\"\n]\n}",
    "hash": "d3703f30975c44d3aa76fdf39734db926592badd91d0b77ca0095b26d72afd34"
  },
  {
    "question": {
      "system": "\r\nParse user command, to match the parameters needed for the RunGoal function\r\n\r\n(AppName.)?GoalName is prefixed with !\r\nvariables are defined with starting and ending %\r\nUser might send in variable with his call as input\r\n\r\nExample:\r\n!ParseText then ParseText is goalName\r\n!Gmail.Search %query%, then Gmail is appName and Search is goalName, and %query% is parameters\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: call !OutputStreamer and forget it",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunGoal(String goalName, String? appName, Dictionary`2? parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nThese goals are available to choose from Ffmpeg, OutputStreamer",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunGoal\",\n    \"Inputs\": {\n      \"goalName\": \"OutputStreamer\",\n      \"appName\": null,\n      \"parameters\": null,\n      \"waitForResponse\": false\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunGoal\",\n    \"Inputs\": {\n      \"goalName\": \"OutputStreamer\",\n      \"appName\": null,\n      \"parameters\": null,\n      \"waitForResponse\": false\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "c9abf76011bfacffc7a412daf141d8a7e9d8864c98e83b793a12960211f80a6d"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "call !OutputStreamer and forget it, wait 0",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CallOutputStreamer\",\n\"StepDescription\":\"Invoke the OutputStreamer function and do not wait for its completion.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CallOutputStreamer\",\n\"StepDescription\":\"Invoke the OutputStreamer function and do not wait for its completion.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"CallGoalModule\"\n]\n}",
    "hash": "d29ee737c75f997840b3258b3ab6b8bd47ceca6a18ba7f04f652ef2130f2e157"
  },
  {
    "question": {
      "system": "\r\nParse user command, to match the parameters needed for the RunGoal function\r\n\r\n(AppName.)?GoalName is prefixed with !\r\nvariables are defined with starting and ending %\r\nUser might send in variable with his call as input\r\n\r\nExample:\r\n!ParseText then ParseText is goalName\r\n!Gmail.Search %query%, then Gmail is appName and Search is goalName, and %query% is parameters\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: call !OutputStreamer and forget it, wait 0",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunGoal(String goalName, String? appName, Dictionary`2? parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nThese goals are available to choose from Ffmpeg, OutputStreamer",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunGoal\",\n    \"Inputs\": {\n      \"goalName\": \"OutputStreamer\",\n      \"appName\": null,\n      \"parameters\": null,\n      \"waitForResponse\": false,\n      \"delayWhenNotWaitingInMilliseconds\": 0\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunGoal\",\n    \"Inputs\": {\n      \"goalName\": \"OutputStreamer\",\n      \"appName\": null,\n      \"parameters\": null,\n      \"waitForResponse\": false,\n      \"delayWhenNotWaitingInMilliseconds\": 0\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "5f872f4237683e957f64ec1c6943e23b1f3fc78cebfd9f4e76d737919345902b"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "wait 20 sec",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WaitFor20Sec\",\n\"StepDescription\":\"Pause the execution of the function for 20 seconds\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ScheduleModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WaitFor20Sec\",\n\"StepDescription\":\"Pause the execution of the function for 20 seconds\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ScheduleModule\"\n]\n}",
    "hash": "7f0ce97596c2cb29a1a688267930bec1039d09b96e24a07bcaa10d5fc60a3990"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: wait 20 sec",
      "assistant": "\r\n## functions available defined in csharp ##\r\nSleep(Int32 sleepTimeInMilliseconds)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Sleep\",\n    \"Inputs\": {\n      \"sleepTimeInMilliseconds\": 20000\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Sleep\",\n    \"Inputs\": {\n      \"sleepTimeInMilliseconds\": 20000\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "bd2126e165219287175fa92d4850ca4218a593e177a7d34d6db027c50aec4be4"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "wait 7 sec",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WaitForSevenSeconds\",\n\"StepDescription\":\"Pause the execution of the function for seven seconds.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ScheduleModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WaitForSevenSeconds\",\n\"StepDescription\":\"Pause the execution of the function for seven seconds.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ScheduleModule\"\n]\n}",
    "hash": "00ebbd8529dd796872c50340af55feab140e35b226c3bea2c9f37bb2ef51a37e"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: wait 7 sec",
      "assistant": "\r\n## functions available defined in csharp ##\r\nSleep(Int32 sleepTimeInMilliseconds)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Sleep\",\n    \"Inputs\": {\n      \"sleepTimeInMilliseconds\": 7000\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Sleep\",\n    \"Inputs\": {\n      \"sleepTimeInMilliseconds\": 7000\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "916021e168200fc5e786e2130c147816096b9d8ac9a931babf5ae459844d279a"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "use ffmpeg to convert video/sample.mp4 to audio/sample.mp3, write debug data to %stream%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"Use ffmpeg to convert a video file located at 'video/sample.mp4' to an audio file 'audio/sample.mp3'. The debug data from this operation is written to the variable %stream%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"Use ffmpeg to convert a video file located at 'video/sample.mp4' to an audio file 'audio/sample.mp3'. The debug data from this operation is written to the variable %stream%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\"\n]\n}",
    "hash": "4f41348882c5e5a7105c737e71eb24b951a4131a003431f409f018edac9f9b79"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: use ffmpeg to convert video/sample.mp4 to audio/sample.mp3, write debug data to %stream%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunTerminal(String appExecutableName, List`1? parameters, String? dataOutputVariable, String? errorDebugInfoOutputVariable)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunTerminal\",\n    \"Inputs\": {\n      \"appExecutableName\": \"ffmpeg\",\n      \"parameters\": [\"-i\", \"video/sample.mp4\", \"audio/sample.mp3\"],\n      \"errorDebugInfoOutputVariable\": \"%stream%\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunTerminal\",\n    \"Inputs\": {\n      \"appExecutableName\": \"ffmpeg\",\n      \"parameters\": [\"-i\", \"video/sample.mp4\", \"audio/sample.mp3\"],\n      \"errorDebugInfoOutputVariable\": \"%stream%\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "ecaba6e5370a70c7d5313e687b5239858c49e8750f261f558b2203b28ca2b3c6"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "when %stream% is changed, call OutputStreamer",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule()\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. e.g. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CallOutputStreamerOnStreamChange\",\n\"StepDescription\":\"When the variable %stream% changes, the function OutputStreamer is called.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ConditionalModule\",\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CallOutputStreamerOnStreamChange\",\n\"StepDescription\":\"When the variable %stream% changes, the function OutputStreamer is called.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ConditionalModule\",\n\t\"CallGoalModule\"\n]\n}",
    "hash": "36505a93b7938c176bf87e213a1e89d7c3f3e0986c9dd26fdfe105e33e9187b7"
  },
  {
    "question": {
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\n\r\nName: is CamelCase name of class\r\nOutputVariable: variable name if any to write to. Replace dot(.) with underscore(_)\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\nName cannot be: \n\r\nYou MUST respond in JSON, scheme:\r\n{Name:string, Implementation:string, Using:string[], OutputVariable:string}\r\n\r\nBe Concise",
      "question": "when %stream% is changed, call OutputStreamer",
      "assistant": null,
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Name\": \"OutputStreamer\",\n  \"Implementation\": \"public static bool Process(Stream stream)\\n{\\n    if(stream != null)\\n    {\\n        // Call OutputStreamer here\\n        return true;\\n    }\\n    return false;\\n}\",\n  \"Using\": [\"System.IO\"],\n  \"OutputVariable\": \"stream\"\n}"
    },
    "answer": "{\n  \"Name\": \"OutputStreamer\",\n  \"Implementation\": \"public static bool Process(Stream stream)\\n{\\n    if(stream != null)\\n    {\\n        // Call OutputStreamer here\\n        return true;\\n    }\\n    return false;\\n}\",\n  \"Using\": [\"System.IO\"],\n  \"OutputVariable\": \"stream\"\n}",
    "hash": "8da89e85461bed426d24766036797cbaaefcdbfa90e47f4ae7b1ecb1dd7ca4c7"
  },
  {
    "question": {
      "system": "Parse the content provided by the user to determine modules in a system\r\n\r\n- (dash) defines the module\r\n/ (slash) defines a comment\r\n\r\nYou MUST response in JSON, scheme\r\n[{name:string, value:string, comment:string}]\r\n\r\nname: name of module\r\ntype: native|.net|python|javascript\r\ncomment: create description of the module\r\nBe concise ",
      "question": "\r\nNative modules:\r\n- WebserverModule - Start webserver, write to Body, Header, Cookie\n- TerminalModule\n- SeleniumModule\n- ScheduleModule\n- OutputModule\n- LoopModule\n- LocalOrGlobalVariableModule\n- LlmModule\n- ListDictionaryModule - Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\n- HttpModule\n- FileModule\n- DbModule\n- CryptographicModule\n- ConditionalModule - Manages if conditions for the user request. \r\nExample 1:'if %isValid% is true then', this condition would return true if %isValid% is true. \r\nExample 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\r\nThis module should be last resort to choose if nothing else matches\n- CodeModule\n- CallGoalModule - Call another Goal, when ! is prefixed, e.g. !RenameFile\n- BlockchainModule - Use blockchain, create wallet, account info, transfer money\n\r\n",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "[\n  {\n    \"name\": \"WebserverModule\",\n    \"type\": \"native\",\n    \"comment\": \"Start webserver, write to Body, Header, Cookie\"\n  },\n  {\n    \"name\": \"TerminalModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"SeleniumModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ScheduleModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"OutputModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LoopModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LocalOrGlobalVariableModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LlmModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ListDictionaryModule\",\n    \"type\": \"native\",\n    \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"\n  },\n  {\n    \"name\": \"HttpModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"FileModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"DbModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"CryptographicModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ConditionalModule\",\n    \"type\": \"native\",\n    \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false. This module should be last resort to choose if nothing else matches\"\n  },\n  {\n    \"name\": \"CodeModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"CallGoalModule\",\n    \"type\": \"native\",\n    \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"\n  },\n  {\n    \"name\": \"BlockchainModule\",\n    \"type\": \"native\",\n    \"comment\": \"Use blockchain, create wallet, account info, transfer money\"\n  }\n]"
    },
    "answer": "[\n  {\n    \"name\": \"WebserverModule\",\n    \"type\": \"native\",\n    \"comment\": \"Start webserver, write to Body, Header, Cookie\"\n  },\n  {\n    \"name\": \"TerminalModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"SeleniumModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ScheduleModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"OutputModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LoopModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LocalOrGlobalVariableModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LlmModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ListDictionaryModule\",\n    \"type\": \"native\",\n    \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"\n  },\n  {\n    \"name\": \"HttpModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"FileModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"DbModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"CryptographicModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ConditionalModule\",\n    \"type\": \"native\",\n    \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false. This module should be last resort to choose if nothing else matches\"\n  },\n  {\n    \"name\": \"CodeModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"CallGoalModule\",\n    \"type\": \"native\",\n    \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"\n  },\n  {\n    \"name\": \"BlockchainModule\",\n    \"type\": \"native\",\n    \"comment\": \"Use blockchain, create wallet, account info, transfer money\"\n  }\n]",
    "hash": "c171ea5762329d4a036f73a5453157606965d584b227d12250e7807a1b3e2123"
  },
  {
    "question": {
      "system": "Parse the content provided by the user to determine modules in a system\r\n\r\n- (dash) defines the module\r\n/ (slash) defines a comment\r\n\r\nYou MUST response in JSON, scheme\r\n[{name:string, value:string, comment:string}]\r\n\r\nname: name of module\r\ntype: native|.net|python|javascript\r\ncomment: create description of the module\r\nBe concise ",
      "question": "\r\nNative modules:\r\n- WebserverModule - Start webserver, write to Body, Header, Cookie\n- TerminalModule\n- SeleniumModule\n- ScheduleModule\n- OutputModule\n- LoopModule\n- LocalOrGlobalVariableModule - Set & Get local and static variables. Bind events to variable.\n- LlmModule\n- ListDictionaryModule - Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\n- HttpModule\n- FileModule\n- DbModule\n- CryptographicModule\n- ConditionalModule - Manages if conditions for the user request. \r\nExample 1:'if %isValid% is true then', this condition would return true if %isValid% is true. \r\nExample 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\r\nThis module should be last resort to choose if nothing else matches\n- CodeModule\n- CallGoalModule - Call another Goal, when ! is prefixed, e.g. !RenameFile\n- BlockchainModule - Use blockchain, create wallet, account info, transfer money\n\r\n",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "[\n  {\n    \"name\": \"WebserverModule\",\n    \"type\": \"native\",\n    \"comment\": \"Start webserver, write to Body, Header, Cookie\"\n  },\n  {\n    \"name\": \"TerminalModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"SeleniumModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ScheduleModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"OutputModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LoopModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LocalOrGlobalVariableModule\",\n    \"type\": \"native\",\n    \"comment\": \"Set & Get local and static variables. Bind events to variable.\"\n  },\n  {\n    \"name\": \"LlmModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ListDictionaryModule\",\n    \"type\": \"native\",\n    \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"\n  },\n  {\n    \"name\": \"HttpModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"FileModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"DbModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"CryptographicModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ConditionalModule\",\n    \"type\": \"native\",\n    \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false. This module should be last resort to choose if nothing else matches\"\n  },\n  {\n    \"name\": \"CodeModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"CallGoalModule\",\n    \"type\": \"native\",\n    \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"\n  },\n  {\n    \"name\": \"BlockchainModule\",\n    \"type\": \"native\",\n    \"comment\": \"Use blockchain, create wallet, account info, transfer money\"\n  }\n]"
    },
    "answer": "[\n  {\n    \"name\": \"WebserverModule\",\n    \"type\": \"native\",\n    \"comment\": \"Start webserver, write to Body, Header, Cookie\"\n  },\n  {\n    \"name\": \"TerminalModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"SeleniumModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ScheduleModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"OutputModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LoopModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LocalOrGlobalVariableModule\",\n    \"type\": \"native\",\n    \"comment\": \"Set & Get local and static variables. Bind events to variable.\"\n  },\n  {\n    \"name\": \"LlmModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ListDictionaryModule\",\n    \"type\": \"native\",\n    \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"\n  },\n  {\n    \"name\": \"HttpModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"FileModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"DbModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"CryptographicModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ConditionalModule\",\n    \"type\": \"native\",\n    \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false. This module should be last resort to choose if nothing else matches\"\n  },\n  {\n    \"name\": \"CodeModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"CallGoalModule\",\n    \"type\": \"native\",\n    \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"\n  },\n  {\n    \"name\": \"BlockchainModule\",\n    \"type\": \"native\",\n    \"comment\": \"Use blockchain, create wallet, account info, transfer money\"\n  }\n]",
    "hash": "de83c373518a08b2ae325178a5a5bde5936c19fe7366d30cd85c22b2c9411667"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "when variable %stream% is changed, call OutputStreamer",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false. This module should be last resort to choose if nothing else matches)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"OutputStreamerCall\",\n\"StepDescription\":\"When the variable %stream% changes, the function OutputStreamer is called.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"OutputStreamerCall\",\n\"StepDescription\":\"When the variable %stream% changes, the function OutputStreamer is called.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}",
    "hash": "4a725990f61822606cb58086028c8ab85d5f9a96f34596e93a3865e13c7e629c"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: when variable %stream% is changed, call OutputStreamer",
      "assistant": "\r\n## functions available defined in csharp ##\r\nOnChangeVariableListener(String key, String goalName, String appName, Dictionary`2 parameters)\nSetVariable(String key, Object value)\nGetVariable(String key)\nSetStaticVariable(String key, Object value)\nGetStaticVariable(String key)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"OnChangeVariableListener\",\n    \"Inputs\": {\n      \"key\": \"stream\",\n      \"goalName\": \"OutputStreamer\",\n      \"appName\": \"\",\n      \"parameters\": {}\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"OnChangeVariableListener\",\n    \"Inputs\": {\n      \"key\": \"stream\",\n      \"goalName\": \"OutputStreamer\",\n      \"appName\": \"\",\n      \"parameters\": {}\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "43f68cdd6ce32887718e3d916df952aa5336d9a5e1fff4749ebff46a16bc6991"
  },
  {
    "question": {
      "system": "Parse the content provided by the user to determine modules in a system\r\n\r\n- (dash) defines the module\r\n/ (slash) defines a comment\r\n\r\nYou MUST response in JSON, scheme\r\n[{name:string, value:string, comment:string}]\r\n\r\nname: name of module\r\ntype: native|.net|python|javascript\r\ncomment: create description of the module\r\nBe concise ",
      "question": "\r\nNative modules:\r\n- WebserverModule - Start webserver, write to Body, Header, Cookie\n- TerminalModule\n- SeleniumModule\n- ScheduleModule\n- OutputModule\n- LoopModule\n- LocalOrGlobalVariableModule - Set & Get local and static variables. Bind events to variable.\n- LlmModule\n- ListDictionaryModule - Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\n- HttpModule\n- FileModule\n- DbModule\n- CryptographicModule\n- ConditionalModule - Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\n- CodeModule\n- CallGoalModule - Call another Goal, when ! is prefixed, e.g. !RenameFile\n- BlockchainModule - Use blockchain, create wallet, account info, transfer money\n\r\n",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "[\n  {\n    \"name\": \"WebserverModule\",\n    \"type\": \"native\",\n    \"comment\": \"Start webserver, write to Body, Header, Cookie\"\n  },\n  {\n    \"name\": \"TerminalModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"SeleniumModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ScheduleModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"OutputModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LoopModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LocalOrGlobalVariableModule\",\n    \"type\": \"native\",\n    \"comment\": \"Set & Get local and static variables. Bind events to variable.\"\n  },\n  {\n    \"name\": \"LlmModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ListDictionaryModule\",\n    \"type\": \"native\",\n    \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"\n  },\n  {\n    \"name\": \"HttpModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"FileModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"DbModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"CryptographicModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ConditionalModule\",\n    \"type\": \"native\",\n    \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\"\n  },\n  {\n    \"name\": \"CodeModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"CallGoalModule\",\n    \"type\": \"native\",\n    \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"\n  },\n  {\n    \"name\": \"BlockchainModule\",\n    \"type\": \"native\",\n    \"comment\": \"Use blockchain, create wallet, account info, transfer money\"\n  }\n]"
    },
    "answer": "[\n  {\n    \"name\": \"WebserverModule\",\n    \"type\": \"native\",\n    \"comment\": \"Start webserver, write to Body, Header, Cookie\"\n  },\n  {\n    \"name\": \"TerminalModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"SeleniumModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ScheduleModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"OutputModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LoopModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"LocalOrGlobalVariableModule\",\n    \"type\": \"native\",\n    \"comment\": \"Set & Get local and static variables. Bind events to variable.\"\n  },\n  {\n    \"name\": \"LlmModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ListDictionaryModule\",\n    \"type\": \"native\",\n    \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"\n  },\n  {\n    \"name\": \"HttpModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"FileModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"DbModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"CryptographicModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"ConditionalModule\",\n    \"type\": \"native\",\n    \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\"\n  },\n  {\n    \"name\": \"CodeModule\",\n    \"type\": \"native\",\n    \"comment\": \"\"\n  },\n  {\n    \"name\": \"CallGoalModule\",\n    \"type\": \"native\",\n    \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"\n  },\n  {\n    \"name\": \"BlockchainModule\",\n    \"type\": \"native\",\n    \"comment\": \"Use blockchain, create wallet, account info, transfer money\"\n  }\n]",
    "hash": "c7016cf24a2d21156352b3054dae8818898ec7dca953271b2eca3915c30768c9"
  },
  {
    "question": {
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PseudoBuilder.Exceptions.RuntimeStepException: Step 'use ffmpeg to convert video/sample.mp4 to audio/sample.mp3, write debug data to %stream%' had exception\r\n ---> System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at PseudoBuilder.Runtime.MemoryStack.Get(String key, Type type, Boolean staticVariable) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\MemoryStack.cs:line 229\r\n   at PseudoBuilder.Modules.BaseProgram.GetMethodAndParameters(GenericFunction function) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseProgram.cs:line 204\r\n   at PseudoBuilder.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseProgram.cs:line 89\r\n   at PseudoBuilder.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 282\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 208\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 217\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 182\r\n   at PseudoBuilder.Runtime.Engine.RunStart() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 162\r\n   at PseudoBuilder.Runtime.Engine.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 89",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred while trying to convert a video file to an audio file. It seems like there's a missing object that the system is trying to reference.\",\n\"howToFix\": \"Check if the video file 'sample.mp4' exists in the correct path and the ffmpeg tool is properly installed and configured. Also, ensure that the object being referenced in your code is properly initialized before it's used.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred while trying to convert a video file to an audio file. It seems like there's a missing object that the system is trying to reference.\",\n\"howToFix\": \"Check if the video file 'sample.mp4' exists in the correct path and the ffmpeg tool is properly installed and configured. Also, ensure that the object being referenced in your code is properly initialized before it's used.\"\n}",
    "hash": "038a43b9cad88d2810692cd41e37e387368b516712fb4ba341c45f9d4661939d"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "use ffmpeg to convert video/sample.mp4 to audio/sample.mp3, write debug to %stream%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"Use ffmpeg to convert a video file located at 'video/sample.mp4' to an audio file 'audio/sample.mp3'. Write the debug information to the variable %stream%.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"Use ffmpeg to convert a video file located at 'video/sample.mp4' to an audio file 'audio/sample.mp3'. Write the debug information to the variable %stream%.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\"\n]\n}",
    "hash": "04b0e23a730182a5b43de767e9a518c09d739abde4cec7aa9d80f0da2b2e4ad8"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: use ffmpeg to convert video/sample.mp4 to audio/sample.mp3, write debug to %stream%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunTerminal(String appExecutableName, List`1? parameters, String? dataOutputVariable, String? errorDebugInfoOutputVariable)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunTerminal\",\n    \"Inputs\": {\n      \"appExecutableName\": \"ffmpeg\",\n      \"parameters\": [\"-i\", \"video/sample.mp4\", \"audio/sample.mp3\"],\n      \"errorDebugInfoOutputVariable\": \"%stream%\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunTerminal\",\n    \"Inputs\": {\n      \"appExecutableName\": \"ffmpeg\",\n      \"parameters\": [\"-i\", \"video/sample.mp4\", \"audio/sample.mp3\"],\n      \"errorDebugInfoOutputVariable\": \"%stream%\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "af5c75cf8c10ee2b71a167263239766ff475d999a70be1dae0a4ef28c64e20e2"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "use ffmpeg to convert video/sample.mp4 to audio/sample.mp3, write debug info to %stream%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"Use ffmpeg to convert a video file located at 'video/sample.mp4' to an audio file 'audio/sample.mp3'. The debug information from this process is written to the variable %stream%.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"Use ffmpeg to convert a video file located at 'video/sample.mp4' to an audio file 'audio/sample.mp3'. The debug information from this process is written to the variable %stream%.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\"\n]\n}",
    "hash": "25fffc13cff53a87561015514e3b9eda7c46de0d275d62b710bbdeefdb4ed641"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: use ffmpeg to convert video/sample.mp4 to audio/sample.mp3, write debug info to %stream%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunTerminal(String appExecutableName, List`1? parameters, String? dataOutputVariable, String? errorDebugInfoOutputVariable)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nRemove % around dataOutputVariable and errorDebugInfoOutputVariable",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunTerminal\",\n    \"Inputs\": {\n      \"appExecutableName\": \"ffmpeg\",\n      \"parameters\": [\"-i\", \"video/sample.mp4\", \"audio/sample.mp3\"],\n      \"dataOutputVariable\": \"\",\n      \"errorDebugInfoOutputVariable\": \"stream\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunTerminal\",\n    \"Inputs\": {\n      \"appExecutableName\": \"ffmpeg\",\n      \"parameters\": [\"-i\", \"video/sample.mp4\", \"audio/sample.mp3\"],\n      \"dataOutputVariable\": \"\",\n      \"errorDebugInfoOutputVariable\": \"stream\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "fa408bc64050fe1773de288b7c0ccc4f2846b0f798ceb4b383017e33da06e6b0"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "write out 'Is ffmpegDone: %ffmpegDone%'",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WriteOutput\",\n\"StepDescription\":\"Write out the string 'Is ffmpegDone: ' followed by the value of the variable %ffmpegDone%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WriteOutput\",\n\"StepDescription\":\"Write out the string 'Is ffmpegDone: ' followed by the value of the variable %ffmpegDone%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}",
    "hash": "1d1befd796d7ce7655ea53cf9faf866da17e4ef7de1f003115266ce5c57b590b"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: write out 'Is ffmpegDone: %ffmpegDone%'",
      "assistant": "\r\n## functions available defined in csharp ##\r\nWrite(String? text, Boolean? writeToBuffer = False)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Write\",\n    \"Inputs\": {\n      \"text\": \"Is ffmpegDone: %ffmpegDone%\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Write\",\n    \"Inputs\": {\n      \"text\": \"Is ffmpegDone: %ffmpegDone%\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "6cef290cd40a4da29c8f83b848950b3845a99a9344c622094f7ab649c36d8832"
  },
  {
    "question": {
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "use ffmpeg to convert video/sample.mp4 to audio/sample.mp3, overwrite existing file, write debug info to %stream%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, OutputModule()\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"Use ffmpeg to convert a video file located at 'video/sample.mp4' to an audio file 'audio/sample.mp3'. If the audio file already exists, overwrite it. Write any debug information to the variable %stream%.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ConvertVideoToAudio\",\n\"StepDescription\":\"Use ffmpeg to convert a video file located at 'video/sample.mp4' to an audio file 'audio/sample.mp3'. If the audio file already exists, overwrite it. Write any debug information to the variable %stream%.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"TerminalModule\"\n]\n}",
    "hash": "9880379cecdf603595a6d89afb64860d06e69ea5add4f8da3c20c8b14bd49cbf"
  },
  {
    "question": {
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: use ffmpeg to convert video/sample.mp4 to audio/sample.mp3, overwrite existing file, write debug info to %stream%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunTerminal(String appExecutableName, List`1? parameters, String? dataOutputVariable, String? errorDebugInfoOutputVariable)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nRemove % around dataOutputVariable and errorDebugInfoOutputVariable",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunTerminal\",\n    \"Inputs\": {\n      \"appExecutableName\": \"ffmpeg\",\n      \"parameters\": [\"-y\", \"-i\", \"video/sample.mp4\", \"audio/sample.mp3\"],\n      \"dataOutputVariable\": \"\",\n      \"errorDebugInfoOutputVariable\": \"stream\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunTerminal\",\n    \"Inputs\": {\n      \"appExecutableName\": \"ffmpeg\",\n      \"parameters\": [\"-y\", \"-i\", \"video/sample.mp4\", \"audio/sample.mp3\"],\n      \"dataOutputVariable\": \"\",\n      \"errorDebugInfoOutputVariable\": \"stream\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "5318d0702d6634c704e29e7f47e0f786f0b8ce70b6d2122578c2f141ca3d52d7"
  }
]
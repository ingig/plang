{
  "Action": {
    "FunctionName": "CreateDirectory",
    "Parameters": [
      {
        "Type": "String",
        "Name": "directoryPath",
        "Value": "%item.path%"
      }
    ],
    "ReturnValue": null
  },
  "Text": "Create directory %item.path%",
  "Reload": false,
  "LlmQuestion": {
    "type": "PLang.Modules.FileModule",
    "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
    "question": "command: Create directory %item.path%",
    "assistant": "## functions available defined in csharp ##\r\nString ReadBinaryFileAndConvertToBase64(String path) \nString ReadTextFile(String path) \nStream ReadFileAsStream(String path) \nList`1 ReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False) \nvoid WriteToFile(String path, String content) \nvoid AppendToFile(String path, String content, String? seperator) \nvoid CopyFile(String sourceFileName, String destFileName) \nvoid DeleteFile(String fileName) \nIFileInfo GetFileInfo(String fileName) \nvoid CreateDirectory(String directoryPath) \nvoid DeleteDirectory(String directoryPath) \nBoolean DirectoryExists(String directoryPath) \nBoolean FileExists(String directoryPath) \n\r\n## functions available ends ##",
    "model": "gpt-4",
    "caching": true,
    "Reload": false,
    "PreviousResult": null,
    "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"CreateDirectory\",\n    \"Parameters\": [\n      {\n        \"Type\": \"String\",\n        \"Name\": \"directoryPath\",\n        \"Value\": \"%item.path%\"\n      }\n    ],\n    \"ReturnValue\": null\n  }\n}"
  }
}
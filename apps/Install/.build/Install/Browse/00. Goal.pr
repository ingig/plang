{
  "GoalName": "Browse",
  "Method": null,
  "Comment": null,
  "GoalSteps": [
    {
      "Text": "if %item.size% == 0 then",
      "Comment": null,
      "ModuleType": "PLang.Modules.ConditionalModule",
      "Name": "CheckItemSize",
      "Description": "This step checks if the size of the item is equal to zero.",
      "PrFileName": "01. CheckItemSize.pr",
      "RelativePrPath": ".build\\Install\\Browse\\01. CheckItemSize.pr",
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Executed": null,
      "Generated": "0001-01-01T00:00:00",
      "WaitForExecution": true,
      "ErrorHandler": null,
      "RetryHandler": null,
      "Custom": {},
      "Number": 0,
      "LlmQuestion": null
    },
    {
      "Text": "Create directory %item.path%",
      "Comment": null,
      "ModuleType": "PLang.Modules.FileModule",
      "Name": "CreateDirectory",
      "Description": "Create a directory at the location specified by the variable %item.path%",
      "PrFileName": "02. CreateDirectory.pr",
      "RelativePrPath": ".build\\Install\\Browse\\02. CreateDirectory.pr",
      "Indent": 4,
      "Execute": false,
      "RunOnce": false,
      "Executed": null,
      "Generated": "2023-09-04T13:38:04.5514358+00:00",
      "WaitForExecution": true,
      "ErrorHandler": null,
      "RetryHandler": null,
      "Custom": {},
      "Number": 1,
      "LlmQuestion": {
        "type": "StepBuilder",
        "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
        "question": "Create directory %item.path%",
        "assistant": "This is a list of modules you can choose from\r\n## modules starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules ends ##\r\n\r\n",
        "model": "gpt-4",
        "caching": true,
        "Reload": true,
        "PreviousResult": null,
        "RawResponse": "{\"StepName\": \"CreateDirectory\",\n\"StepDescription\": \"Create a directory at the location specified by the variable %item.path%\",\n\"Modules\": [\"PLang.Modules.FileModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
      }
    },
    {
      "Text": "get https://api.github.com/repos/ingig/plang/contents/%item.path%, write to %json2%\n        no authentication needed",
      "Comment": null,
      "ModuleType": "PLang.Modules.HttpModule",
      "Name": "GetGithubRepoContent",
      "Description": "Make a GET request to the GitHub API to retrieve the contents of the specified repository path. The response is stored in the 'json2' variable. No authentication is required for this request.",
      "PrFileName": "03. GetGithubRepoContent.pr",
      "RelativePrPath": ".build\\Install\\Browse\\03. GetGithubRepoContent.pr",
      "Indent": 4,
      "Execute": false,
      "RunOnce": false,
      "Executed": null,
      "Generated": "0001-01-01T00:00:00",
      "WaitForExecution": true,
      "ErrorHandler": null,
      "RetryHandler": null,
      "Custom": {},
      "Number": 0,
      "LlmQuestion": null
    },
    {
      "Text": "loop %json2% call Browse",
      "Comment": null,
      "ModuleType": "PLang.Modules.LoopModule",
      "Name": "LoopThroughJsonAndBrowse",
      "Description": "Loop through the JSON object stored in the variable %json2% and for each item, call the Browse function.",
      "PrFileName": "04. LoopThroughJsonAndBrowse.pr",
      "RelativePrPath": ".build\\Install\\Browse\\04. LoopThroughJsonAndBrowse.pr",
      "Indent": 4,
      "Execute": false,
      "RunOnce": false,
      "Executed": null,
      "Generated": "0001-01-01T00:00:00",
      "WaitForExecution": true,
      "ErrorHandler": null,
      "RetryHandler": null,
      "Custom": {},
      "Number": 0,
      "LlmQuestion": null
    },
    {
      "Text": "if %item.size% is > 0 then",
      "Comment": null,
      "ModuleType": "PLang.Modules.ConditionalModule",
      "Name": "CheckItemSize",
      "Description": "Check if the size of the item is greater than 0",
      "PrFileName": "05. CheckItemSize.pr",
      "RelativePrPath": ".build\\Install\\Browse\\05. CheckItemSize.pr",
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Executed": null,
      "Generated": "0001-01-01T00:00:00",
      "WaitForExecution": true,
      "ErrorHandler": null,
      "RetryHandler": null,
      "Custom": {},
      "Number": 0,
      "LlmQuestion": null
    },
    {
      "Text": "get %item.download_url% , write to %code%",
      "Comment": null,
      "ModuleType": "PLang.Modules.LocalOrGlobalVariableModule",
      "Name": "GetDownloadUrlAndWriteToCode",
      "Description": "Retrieve the value of the variable 'item.download_url' and write this value to the variable 'code'.",
      "PrFileName": "06. GetDownloadUrlAndWriteToCode.pr",
      "RelativePrPath": ".build\\Install\\Browse\\06. GetDownloadUrlAndWriteToCode.pr",
      "Indent": 4,
      "Execute": false,
      "RunOnce": false,
      "Executed": null,
      "Generated": "0001-01-01T00:00:00",
      "WaitForExecution": true,
      "ErrorHandler": null,
      "RetryHandler": null,
      "Custom": {},
      "Number": 0,
      "LlmQuestion": null
    },
    {
      "Text": "write %code% to file \"%item.path%\"",
      "Comment": null,
      "ModuleType": "PLang.Modules.FileModule",
      "Name": "WriteCodeToFile",
      "Description": "Write the content of the variable 'code' to a file located at the path specified in the variable 'item.path'",
      "PrFileName": "07. WriteCodeToFile.pr",
      "RelativePrPath": ".build\\Install\\Browse\\07. WriteCodeToFile.pr",
      "Indent": 4,
      "Execute": false,
      "RunOnce": false,
      "Executed": null,
      "Generated": "0001-01-01T00:00:00",
      "WaitForExecution": true,
      "ErrorHandler": null,
      "RetryHandler": null,
      "Custom": {},
      "Number": 0,
      "LlmQuestion": null
    }
  ],
  "Description": null,
  "Visbility": 1,
  "GoalFileName": "Install.goal",
  "RelativeGoalPath": "\\Install.goal",
  "RelativeGoalFolderPath": "\\",
  "RelativePrPath": ".build\\Install\\Browse\\00. Goal.pr",
  "RelativePrFolderPath": ".build\\Install\\Browse"
}
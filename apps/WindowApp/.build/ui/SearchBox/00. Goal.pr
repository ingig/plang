{
  "GoalName": "SearchBox",
  "Comment": null,
  "GoalSteps": [
    {
      "Text": "center content, horizontaly and vertically, give good padding",
      "Comment": null,
      "ModuleType": "PLang.Modules.HtmlModule",
      "Name": "CenterContent",
      "Description": "Center the content both horizontally and vertically and provide appropriate padding.",
      "PrFileName": "01. CenterContent.pr",
      "RelativePrPath": ".build\\ui\\SearchBox\\01. CenterContent.pr",
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Executed": null,
      "Generated": "2023-10-12T22:56:03.2760418+00:00",
      "WaitForExecution": true,
      "ErrorHandler": null,
      "RetryHandler": null,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Custom": {},
      "Number": 0,
      "LlmQuestion": {
        "type": "StepBuilder",
        "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
        "question": "center content, horizontaly and vertically, give good padding",
        "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\", \"description\": \"Takes any user command and tries to convert it to html\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
        "model": "gpt-4",
        "caching": true,
        "Reload": false,
        "PreviousResult": null,
        "RawResponse": "{\"StepName\": \"CenterContent\",\n\"StepDescription\": \"Center the content both horizontally and vertically and provide appropriate padding.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}"
      }
    },
    {
      "Text": "set logo in center, https://plang.is/logo.png, max 150px height",
      "Comment": null,
      "ModuleType": "PLang.Modules.HtmlModule",
      "Name": "SetLogoCenter",
      "Description": "This step involves setting a logo, which is located at 'https://plang.is/logo.png', at the center of the page. The maximum height of the logo should be 150px.",
      "PrFileName": "02. SetLogoCenter.pr",
      "RelativePrPath": ".build\\ui\\SearchBox\\02. SetLogoCenter.pr",
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Executed": null,
      "Generated": "2023-10-12T22:56:12.9036515+00:00",
      "WaitForExecution": true,
      "ErrorHandler": null,
      "RetryHandler": null,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Custom": {},
      "Number": 1,
      "LlmQuestion": {
        "type": "StepBuilder",
        "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
        "question": "set logo in center, https://plang.is/logo.png, max 150px height",
        "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\", \"description\": \"Takes any user command and tries to convert it to html\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
        "model": "gpt-4",
        "caching": true,
        "Reload": false,
        "PreviousResult": null,
        "RawResponse": "{\"StepName\": \"SetLogoCenter\",\n\"StepDescription\": \"This step involves setting a logo, which is located at 'https://plang.is/logo.png', at the center of the page. The maximum height of the logo should be 150px.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}"
      }
    },
    {
      "Text": "search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click  call !Form",
      "Comment": null,
      "ModuleType": "PLang.Modules.HtmlModule",
      "Name": "SearchBoxCreation",
      "Description": "Create a search box with the name and id 'search' and a placeholder text 'Type in stuff2'. The search box should have a button with a search icon on the same line as the input. When the button is clicked, the function 'Form' should be called.",
      "PrFileName": "03. SearchBoxCreation.pr",
      "RelativePrPath": ".build\\ui\\SearchBox\\03. SearchBoxCreation.pr",
      "Indent": 0,
      "Execute": true,
      "RunOnce": false,
      "Executed": null,
      "Generated": "2023-10-12T22:43:54.8126598+00:00",
      "WaitForExecution": true,
      "ErrorHandler": null,
      "RetryHandler": null,
      "CacheHandler": null,
      "CancellationHandler": null,
      "Custom": {},
      "Number": 2,
      "LlmQuestion": {
        "type": "StepBuilder",
        "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
        "question": "search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click  call !Form",
        "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\", \"description\": \"Takes any user command and tries to convert it to html\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
        "model": "gpt-4",
        "caching": true,
        "Reload": false,
        "PreviousResult": null,
        "RawResponse": null
      }
    }
  ],
  "Description": null,
  "Visibility": 0,
  "GoalFileName": "SearchBox.goal",
  "RelativeGoalPath": "\\ui\\SearchBox.goal",
  "RelativeGoalFolderPath": "\\ui",
  "RelativePrPath": ".build\\ui\\SearchBox\\00. Goal.pr",
  "RelativePrFolderPath": ".build\\ui\\SearchBox",
  "ExternalApp": null,
  "BuilderVersion": "0.1.0.0",
  "GoalApiInfo": null,
  "Injections": {}
}
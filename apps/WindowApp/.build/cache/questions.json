[
  {
    "question": {
      "type": null,
      "system": "Parse the content provided by the user to determine modules in a system\r\n\r\n- (dash) defines the module\r\n/ (slash) defines a comment\r\n\r\nYou MUST response in JSON, scheme\r\n[{name:string, value:string, comment:string}]\r\n\r\nname: name of module\r\ntype: native|.net|python|javascript\r\ncomment: create description of the module\r\nBe concise ",
      "question": "\r\nNative modules:\r\n- WebserverModule - Start webserver, write to Body, Header, Cookie\n- TerminalModule\n- SeleniumModule\n- ScheduleModule\n- PythonModule - Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\n- OutputModule\n- MessageModule - Send and recieve private messages using Nostr protocol\n- LoopModule\n- LocalOrGlobalVariableModule - Set & Get local and static variables. Bind events to variable.\n- LlmModule\n- ListDictionaryModule - Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\n- HttpModule\n- FileModule\n- EnvironmentSettingsModule - Various settings for the program, such as culture, date & number formatting\n- DbModule\n- CryptographicModule\n- ConditionalModule - Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\n- CodeModule\n- CallGoalModule - Call another Goal, when ! is prefixed, e.g. !RenameFile\n- BlockchainModule - Use blockchain, create wallet, account info, transfer money\n\r\n",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "[\n  {\"name\": \"WebserverModule\", \"type\": \"native\", \"comment\": \"Start webserver, write to Body, Header, Cookie\"},\n  {\"name\": \"TerminalModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"SeleniumModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ScheduleModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"PythonModule\", \"type\": \"native\", \"comment\": \"Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\"},\n  {\"name\": \"OutputModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"MessageModule\", \"type\": \"native\", \"comment\": \"Send and recieve private messages using Nostr protocol\"},\n  {\"name\": \"LoopModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"LocalOrGlobalVariableModule\", \"type\": \"native\", \"comment\": \"Set & Get local and static variables. Bind events to variable.\"},\n  {\"name\": \"LlmModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ListDictionaryModule\", \"type\": \"native\", \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"},\n  {\"name\": \"HttpModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"FileModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"EnvironmentSettingsModule\", \"type\": \"native\", \"comment\": \"Various settings for the program, such as culture, date & number formatting\"},\n  {\"name\": \"DbModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"CryptographicModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ConditionalModule\", \"type\": \"native\", \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\"},\n  {\"name\": \"CodeModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"CallGoalModule\", \"type\": \"native\", \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"},\n  {\"name\": \"BlockchainModule\", \"type\": \"native\", \"comment\": \"Use blockchain, create wallet, account info, transfer money\"}\n]"
    },
    "answer": "[\n  {\"name\": \"WebserverModule\", \"type\": \"native\", \"comment\": \"Start webserver, write to Body, Header, Cookie\"},\n  {\"name\": \"TerminalModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"SeleniumModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ScheduleModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"PythonModule\", \"type\": \"native\", \"comment\": \"Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\"},\n  {\"name\": \"OutputModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"MessageModule\", \"type\": \"native\", \"comment\": \"Send and recieve private messages using Nostr protocol\"},\n  {\"name\": \"LoopModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"LocalOrGlobalVariableModule\", \"type\": \"native\", \"comment\": \"Set & Get local and static variables. Bind events to variable.\"},\n  {\"name\": \"LlmModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ListDictionaryModule\", \"type\": \"native\", \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"},\n  {\"name\": \"HttpModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"FileModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"EnvironmentSettingsModule\", \"type\": \"native\", \"comment\": \"Various settings for the program, such as culture, date & number formatting\"},\n  {\"name\": \"DbModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"CryptographicModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ConditionalModule\", \"type\": \"native\", \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\"},\n  {\"name\": \"CodeModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"CallGoalModule\", \"type\": \"native\", \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"},\n  {\"name\": \"BlockchainModule\", \"type\": \"native\", \"comment\": \"Use blockchain, create wallet, account info, transfer money\"}\n]",
    "hash": "36ffca8ffbe3e0e895c12368f42c1920c7e5c8517fdbf6b32be92c28b65a391c",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "askllm:\n    system: Your job is to select the correct app to use from the user request. \n        You MUST return in json scheme:{app:string}\n    assistant: === Available apps ===\n     %__Apps__% \n    === Available modules ===\n    user: %search% ",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SelectApp\",\n\"StepDescription\":\"The assistant is required to select the correct application based on the user's request. The selection should be returned in a JSON format with the key as 'app'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ListDictionaryModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SelectApp\",\n\"StepDescription\":\"The assistant is required to select the correct application based on the user's request. The selection should be returned in a JSON format with the key as 'app'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ListDictionaryModule\"\n]\n}",
    "hash": "7d5f776adc8dcd70f80ff62b85921eb271d3a69f65725a6874b4dbc7661d9deb",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: askllm:\n    system: Your job is to select the correct app to use from the user request. \n        You MUST return in json scheme:{app:string}\n    assistant: === Available apps ===\n     %__Apps__% \n    === Available modules ===\n    user: %search% ",
      "assistant": "\r\n## functions available defined in csharp ##\r\nGetList(String key, Boolean? staticVariable = False)\nGetDictionary(String key, Boolean? staticVariable = False)\nDeleteObjectFromDictionary(String key, Object? value, Boolean? staticVariable = False)\nAddToStaticList(String key, Object value, Stuff condition)\nAddToList(String key, Object value)\nAddToStaticDictionary(String key, Object value, Boolean? updateIfExists = False)\nAddToList(String key, Object value, Boolean? updateIfExists = False)\nGetAppPath(String? appName)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "\"Action\": {\n  \"FunctionName\": \"GetAppPath\",\n  \"Inputs\": {\n    \"appName\": \"%search%\"\n  },\n  \"Outputs\": {\n    \"app\": \"%__Apps__%\"\n  }\n}"
    },
    "answer": "\"Action\": {\n  \"FunctionName\": \"GetAppPath\",\n  \"Inputs\": {\n    \"appName\": \"%search%\"\n  },\n  \"Outputs\": {\n    \"app\": \"%__Apps__%\"\n  }\n}",
    "hash": "ebb474cbd13edd4d2c08de36610b73f7d37a9a431b0c27a061801ddc0025d2c3",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "read info.txt in /apps/%app% into %info%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ReadInfoFile\",\n\"StepDescription\":\"Read the contents of the file named 'info.txt' located in the '/apps/%app%' directory and store the contents into the variable '%info%'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ReadInfoFile\",\n\"StepDescription\":\"Read the contents of the file named 'info.txt' located in the '/apps/%app%' directory and store the contents into the variable '%info%'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "d9a687fbab504974c0f8743dc1d6fcbd693aee324f55b9bd9875946adcacc659",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: read info.txt in /apps/%app% into %info%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nWriteToFile(String path, String content)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\nGetAppPath(String? appName)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadTextFile\",\n    \"Inputs\": {\n      \"path\": \"/apps/%app%/info.txt\"\n    },\n    \"Outputs\": {\n      \"String\": \"%info%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadTextFile\",\n    \"Inputs\": {\n      \"path\": \"/apps/%app%/info.txt\"\n    },\n    \"Outputs\": {\n      \"String\": \"%info%\"\n    }\n  }\n}",
    "hash": "3a7f2309043556606bd5a62291cf784ff2b655c719a74a0db917316d65902bf4",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "askllm:\n    system: You should select goalName that fits best with user request \n        you must return json, scheme: {goalName:string, appType:window|console, parameters:object}\n    assistant: %info%\n    user: %search%        ",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"AskLLM\",\n\"StepDescription\":\"The system should select a goalName that best fits the user's request. The assistant will use the %info% variable and the user will provide the %search% variable. The response must be in JSON format with the scheme: {goalName:string, appType:window|console, parameters:object}\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LlmModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"AskLLM\",\n\"StepDescription\":\"The system should select a goalName that best fits the user's request. The assistant will use the %info% variable and the user will provide the %search% variable. The response must be in JSON format with the scheme: {goalName:string, appType:window|console, parameters:object}\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LlmModule\"\n]\n}",
    "hash": "ed382fd81f54ab993fd638d938cb7f5a7afbdc2ba5842bd54df0907b1a6f7495",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: askllm:\n    system: You should select goalName that fits best with user request \n        you must return json, scheme: {goalName:string, appType:window|console, parameters:object}\n    assistant: %info%\n    user: %search%        ",
      "assistant": "\r\n## functions available defined in csharp ##\r\nAskLlm(String system, String assistant, String user, String scheme, String? model = gpt-4, Double? tempature = 0, Double? topP = 0, Double? frequencyPenalty = 0, Double? presencePenalty = 0, Boolean? cacheResponse = True)\nGetAppPath(String? appName)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nThe following user request is for for constructing a message to LLM engine\r\n\r\nDetermine what part is system, assistant and user properties. If you cannot map it, the whole user request should be on user property\r\nDetermine the scheme, it is the json scheme that the llm is expected to return, this is required and cannot be empty string\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"AskLlm\",\n    \"Inputs\": {\n      \"system\": \"You should select goalName that fits best with user request you must return json, scheme: {goalName:string, appType:window|console, parameters:object}\",\n      \"assistant\": \"%info%\",\n      \"user\": \"%search%\",\n      \"scheme\": \"{goalName:string, appType:window|console, parameters:object}\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"AskLlm\",\n    \"Inputs\": {\n      \"system\": \"You should select goalName that fits best with user request you must return json, scheme: {goalName:string, appType:window|console, parameters:object}\",\n      \"assistant\": \"%info%\",\n      \"user\": \"%search%\",\n      \"scheme\": \"{goalName:string, appType:window|console, parameters:object}\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "7ce86ce8909d2739b82ac899c3606f62db4705d617ab756559f9d7b159c199e4",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "call %app%.%goalName% %parameters%, write to %results%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CallGoal\",\n\"StepDescription\":\"Call a specific goal within an application with provided parameters and store the results in a variable\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CallGoal\",\n\"StepDescription\":\"Call a specific goal within an application with provided parameters and store the results in a variable\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"CallGoalModule\"\n]\n}",
    "hash": "af7501c5c55c903ff88b087c18acb162e97c620243a2e02e106ae8b0eab9ce57",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\nParse user command, to match the parameters needed for the RunGoal function\r\n\r\n(AppName.)?GoalName is prefixed with !\r\nvariables are defined with starting and ending %\r\nUser might send in variable with his call as input\r\n\r\nExample:\r\n!ParseText then ParseText is goalName\r\n!Gmail.Search %query%, then Gmail is appName and Search is goalName, and %query% is parameters\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: call %app%.%goalName% %parameters%, write to %results%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunGoal(String goalName, String? appName, Dictionary`2? parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\nGetAppPath(String? appName)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunGoal\",\n    \"Inputs\": {\n      \"goalName\": \"%goalName%\",\n      \"appName\": \"%app%\",\n      \"parameters\": \"%parameters%\"\n    },\n    \"Outputs\": {\n      \"results\": \"Object\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunGoal\",\n    \"Inputs\": {\n      \"goalName\": \"%goalName%\",\n      \"appName\": \"%app%\",\n      \"parameters\": \"%parameters%\"\n    },\n    \"Outputs\": {\n      \"results\": \"Object\"\n    }\n  }\n}",
    "hash": "2a4ff698ffe986734785c4094b647ce7cbc9b961a96004fb30c6b125e5f130df",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "if %appType% == console",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CheckAppType\",\n\"StepDescription\":\"Check if the variable 'appType' is equal to 'console'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ConditionalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CheckAppType\",\n\"StepDescription\":\"Check if the variable 'appType' is equal to 'console'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ConditionalModule\"\n]\n}",
    "hash": "885c62fb18a6ae73c7bdb35fa782536564bbae22415f3a37615008a6d8418466",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\n\r\nName: is CamelCase name of class\r\nOutputVariable: variable name if any to write to. Replace dot(.) with underscore(_)\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\nName cannot be: \n\r\nYou MUST respond in JSON, scheme:\r\n{Name:string, Implementation:string, Using:string[], OutputVariable:string}\r\n\r\nBe Concise",
      "question": "if %appType% == console",
      "assistant": null,
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Name\": \"AppTypeCheck\",\n  \"Implementation\": \"public static bool Process(string appType) { return appType == \\\"console\\\"; }\",\n  \"Using\": [],\n  \"OutputVariable\": \"appType\"\n}"
    },
    "answer": "{\n  \"Name\": \"AppTypeCheck\",\n  \"Implementation\": \"public static bool Process(string appType) { return appType == \\\"console\\\"; }\",\n  \"Using\": [],\n  \"OutputVariable\": \"appType\"\n}",
    "hash": "4d897074a965fd927e45797022555f866861508969d6c116a3638e69e1876308",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "!ShowResult result=%results%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ShowResult\",\n\"StepDescription\":\"Display the result stored in the variable %results%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ShowResult\",\n\"StepDescription\":\"Display the result stored in the variable %results%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}",
    "hash": "fb8e5689966fd504949f93e0dd6efe4246d08ce1e73b87944fd57d06c6f6434f",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: !ShowResult result=%results%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nWrite(String? text, Boolean? writeToBuffer = False)\nGetAppPath(String? appName)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{\"results\":{\"Events\":[],\"value\":null,\"type\":\"System.Threading.Tasks.Task, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\"Initiated\":false}}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Write\",\n    \"Inputs\": {\n      \"text\": \"%results%\",\n      \"writeToBuffer\": false\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Write\",\n    \"Inputs\": {\n      \"text\": \"%results%\",\n      \"writeToBuffer\": false\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "19059734100076ab7f05cb858e356bddd13188b7441f58fbfdd6c9e317b377b5",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "start window app, call !SearchBox",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"StartWindowAppAndSearch\",\n\"StepDescription\":\"This step involves starting a window application and calling the SearchBox function.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"SeleniumModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"StartWindowAppAndSearch\",\n\"StepDescription\":\"This step involves starting a window application and calling the SearchBox function.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"SeleniumModule\"\n]\n}",
    "hash": "685fad977a4785f2be1d1a1b19dcdaff63eb7770f88ef5c3a15f2a5ccbf7f288",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"Length\": \"Int32\",\r\n  \"LongLength\": \"Int64\",\r\n  \"Rank\": \"Int32\",\r\n  \"SyncRoot\": \"Object\",\r\n  \"IsReadOnly\": \"Boolean\",\r\n  \"IsFixedSize\": \"Boolean\",\r\n  \"IsSynchronized\": \"Boolean\"\r\n}",
      "question": "command: start window app, call !SearchBox",
      "assistant": "\r\n## functions available defined in csharp ##\r\nStartBrowser(Boolean? useUserSession = False, String? userSessionPath)\nCloseBrowser()\nNavigateToUrl(String url)\nClick(String cssSelector)\nSendKey(String cssSelector, String value)\nInput(String cssSelector, String value)\nSubmit(String cssSelector, String value)\nExtractContent(String cssSelector, Boolean? clearHtml = True)\nSwitchTab(Int32 tabIndex)\nWait(Int32? milliseconds = 1000)\nDispose()\nGetAppPath(String? appName)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nEach line represents a command. Return an array of Action in your JSON, each action represents a call to a function. Make sure to convert html tags into correct css selector format",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "[\n  {\n    \"FunctionName\": \"StartBrowser\",\n    \"Inputs\": {\n      \"useUserSession\": \"False\",\n      \"userSessionPath\": \"\"\n    },\n    \"Outputs\": {}\n  },\n  {\n    \"FunctionName\": \"Input\",\n    \"Inputs\": {\n      \"cssSelector\": \"!SearchBox\",\n      \"value\": \"\"\n    },\n    \"Outputs\": {}\n  }\n]"
    },
    "answer": "[\n  {\n    \"FunctionName\": \"StartBrowser\",\n    \"Inputs\": {\n      \"useUserSession\": \"False\",\n      \"userSessionPath\": \"\"\n    },\n    \"Outputs\": {}\n  },\n  {\n    \"FunctionName\": \"Input\",\n    \"Inputs\": {\n      \"cssSelector\": \"!SearchBox\",\n      \"value\": \"\"\n    },\n    \"Outputs\": {}\n  }\n]",
    "hash": "aea1c9d29509da1025ec9429affa92c8cc483ecb5cd90d83a47cfc72adf9ad36",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "write out %result%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WriteOutput\",\n\"StepDescription\":\"Write the value of the variable %result% to the output\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WriteOutput\",\n\"StepDescription\":\"Write the value of the variable %result% to the output\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}",
    "hash": "5c8fffe54cc711f6bbb2a5a4e4f8b642f42384a29f1c34ee8f4e96263bb4f1fd",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: write out %result%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nWrite(String? text, Boolean? writeToBuffer = False)\nGetAppPath(String? appName)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Write\",\n    \"Inputs\": {\n      \"text\": \"%result%\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Write\",\n    \"Inputs\": {\n      \"text\": \"%result%\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "a56d6e893517e810a45c0ade15b43e6fa23dce2256866c7def9ca64d94e5ea8a",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "Parse the content provided by the user to determine modules in a system\r\n\r\n- (dash) defines the module\r\n/ (slash) defines a comment\r\n\r\nYou MUST response in JSON, scheme\r\n[{name:string, value:string, comment:string}]\r\n\r\nname: name of module\r\ntype: native|.net|python|javascript\r\ncomment: create description of the module\r\nBe concise ",
      "question": "\r\nNative modules:\r\n- WindowAppModule\n- WebserverModule - Start webserver, write to Body, Header, Cookie\n- TerminalModule\n- SeleniumModule\n- ScheduleModule\n- PythonModule - Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\n- OutputModule\n- MessageModule - Send and recieve private messages using Nostr protocol\n- LoopModule\n- LocalOrGlobalVariableModule - Set & Get local and static variables. Bind events to variable.\n- LlmModule\n- ListDictionaryModule - Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\n- HttpModule\n- FileModule\n- EnvironmentSettingsModule - Various settings for the program, such as culture, date & number formatting\n- DbModule\n- CryptographicModule\n- ConditionalModule - Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\n- CodeModule\n- CallGoalModule - Call another Goal, when ! is prefixed, e.g. !RenameFile\n- BlockchainModule - Use blockchain, create wallet, account info, transfer money\n\r\n",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "[\n  {\"name\": \"WindowAppModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"WebserverModule\", \"type\": \"native\", \"comment\": \"Start webserver, write to Body, Header, Cookie\"},\n  {\"name\": \"TerminalModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"SeleniumModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ScheduleModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"PythonModule\", \"type\": \"native\", \"comment\": \"Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\"},\n  {\"name\": \"OutputModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"MessageModule\", \"type\": \"native\", \"comment\": \"Send and recieve private messages using Nostr protocol\"},\n  {\"name\": \"LoopModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"LocalOrGlobalVariableModule\", \"type\": \"native\", \"comment\": \"Set & Get local and static variables. Bind events to variable.\"},\n  {\"name\": \"LlmModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ListDictionaryModule\", \"type\": \"native\", \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"},\n  {\"name\": \"HttpModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"FileModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"EnvironmentSettingsModule\", \"type\": \"native\", \"comment\": \"Various settings for the program, such as culture, date & number formatting\"},\n  {\"name\": \"DbModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"CryptographicModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ConditionalModule\", \"type\": \"native\", \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\"},\n  {\"name\": \"CodeModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"CallGoalModule\", \"type\": \"native\", \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"},\n  {\"name\": \"BlockchainModule\", \"type\": \"native\", \"comment\": \"Use blockchain, create wallet, account info, transfer money\"}\n]"
    },
    "answer": "[\n  {\"name\": \"WindowAppModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"WebserverModule\", \"type\": \"native\", \"comment\": \"Start webserver, write to Body, Header, Cookie\"},\n  {\"name\": \"TerminalModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"SeleniumModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ScheduleModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"PythonModule\", \"type\": \"native\", \"comment\": \"Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\"},\n  {\"name\": \"OutputModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"MessageModule\", \"type\": \"native\", \"comment\": \"Send and recieve private messages using Nostr protocol\"},\n  {\"name\": \"LoopModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"LocalOrGlobalVariableModule\", \"type\": \"native\", \"comment\": \"Set & Get local and static variables. Bind events to variable.\"},\n  {\"name\": \"LlmModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ListDictionaryModule\", \"type\": \"native\", \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"},\n  {\"name\": \"HttpModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"FileModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"EnvironmentSettingsModule\", \"type\": \"native\", \"comment\": \"Various settings for the program, such as culture, date & number formatting\"},\n  {\"name\": \"DbModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"CryptographicModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ConditionalModule\", \"type\": \"native\", \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\"},\n  {\"name\": \"CodeModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"CallGoalModule\", \"type\": \"native\", \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"},\n  {\"name\": \"BlockchainModule\", \"type\": \"native\", \"comment\": \"Use blockchain, create wallet, account info, transfer money\"}\n]",
    "hash": "4c33fc829514575458dd27926cca13dad575ea9810219b6c1f3bc8281c6a8bd9",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "start window app, call goal !SearchBox",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule()\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"StartAppAndSearch\",\n\"StepDescription\":\"Start a window application and call the goal to search within the application\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"WindowAppModule\",\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"StartAppAndSearch\",\n\"StepDescription\":\"Start a window application and call the goal to search within the application\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"WindowAppModule\",\n\t\"CallGoalModule\"\n]\n}",
    "hash": "85cb76d70dd6a6923b2af117075fda83af77a30cbf47e86fc5e6cc0f8e239881",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.\r\n ---> System.InvalidOperationException: Unable to resolve type: Microsoft.Maui.Storage.IFileSystem, service name: \r\n   at LightInject.ServiceContainer.CreateDelegate(Type serviceType, String serviceName, Boolean throwError)\r\n   at LightInject.ServiceContainer.CreateDefaultDelegate(Type serviceType, Boolean throwError)\r\n   at LightInject.ServiceContainer.GetInstance(Type serviceType)\r\n   at LightInject.ServiceFactoryExtensions.GetInstance[TService](IServiceFactory factory)\r\n   at PseudoBuilder.Modules.BaseBuilder..ctor(IAiService aiService, Type type) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseBuilder.cs:line 50\r\n   at PseudoBuilder.Modules.WindowAppModule.Builder..ctor(IAiService aiService) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\WindowAppModule\\Builder.cs:line 7\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.ConstructorInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)\r\n   --- End of inner exception stack trace ---\r\n   at System.Reflection.ConstructorInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)\r\n   at System.Activator.CreateInstance(Type type, Object[] args)\r\n   at PseudoBuilder.utils.TypeHelper.GetBuilderInstance(String module, IAiService aiService) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\utils\\TypeHelper.cs:line 76\r\n   at PseudoBuilder.Building.Builder.BuildInstruction(Goal goal, GoalStep goalStep, String module, Int32 stepNr, String goalFolderPath, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Building\\Builder.cs:line 367\r\n   at PseudoBuilder.Building.Builder.ProcessStep(Goal goal, Int32 stepNr, String goalFolderPath, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Building\\Builder.cs:line 349\r\n   at PseudoBuilder.Building.Builder.BuildGoal(String fileName) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Building\\Builder.cs:line 191",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred while trying to access a specific service in your application. The system was unable to find the 'Microsoft.Maui.Storage.IFileSystem' service.\",\n\"howToFix\": \"Ensure that the 'Microsoft.Maui.Storage.IFileSystem' service is properly registered in your application. If it's a third-party service, make sure it's correctly installed and referenced in your project. Also, check the path in your code where this service is being invoked, it might be causing the issue.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred while trying to access a specific service in your application. The system was unable to find the 'Microsoft.Maui.Storage.IFileSystem' service.\",\n\"howToFix\": \"Ensure that the 'Microsoft.Maui.Storage.IFileSystem' service is properly registered in your application. If it's a third-party service, make sure it's correctly installed and referenced in your project. Also, check the path in your code where this service is being invoked, it might be causing the issue.\"\n}",
    "hash": "1ee0f0e343f2721ade1d809c2540a3eceaef80eeae922381e47c9e78985f360d",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: start window app, call goal !SearchBox",
      "assistant": "\r\n## functions available defined in csharp ##\r\nGetAppPath(String? appName)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"GetAppPath\",\n    \"Inputs\": {\n      \"appName\": \"!SearchBox\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"GetAppPath\",\n    \"Inputs\": {\n      \"appName\": \"!SearchBox\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "513d2f31d04a0a939ca44b962e28ff851a9a90d879e63d4d0fc43280f9840eb1",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "Parse the content provided by the user to determine modules in a system\r\n\r\n- (dash) defines the module\r\n/ (slash) defines a comment\r\n\r\nYou MUST response in JSON, scheme\r\n[{name:string, value:string, comment:string}]\r\n\r\nname: name of module\r\ntype: native|.net|python|javascript\r\ncomment: create description of the module\r\nBe concise ",
      "question": "\r\nNative modules:\r\n- WindowAppModule\n- WebserverModule - Start webserver, write to Body, Header, Cookie\n- TerminalModule\n- SeleniumModule\n- ScheduleModule\n- PythonModule - Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\n- OutputModule\n- MessageModule - Send and recieve private messages using Nostr protocol\n- LoopModule\n- LocalOrGlobalVariableModule - Set & Get local and static variables. Bind events to variable.\n- LlmModule\n- ListDictionaryModule - Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\n- HttpModule\n- HtmlModule\n- FileModule\n- EnvironmentSettingsModule - Various settings for the program, such as culture, date & number formatting\n- DbModule\n- CryptographicModule\n- ConditionalModule - Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\n- CodeModule\n- CallGoalModule - Call another Goal, when ! is prefixed, e.g. !RenameFile\n- BlockchainModule - Use blockchain, create wallet, account info, transfer money\n\r\n",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "[\n  {\"name\": \"WindowAppModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"WebserverModule\", \"type\": \"native\", \"comment\": \"Start webserver, write to Body, Header, Cookie\"},\n  {\"name\": \"TerminalModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"SeleniumModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ScheduleModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"PythonModule\", \"type\": \"python\", \"comment\": \"Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\"},\n  {\"name\": \"OutputModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"MessageModule\", \"type\": \"native\", \"comment\": \"Send and recieve private messages using Nostr protocol\"},\n  {\"name\": \"LoopModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"LocalOrGlobalVariableModule\", \"type\": \"native\", \"comment\": \"Set & Get local and static variables. Bind events to variable.\"},\n  {\"name\": \"LlmModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ListDictionaryModule\", \"type\": \"native\", \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"},\n  {\"name\": \"HttpModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"HtmlModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"FileModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"EnvironmentSettingsModule\", \"type\": \"native\", \"comment\": \"Various settings for the program, such as culture, date & number formatting\"},\n  {\"name\": \"DbModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"CryptographicModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ConditionalModule\", \"type\": \"native\", \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\"},\n  {\"name\": \"CodeModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"CallGoalModule\", \"type\": \"native\", \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"},\n  {\"name\": \"BlockchainModule\", \"type\": \"native\", \"comment\": \"Use blockchain, create wallet, account info, transfer money\"}\n]"
    },
    "answer": "[\n  {\"name\": \"WindowAppModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"WebserverModule\", \"type\": \"native\", \"comment\": \"Start webserver, write to Body, Header, Cookie\"},\n  {\"name\": \"TerminalModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"SeleniumModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ScheduleModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"PythonModule\", \"type\": \"python\", \"comment\": \"Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\"},\n  {\"name\": \"OutputModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"MessageModule\", \"type\": \"native\", \"comment\": \"Send and recieve private messages using Nostr protocol\"},\n  {\"name\": \"LoopModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"LocalOrGlobalVariableModule\", \"type\": \"native\", \"comment\": \"Set & Get local and static variables. Bind events to variable.\"},\n  {\"name\": \"LlmModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ListDictionaryModule\", \"type\": \"native\", \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"},\n  {\"name\": \"HttpModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"HtmlModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"FileModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"EnvironmentSettingsModule\", \"type\": \"native\", \"comment\": \"Various settings for the program, such as culture, date & number formatting\"},\n  {\"name\": \"DbModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"CryptographicModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"ConditionalModule\", \"type\": \"native\", \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\"},\n  {\"name\": \"CodeModule\", \"type\": \"native\", \"comment\": \"\"},\n  {\"name\": \"CallGoalModule\", \"type\": \"native\", \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"},\n  {\"name\": \"BlockchainModule\", \"type\": \"native\", \"comment\": \"Use blockchain, create wallet, account info, transfer money\"}\n]",
    "hash": "20988a7ac9e7ad399910d57643e6413dc71263abcde625fc72e4d60f1981a152",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "search box,\n    name is \"search\"\n    placeholder \"Type in stuff\"\n    button with search icon that sends to !Actions",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule()\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, HtmlModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SearchBoxCreation\",\n\"StepDescription\":\"Create a search box with the name 'search' and a placeholder text 'Type in stuff'. Also, create a button with a search icon that triggers the 'Actions' function when clicked.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"SeleniumModule\",\n    \"HtmlModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SearchBoxCreation\",\n\"StepDescription\":\"Create a search box with the name 'search' and a placeholder text 'Type in stuff'. Also, create a button with a search icon that triggers the 'Actions' function when clicked.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"SeleniumModule\",\n    \"HtmlModule\"\n]\n}",
    "hash": "84500baf62a9662a4d07a89f8baa1d8d09002a4093499d8b2ba487651a9459a7",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\\r\\n\\r\\nYou MUST respond in JSON, scheme\\r\\n \"Action\": {\r\n  \"Length\": \"Int32\",\r\n  \"LongLength\": \"Int64\",\r\n  \"Rank\": \"Int32\",\r\n  \"SyncRoot\": \"Object\",\r\n  \"IsReadOnly\": \"Boolean\",\r\n  \"IsFixedSize\": \"Boolean\",\r\n  \"IsSynchronized\": \"Boolean\"\r\n}",
      "question": "command: search box,\n    name is \"search\"\n    placeholder \"Type in stuff\"\n    button with search icon that sends to !Actions",
      "assistant": "\r\n## functions available defined in csharp ##\r\nStartBrowser(Boolean? useUserSession = False, String? userSessionPath)\nCloseBrowser()\nNavigateToUrl(String url)\nClick(String cssSelector)\nSendKey(String cssSelector, String value)\nInput(String cssSelector, String value)\nSubmit(String cssSelector, String value)\nExtractContent(String cssSelector, Boolean? clearHtml = True)\nSwitchTab(Int32 tabIndex)\nWait(Int32? milliseconds = 1000)\nDispose()\nGetAppPath(String? appName)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nEach line represents a command. Return an array of Action in your JSON, each action represents a call to a function. Make sure to convert html tags into correct css selector format",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "[\n  {\n    \"FunctionName\": \"Input\",\n    \"Inputs\": {\n      \"cssSelector\": \"input[name='search'][placeholder='Type in stuff']\",\n      \"value\": \"%searchValue%\"\n    },\n    \"Outputs\": {}\n  },\n  {\n    \"FunctionName\": \"Click\",\n    \"Inputs\": {\n      \"cssSelector\": \"button[onclick='!Actions']\"\n    },\n    \"Outputs\": {}\n  }\n]"
    },
    "answer": "[\n  {\n    \"FunctionName\": \"Input\",\n    \"Inputs\": {\n      \"cssSelector\": \"input[name='search'][placeholder='Type in stuff']\",\n      \"value\": \"%searchValue%\"\n    },\n    \"Outputs\": {}\n  },\n  {\n    \"FunctionName\": \"Click\",\n    \"Inputs\": {\n      \"cssSelector\": \"button[onclick='!Actions']\"\n    },\n    \"Outputs\": {}\n  }\n]",
    "hash": "6a25f08217e74d48e6b5603c42a3d64068bc02c13f3f3bba12f670e4852005cf",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "search box,\n    input name is \"search\" \n    placeholder \"Type in stuff\"\n    button with search icon that sends to !Actions",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule()\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, HtmlModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SearchBoxCreation\",\n\"StepDescription\":\"Create a search box with the input name 'search' and a placeholder text 'Type in stuff'. Also, create a button with a search icon that triggers the 'Actions' function when clicked.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HtmlModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SearchBoxCreation\",\n\"StepDescription\":\"Create a search box with the input name 'search' and a placeholder text 'Type in stuff'. Also, create a button with a search icon that triggers the 'Actions' function when clicked.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HtmlModule\"\n]\n}",
    "hash": "f37722012fefce72adfaba72371aca2bf428e7d443ac583c65df09b1be2196a1",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "Newtonsoft.Json.JsonReaderException: Invalid character after parsing property name. Expected ':' but got: m. Path '', line 2, position 12.\r\n   at PseudoBuilder.utils.JsonHelper.ExtractJson[T](String content) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\utils\\JsonHelper.cs:line 123\r\n   at PseudoBuilder.Building.Services.OpenAIService.Query[T](LlmQuestion question) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Building\\Services\\OpenAIService.cs:line 97\r\n   at PseudoBuilder.Modules.BaseBuilder.Build[T](GoalStep step, Type scheme, String system, String assistant) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseBuilder.cs:line 91\r\n   at PseudoBuilder.Modules.BaseBuilder.Build(GoalStep goalStep, String system, String assistant) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseBuilder.cs:line 70\r\n   at PseudoBuilder.Modules.HtmlModule.Builder.Build(GoalStep step) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\HtmlModule\\Builder.cs:line 47\r\n   at PseudoBuilder.Building.Builder.BuildInstruction(Goal goal, GoalStep goalStep, String module, Int32 stepNr, String goalFolderPath, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Building\\Builder.cs:line 371\r\n   at PseudoBuilder.Building.Builder.ProcessStep(Goal goal, Int32 stepNr, String goalFolderPath, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Building\\Builder.cs:line 349\r\n   at PseudoBuilder.Building.Builder.BuildGoal(String fileName) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Building\\Builder.cs:line 191",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There's an issue with the JSON format you're using. It seems like there's an invalid character after parsing a property name. The system expected a ':' but found 'm' instead.\",\n\"howToFix\": \"Please check your JSON syntax. Make sure that each property name is followed by a ':' and then the property value. If you're manually writing JSON, consider using a JSON formatter or validator to help catch these errors.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There's an issue with the JSON format you're using. It seems like there's an invalid character after parsing a property name. The system expected a ':' but found 'm' instead.\",\n\"howToFix\": \"Please check your JSON syntax. Make sure that each property name is followed by a ':' and then the property value. If you're manually writing JSON, consider using a JSON formatter or validator to help catch these errors.\"\n}",
    "hash": "a8258f4104b64a335649d6fb8db6eefbb929dbff2b642c4e5ace0424a4587b84",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "Convert this user command to html using bootstrap 4.x css framework. \r\nthe html, head, body is already provided, you only need to generate the content from the div.\r\ndo not include css or js unless user specifies it.\r\nbootstrap css and js is include\r\nfontawesome css is include\r\nonclick events should have a call command\r\n\r\nYou need to figure out what the AppName and GoalName is from user command\r\n\r\nGoalName is required, AppName is optinal\r\n\r\nExample: \r\n- call !Google.Search => Google = AppName, Search = GoalName\r\n- call !DoStuff => DoStuff = GoalName, AppName is empty\r\n- call !SaveUesr => SaveUesr = GoalName, AppName is empty\r\n\r\nthe button should call a function. You should give a name to the function.\r\nThe function should have the following setup to \r\n\r\nfunction nameOfFunction() {\r\nlet message = {\r\n    AppName: \"Google\",\r\n\tGoalName: \"Search\"\r\n    Param: \"This is a parameter from inputs\"\r\n};\r\nwindow.chrome.webview.postMessage(JSON.stringify(message));\r\n}\r\n\r\nYou must return with the whole html/javascript/css content inside ```html, no extra text to explain, be concise\r\n\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: search box,\n    input name is \"search\" \n    placeholder \"Type in stuff\"\n    button with search icon that sends to !Actions",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRenderHtml(String html)\nGetAppPath(String? appName)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"container\">\n    <div class=\"input-group mb-3\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Type in stuff\" id=\"search\">\n        <div class=\"input-group-append\">\n            <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" onclick=\"sendToActions()\">\n                <i class=\"fas fa-search\"></i>\n            </button>\n        </div>\n    </div>\n</div>\n\n<script>\n    function sendToActions() {\n        let message = {\n            AppName: \"\",\n            GoalName: \"Actions\",\n            Param: document.getElementById('search').value\n        };\n        window.chrome.webview.postMessage(JSON.stringify(message));\n    }\n</script>\n```"
    },
    "answer": "```html\n<div class=\"container\">\n    <div class=\"input-group mb-3\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Type in stuff\" id=\"search\">\n        <div class=\"input-group-append\">\n            <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" onclick=\"sendToActions()\">\n                <i class=\"fas fa-search\"></i>\n            </button>\n        </div>\n    </div>\n</div>\n\n<script>\n    function sendToActions() {\n        let message = {\n            AppName: \"\",\n            GoalName: \"Actions\",\n            Param: document.getElementById('search').value\n        };\n        window.chrome.webview.postMessage(JSON.stringify(message));\n    }\n</script>\n```",
    "hash": "3c30526914c62136eb1726dad549f794cd21012f406ca6bade73f8abc09d3fef",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "System.InvalidCastException: Unable to cast object of type 'GenericFunction' to type 'PseudoBuilder.Building.Model.Instruction'.\r\n   at PseudoBuilder.Utils.Extractors.HtmlExtractor.Extract[T](String content) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Utils\\Extractors\\IContentExtractor.cs:line 39\r\n   at PseudoBuilder.Building.Services.OpenAIService.Query[T](LlmQuestion question) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Building\\Services\\OpenAIService.cs:line 49\r\n   at PseudoBuilder.Modules.BaseBuilder.Build[T](GoalStep step, Type scheme, String system, String assistant) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseBuilder.cs:line 99\r\n   at PseudoBuilder.Modules.BaseBuilder.Build(GoalStep goalStep, String system, String assistant) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseBuilder.cs:line 72\r\n   at PseudoBuilder.Modules.HtmlModule.Builder.Build(GoalStep step) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\HtmlModule\\Builder.cs:line 49\r\n   at PseudoBuilder.Building.Builder.BuildInstruction(Goal goal, GoalStep goalStep, String module, Int32 stepNr, String goalFolderPath, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Building\\Builder.cs:line 371\r\n   at PseudoBuilder.Building.Builder.ProcessStep(Goal goal, Int32 stepNr, String goalFolderPath, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Building\\Builder.cs:line 349\r\n   at PseudoBuilder.Building.Builder.BuildGoal(String fileName) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Building\\Builder.cs:line 191",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There's an issue with the type of object you're trying to use. The system can't convert a 'GenericFunction' object into a 'Model.Instruction' object.\",\n\"howToFix\": \"Check the object you're trying to use at line 39 in IContentExtractor.cs. Make sure it's a 'Model.Instruction' object, not a 'GenericFunction' object. If necessary, you may need to create a new 'Model.Instruction' object or modify the 'GenericFunction' object to match the 'Model.Instruction' type.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There's an issue with the type of object you're trying to use. The system can't convert a 'GenericFunction' object into a 'Model.Instruction' object.\",\n\"howToFix\": \"Check the object you're trying to use at line 39 in IContentExtractor.cs. Make sure it's a 'Model.Instruction' object, not a 'GenericFunction' object. If necessary, you may need to create a new 'Model.Instruction' object or modify the 'GenericFunction' object to match the 'Model.Instruction' type.\"\n}",
    "hash": "5021806b8696020d6ce8969e9f1a7ef1df05da65c9b3c17b6e104b82e821ad3f",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PseudoBuilder.Exceptions.RuntimeStepException: Step 'start window app, call goal !SearchBox' had exception\r\n ---> PseudoBuilder.Exceptions.RuntimeException: The method GetAppPath does not return Task. Method that are call must return Task\r\n   at PseudoBuilder.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseProgram.cs:line 97\r\n   at PseudoBuilder.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 280\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 206\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 215\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 180\r\n   at PseudoBuilder.Runtime.Engine.RunStart() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 160\r\n   at PseudoBuilder.Runtime.Engine.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There's an issue with the 'GetAppPath' method in your program. It's not returning a 'Task' as expected.\",\n\"howToFix\": \"Please check the 'GetAppPath' method in your code. It should be an asynchronous method that returns a 'Task'. If it's not, you may need to refactor it to make it asynchronous.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There's an issue with the 'GetAppPath' method in your program. It's not returning a 'Task' as expected.\",\n\"howToFix\": \"Please check the 'GetAppPath' method in your code. It should be an asynchronous method that returns a 'Task'. If it's not, you may need to refactor it to make it asynchronous.\"\n}",
    "hash": "705adfa36042caca159ef8ecf3da1b8ce0a16893eae1a4ab288c59676434892c",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "start window app, call !SearchBox",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule()\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, HtmlModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"StartAppAndSearch\",\n\"StepDescription\":\"This step involves starting a window application and calling the SearchBox function.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"WindowAppModule\",\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"StartAppAndSearch\",\n\"StepDescription\":\"This step involves starting a window application and calling the SearchBox function.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"WindowAppModule\",\n\t\"CallGoalModule\"\n]\n}",
    "hash": "0312a8973d1a0e62cf89d37deb4337a65af53317194a13ad765009a480fae0cb",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: start window app, call !SearchBox",
      "assistant": "\r\n## functions available defined in csharp ##\r\nGetAppPath(String? appName)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"GetAppPath\",\n    \"Inputs\": {\n      \"appName\": \"!SearchBox\"\n    },\n    \"Outputs\": {\n      \"appPath\": \"%appPath%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"GetAppPath\",\n    \"Inputs\": {\n      \"appName\": \"!SearchBox\"\n    },\n    \"Outputs\": {\n      \"appPath\": \"%appPath%\"\n    }\n  }\n}",
    "hash": "4485e5491585f26e591826bb07c0359e12e0b00f482fe8ac96d8b28b4bc63852",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "start window app, then call !SearchBox",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule()\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, HtmlModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"StartAppAndSearch\",\n\"StepDescription\":\"This step involves starting a window application and then calling the SearchBox function.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"WindowAppModule\",\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"StartAppAndSearch\",\n\"StepDescription\":\"This step involves starting a window application and then calling the SearchBox function.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"WindowAppModule\",\n\t\"CallGoalModule\"\n]\n}",
    "hash": "d06d7bf6dedf2fb451b66d779189b090dc657fe66097f4e70b235348e5de9c30",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: start window app, then call !SearchBox",
      "assistant": "\r\n## functions available defined in csharp ##\r\nGetAppPath(String? appName)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"GetAppPath\",\n    \"Inputs\": {\n      \"appName\": \"!SearchBox\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"GetAppPath\",\n    \"Inputs\": {\n      \"appName\": \"!SearchBox\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "32626f5acddc25ebb98f6d99ad3b7ddfe342e2061e208fb2612c819020017763",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: start window app, then call !SearchBox",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunWindowApp(String goalName, String? appName, Dictionary`2? parameters)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunWindowApp\",\n    \"Inputs\": {\n      \"goalName\": \"start window app\",\n      \"appName\": \"!SearchBox\",\n      \"parameters\": null\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunWindowApp\",\n    \"Inputs\": {\n      \"goalName\": \"start window app\",\n      \"appName\": \"!SearchBox\",\n      \"parameters\": null\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "50cc28f334cc8031be58150762ae49b7121660223ca24ecd7aa3ad3ede8fddbe",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: start window app, call !SearchBox",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunWindowApp(String goalName, String? appName, Dictionary`2? parameters)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunWindowApp\",\n    \"Inputs\": {\n      \"goalName\": \"start window app\",\n      \"appName\": \"!SearchBox\",\n      \"parameters\": null\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunWindowApp\",\n    \"Inputs\": {\n      \"goalName\": \"start window app\",\n      \"appName\": \"!SearchBox\",\n      \"parameters\": null\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "3f816e84f594034b2eb4fee6c2f7b275d0c832ae243c0e39a25ec5e4d43fd585",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: start window app, call !SearchBox",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunWindowApp(String goalName, String? appName, Dictionary`2? parameters) // goalName is required. It is one word. e.g. !CallGoal, or !Run. appName is prefix on goal, e.g. !Google.Search. \n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunWindowApp\",\n    \"Inputs\": {\n      \"goalName\": \"!CallGoal\",\n      \"appName\": \"!SearchBox\",\n      \"parameters\": null\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunWindowApp\",\n    \"Inputs\": {\n      \"goalName\": \"!CallGoal\",\n      \"appName\": \"!SearchBox\",\n      \"parameters\": null\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "9218de19e5b32190ec04243b4e28184bfadbc255d7c470f6c0194b6e233ea4cb",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "start window app , call !SearchBox",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule()\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, HtmlModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"StartAppAndSearch\",\n\"StepDescription\":\"This step involves starting a window application and calling the SearchBox function.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"WindowAppModule\",\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"StartAppAndSearch\",\n\"StepDescription\":\"This step involves starting a window application and calling the SearchBox function.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"WindowAppModule\",\n\t\"CallGoalModule\"\n]\n}",
    "hash": "103986a4c203684ed5fa6c324cb94a0ff0e75eba0e18770811a7bb435e79bc6f",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: start window app , call !SearchBox",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunWindowApp(String goalName, String? appName, Dictionary`2? parameters) // goalName is required. It is one word. Example: !CallGoal, or !Run. appName is prefix on goal, Example: !Google.Search then Google is appName and Search is goalName. Do not use the names in your response unless defined by user. \n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunWindowApp\",\n    \"Inputs\": {\n      \"goalName\": \"!SearchBox\",\n      \"appName\": \"\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunWindowApp\",\n    \"Inputs\": {\n      \"goalName\": \"!SearchBox\",\n      \"appName\": \"\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "fbd0c21b8951c976f558704204baa94ce95dd4112586c05e392cdf9b6a999622",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PseudoBuilder.Exceptions.RuntimeStepException: Step 'start window app , call !SearchBox' had exception\r\n ---> System.AggregateException: One or more errors occurred. (Cannot find window class.)\r\n ---> System.ComponentModel.Win32Exception (1407): Cannot find window class.\r\n   at PseudoBuilder.Modules.HtmlModule.WindowManager.CreateWindow() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\HtmlModule\\WindowManager.cs:line 105\r\n   at PseudoBuilder.Modules.WindowAppModule.Program.RunWindowApp(String goalName, String appName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\WindowAppModule\\Program.cs:line 23\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseProgram.cs:line 126\r\n   at PseudoBuilder.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 280\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 206\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 215\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 180\r\n   at PseudoBuilder.Runtime.Engine.RunStart() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 160\r\n   at PseudoBuilder.Runtime.Engine.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred while trying to start a window application. The system could not find the window class.\",\n\"howToFix\": \"Please check if the window class you are trying to access exists and is correctly referenced in your code. If the problem persists, you may need to debug your code to identify the issue.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred while trying to start a window application. The system could not find the window class.\",\n\"howToFix\": \"Please check if the window class you are trying to access exists and is correctly referenced in your code. If the problem persists, you may need to debug your code to identify the issue.\"\n}",
    "hash": "a9f7c7941c5311882106049a4e0e7e95ae176941433141b66773665df14a7456",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PseudoBuilder.Exceptions.RuntimeStepException: Step 'start window app , call !SearchBox' had exception\r\n ---> System.AggregateException: One or more errors occurred. (Cannot find window class.)\r\n ---> System.ComponentModel.Win32Exception (1407): Cannot find window class.\r\n   at PseudoBuilder.Modules.HtmlModule.WindowManager.CreateWindow() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\HtmlModule\\WindowManager.cs:line 115\r\n   at PseudoBuilder.Modules.WindowAppModule.Program.RunWindowApp(String goalName, String appName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\WindowAppModule\\Program.cs:line 23\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseProgram.cs:line 126\r\n   at PseudoBuilder.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 280\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 206\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 215\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 180\r\n   at PseudoBuilder.Runtime.Engine.RunStart() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 160\r\n   at PseudoBuilder.Runtime.Engine.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"The system encountered an error while trying to start a window application. It seems the window class could not be found.\",\n\"howToFix\": \"Please check if the window class you are trying to use exists and is correctly referenced in your code. If the problem persists, you may need to debug your code to identify the issue.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"The system encountered an error while trying to start a window application. It seems the window class could not be found.\",\n\"howToFix\": \"Please check if the window class you are trying to use exists and is correctly referenced in your code. If the problem persists, you may need to debug your code to identify the issue.\"\n}",
    "hash": "d9b2338a474ba218add5b9da41faa57c962190d4bebc2cd4faf141459392aa29",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PseudoBuilder.Exceptions.RuntimeStepException: Step 'start window app , call !SearchBox' had exception\r\n ---> System.AggregateException: One or more errors occurred. (Cannot find window class.)\r\n ---> System.ComponentModel.Win32Exception (1407): Cannot find window class.\r\n   at PseudoBuilder.Modules.HtmlModule.WindowManager.CreateWindow()\r\n   at PseudoBuilder.Modules.WindowAppModule.Program.RunWindowApp(String goalName, String appName, Dictionary`2 parameters)\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Modules.BaseProgram.Run()\r\n   at PseudoBuilder.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce)\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath)\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath)\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(String goalPath)\r\n   at PseudoBuilder.Runtime.Engine.RunStart()\r\n   at PseudoBuilder.Runtime.Engine.Run()",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"The application encountered an error while trying to start a window application. It seems the window class could not be found.\",\n\"howToFix\": \"Please ensure that the window class you are trying to access exists and is correctly referenced in your code. If the problem persists, you may need to debug your code to identify the issue.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"The application encountered an error while trying to start a window application. It seems the window class could not be found.\",\n\"howToFix\": \"Please ensure that the window class you are trying to access exists and is correctly referenced in your code. If the problem persists, you may need to debug your code to identify the issue.\"\n}",
    "hash": "742d8a7e407364bea13d9adf25770adc2c0746149f461af2878e6a60a3a26763",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "start window app  , call !SearchBox",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule()\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, HtmlModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"StartWindowAppAndSearch\",\n\"StepDescription\":\"This step involves starting a window application and calling the SearchBox function.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"WindowAppModule\",\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"StartWindowAppAndSearch\",\n\"StepDescription\":\"This step involves starting a window application and calling the SearchBox function.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"WindowAppModule\",\n\t\"CallGoalModule\"\n]\n}",
    "hash": "235c673a5178fdefa51675039d27c51567c9fd6a1c5c81b3ea536eeb7829643a",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: start window app  , call !SearchBox",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRunWindowApp(String goalName, String? appName, Dictionary`2? parameters) // goalName is required. It is one word. Example: !CallGoal, or !Run. appName is prefix on goal, Example: !Google.Search then Google is appName and Search is goalName. Do not use the names in your response unless defined by user. \n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"RunWindowApp\",\n    \"Inputs\": {\n      \"goalName\": \"!SearchBox\",\n      \"appName\": \"\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"RunWindowApp\",\n    \"Inputs\": {\n      \"goalName\": \"!SearchBox\",\n      \"appName\": \"\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "b4f7ea1d674d128e21e6309d97cc60a5e6dca3f94d908197f7c2f1749dc2d94c",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "search box,\n    input name is \"search\" \n    placeholder \"Type in stuff\"\n    button, has search icon that sends to !Actions",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule()\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, HtmlModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SearchBoxCreation\",\n\"StepDescription\":\"Create a search box with the input name 'search' and a placeholder text 'Type in stuff'. Also, create a button with a search icon that triggers the 'Actions' function when clicked.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HtmlModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SearchBoxCreation\",\n\"StepDescription\":\"Create a search box with the input name 'search' and a placeholder text 'Type in stuff'. Also, create a button with a search icon that triggers the 'Actions' function when clicked.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HtmlModule\"\n]\n}",
    "hash": "5f202cc8358a3ae04b9bafb35c2f3f20bed46b7936b858fa134c05df5586436a",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "Convert this user command to html using bootstrap 4.x css framework. \r\nthe html, head, body is already provided, you only need to generate the content from the div.\r\ndo not include css or js unless user specifies it.\r\nbootstrap css and js is include\r\nfontawesome css is include\r\nonclick events should have a call command\r\n\r\nYou need to figure out what the AppName and GoalName is from user command\r\n\r\nGoalName is required, AppName is optinal\r\n\r\nExample: \r\n- call !Google.Search => Google = AppName, Search = GoalName\r\n- call !DoStuff => DoStuff = GoalName, AppName is empty\r\n- call !SaveUesr => SaveUesr = GoalName, AppName is empty\r\n\r\nthe button should call a function. You should give a name to the function.\r\nThe function should have the following setup to \r\n\r\nfunction nameOfFunction() {\r\nlet message = {\r\n    AppName: \"Google\",\r\n\tGoalName: \"Search\"\r\n    Param: \"This is a parameter from inputs\"\r\n};\r\nwindow.chrome.webview.postMessage(JSON.stringify(message));\r\n}\r\n\r\nYou must return with the whole html/javascript/css content inside ```html, no extra text to explain, be concise\r\n\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: search box,\n    input name is \"search\" \n    placeholder \"Type in stuff\"\n    button, has search icon that sends to !Actions",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRenderHtml(String html)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"container\">\n    <div class=\"input-group mb-3\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Type in stuff\" id=\"search\">\n        <div class=\"input-group-append\">\n            <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" onclick=\"searchAction()\">\n                <i class=\"fas fa-search\"></i>\n            </button>\n        </div>\n    </div>\n</div>\n\n<script>\n    function searchAction() {\n        let message = {\n            AppName: \"Actions\",\n            GoalName: \"Search\",\n            Param: document.getElementById('search').value\n        };\n        window.chrome.webview.postMessage(JSON.stringify(message));\n    }\n</script>\n```"
    },
    "answer": "```html\n<div class=\"container\">\n    <div class=\"input-group mb-3\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Type in stuff\" id=\"search\">\n        <div class=\"input-group-append\">\n            <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" onclick=\"searchAction()\">\n                <i class=\"fas fa-search\"></i>\n            </button>\n        </div>\n    </div>\n</div>\n\n<script>\n    function searchAction() {\n        let message = {\n            AppName: \"Actions\",\n            GoalName: \"Search\",\n            Param: document.getElementById('search').value\n        };\n        window.chrome.webview.postMessage(JSON.stringify(message));\n    }\n</script>\n```",
    "hash": "c8c35e37d89aec0d79715f356b68c71df4a06a554600bb792b8cec001584c2c9",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "search box,\n    input name is \"search\" \n    placeholder \"Type in stuff2\"\n    button, has search icon that sends to !Actions",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule()\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, HtmlModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SearchBoxCreation\",\n\"StepDescription\":\"Create a search box with the input name 'search' and a placeholder text 'Type in stuff2'. Also, create a button with a search icon that triggers the 'Actions' function when clicked.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HtmlModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SearchBoxCreation\",\n\"StepDescription\":\"Create a search box with the input name 'search' and a placeholder text 'Type in stuff2'. Also, create a button with a search icon that triggers the 'Actions' function when clicked.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HtmlModule\"\n]\n}",
    "hash": "4e475cc42b24dfc56679379ede626ba10b7d07fc1f30cd2c0f1c20f3ca1a10ef",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "Convert this user command to html using bootstrap 4.x css framework. \r\nthe html, head, body is already provided, you only need to generate the content from the div.\r\ndo not include css or js unless user specifies it.\r\nbootstrap css and js is include\r\nfontawesome css is include\r\nonclick events should have a call command\r\n\r\nYou need to figure out what the AppName and GoalName is from user command\r\n\r\nGoalName is required, AppName is optinal\r\n\r\nExample: \r\n- call !Google.Search => Google = AppName, Search = GoalName\r\n- call !DoStuff => DoStuff = GoalName, AppName is empty\r\n- call !SaveUesr => SaveUesr = GoalName, AppName is empty\r\n\r\nthe button should call a function. You should give a name to the function.\r\nThe function should have the following setup to \r\n\r\nfunction nameOfFunction() {\r\nlet message = {\r\n    AppName: \"Google\",\r\n\tGoalName: \"Search\"\r\n    Param: \"This is a parameter from inputs\"\r\n};\r\nwindow.chrome.webview.postMessage(JSON.stringify(message));\r\n}\r\n\r\nYou must return with the whole html/javascript/css content inside ```html, no extra text to explain, be concise\r\n\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: search box,\n    input name is \"search\" \n    placeholder \"Type in stuff2\"\n    button, has search icon that sends to !Actions",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRenderHtml(String html)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"container\">\n    <div class=\"input-group mb-3\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Type in stuff2\" id=\"search\">\n        <div class=\"input-group-append\">\n            <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" onclick=\"callAction()\">\n                <i class=\"fa fa-search\"></i>\n            </button>\n        </div>\n    </div>\n</div>\n\n<script>\n    function callAction() {\n        let message = {\n            AppName: \"\",\n            GoalName: \"Actions\",\n            Param: document.getElementById('search').value\n        };\n        window.chrome.webview.postMessage(JSON.stringify(message));\n    }\n</script>\n```"
    },
    "answer": "```html\n<div class=\"container\">\n    <div class=\"input-group mb-3\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Type in stuff2\" id=\"search\">\n        <div class=\"input-group-append\">\n            <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" onclick=\"callAction()\">\n                <i class=\"fa fa-search\"></i>\n            </button>\n        </div>\n    </div>\n</div>\n\n<script>\n    function callAction() {\n        let message = {\n            AppName: \"\",\n            GoalName: \"Actions\",\n            Param: document.getElementById('search').value\n        };\n        window.chrome.webview.postMessage(JSON.stringify(message));\n    }\n</script>\n```",
    "hash": "2ca19f85d01d216d0852c7ce8316bc5d82ee47f74fd6e75f42022d01368ff46a",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PseudoBuilder.Exceptions.RuntimeStepException: Step 'start window app  , call !SearchBox' had exception\r\n ---> System.AggregateException: One or more errors occurred. (Cannot change thread mode after it is set. (0x80010106 (RPC_E_CHANGED_MODE)))\r\n ---> System.Runtime.InteropServices.COMException (0x80010106): Cannot change thread mode after it is set. (0x80010106 (RPC_E_CHANGED_MODE))\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(Int32 errorCode)\r\n   at Microsoft.Web.WebView2.Core.CoreWebView2Environment.CreateAsync(String browserExecutableFolder, String userDataFolder, CoreWebView2EnvironmentOptions options)\r\n   at Microsoft.Web.WebView2.WinForms.WebView2.InitCoreWebView2Async(CoreWebView2Environment environment, CoreWebView2ControllerOptions controllerOptions)\r\n   at PseudoBuilder.Modules.WindowAppModule.Program.RunWindowApp(String goalName, String appName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\WindowAppModule\\Program.cs:line 42\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseProgram.cs:line 126\r\n   at PseudoBuilder.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 280\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 206\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 215\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 180\r\n   at PseudoBuilder.Runtime.Engine.RunStart() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 160\r\n   at PseudoBuilder.Runtime.Engine.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred while trying to start the window application. The system cannot change the thread mode after it is set.\",\n\"howToFix\": \"This issue is often related to the threading model of the COM object. Make sure that the threading model of your COM object matches the threading model of the application. If the error persists, you may need to debug your application to identify the exact line of code causing the issue.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred while trying to start the window application. The system cannot change the thread mode after it is set.\",\n\"howToFix\": \"This issue is often related to the threading model of the COM object. Make sure that the threading model of your COM object matches the threading model of the application. If the error persists, you may need to debug your application to identify the exact line of code causing the issue.\"\n}",
    "hash": "e4d8b7ce9988c49890390af2022877338eabd38614aef801782ce3c97a1ab24f",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PseudoBuilder.Exceptions.RuntimeStepException: Step 'start window app  , call !SearchBox' had exception\r\n ---> System.AggregateException: One or more errors occurred. (One or more errors occurred. (Cannot change thread mode after it is set. (0x80010106 (RPC_E_CHANGED_MODE))))\r\n ---> System.AggregateException: One or more errors occurred. (Cannot change thread mode after it is set. (0x80010106 (RPC_E_CHANGED_MODE)))\r\n ---> System.Runtime.InteropServices.COMException (0x80010106): Cannot change thread mode after it is set. (0x80010106 (RPC_E_CHANGED_MODE))\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(Int32 errorCode)\r\n   at Microsoft.Web.WebView2.Core.CoreWebView2Environment.CreateAsync(String browserExecutableFolder, String userDataFolder, CoreWebView2EnvironmentOptions options)\r\n   at Microsoft.Web.WebView2.WinForms.WebView2.InitCoreWebView2Async(CoreWebView2Environment environment, CoreWebView2ControllerOptions controllerOptions)\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait()\r\n   at PseudoBuilder.Modules.WindowAppModule.Program.RunWindowApp(String goalName, String appName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\WindowAppModule\\Program.cs:line 45\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseProgram.cs:line 126\r\n   at PseudoBuilder.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 280\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 206\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 215\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 180\r\n   at PseudoBuilder.Runtime.Engine.RunStart() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 160\r\n   at PseudoBuilder.Runtime.Engine.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred while trying to start a window application. The system is unable to change the thread mode after it has been set.\",\n\"howToFix\": \"This issue is often related to the threading model of the COM object. Please ensure that the threading model of your COM object is set correctly. If the problem persists, you may need to debug your application to identify the exact line of code causing the issue. It might be related to the 'CreateAsync' method in the 'CoreWebView2Environment' class.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred while trying to start a window application. The system is unable to change the thread mode after it has been set.\",\n\"howToFix\": \"This issue is often related to the threading model of the COM object. Please ensure that the threading model of your COM object is set correctly. If the problem persists, you may need to debug your application to identify the exact line of code causing the issue. It might be related to the 'CreateAsync' method in the 'CoreWebView2Environment' class.\"\n}",
    "hash": "d92470753ac420d5f16327d66e39e27234390c89d1092471000f622bafd2d1da",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PseudoBuilder.Exceptions.RuntimeStepException: Step 'start window app  , call !SearchBox' had exception\r\n ---> System.AggregateException: One or more errors occurred. (Invoke or BeginInvoke cannot be called on a control until the window handle has been created.)\r\n ---> System.InvalidOperationException: Invoke or BeginInvoke cannot be called on a control until the window handle has been created.\r\n   at System.Windows.Forms.Control.MarshaledInvoke(Control caller, Delegate method, Object[] args, Boolean synchronous)\r\n   at System.Windows.Forms.Control.Invoke(Delegate method, Object[] args)\r\n   at System.Windows.Forms.Control.Invoke(Action method)\r\n   at PseudoBuilder.Modules.WindowAppModule.Program.RunWindowApp(String goalName, String appName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\WindowAppModule\\Program.cs:line 44\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseProgram.cs:line 126\r\n   at PseudoBuilder.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 280\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 206\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 215\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 180\r\n   at PseudoBuilder.Runtime.Engine.RunStart() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 160\r\n   at PseudoBuilder.Runtime.Engine.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred while trying to start a window application. The system cannot perform the action because the window handle has not been created yet.\",\n\"howToFix\": \"Ensure that the window application is properly initialized and the window handle is created before calling Invoke or BeginInvoke. This might involve checking the order of your operations or the state of your application when these methods are called.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred while trying to start a window application. The system cannot perform the action because the window handle has not been created yet.\",\n\"howToFix\": \"Ensure that the window application is properly initialized and the window handle is created before calling Invoke or BeginInvoke. This might involve checking the order of your operations or the state of your application when these methods are called.\"\n}",
    "hash": "2fe2305d281f30822c76c6104a31350e9d91bb7c5f3061bcba873760c927451c",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PseudoBuilder.Exceptions.RuntimeStepException: Step 'start window app  , call !SearchBox' had exception\r\n ---> System.AggregateException: One or more errors occurred. (Invoke or BeginInvoke cannot be called on a control until the window handle has been created.)\r\n ---> System.InvalidOperationException: Invoke or BeginInvoke cannot be called on a control until the window handle has been created.\r\n   at System.Windows.Forms.Control.MarshaledInvoke(Control caller, Delegate method, Object[] args, Boolean synchronous)\r\n   at System.Windows.Forms.Control.Invoke(Delegate method, Object[] args)\r\n   at System.Windows.Forms.Control.Invoke(Action method)\r\n   at PseudoBuilder.Modules.WindowAppModule.Program.RunWindowApp(String goalName, String appName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\WindowAppModule\\Program.cs:line 47\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseProgram.cs:line 126\r\n   at PseudoBuilder.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 280\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 206\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 215\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 180\r\n   at PseudoBuilder.Runtime.Engine.RunStart() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 160\r\n   at PseudoBuilder.Runtime.Engine.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred while starting the window application. The system cannot perform the 'Invoke' or 'BeginInvoke' operations until the window handle has been created.\",\n\"howToFix\": \"Ensure that the window application is fully loaded before calling 'Invoke' or 'BeginInvoke'. You may need to add some delay or use an event that signals that the window handle is ready. If the problem persists, consider reviewing your code for any potential issues or consult with a software developer.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred while starting the window application. The system cannot perform the 'Invoke' or 'BeginInvoke' operations until the window handle has been created.\",\n\"howToFix\": \"Ensure that the window application is fully loaded before calling 'Invoke' or 'BeginInvoke'. You may need to add some delay or use an event that signals that the window handle is ready. If the problem persists, consider reviewing your code for any potential issues or consult with a software developer.\"\n}",
    "hash": "43089a02ba73f0ecfb159a192007e4e68701e54e339b10d663849bbccd51ee3b",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PseudoBuilder.Exceptions.RuntimeStepException: Step 'start window app  , call !SearchBox' had exception\r\n ---> System.AggregateException: One or more errors occurred. (Cannot change thread mode after it is set. (0x80010106 (RPC_E_CHANGED_MODE)))\r\n ---> System.Runtime.InteropServices.COMException (0x80010106): Cannot change thread mode after it is set. (0x80010106 (RPC_E_CHANGED_MODE))\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(Int32 errorCode)\r\n   at Microsoft.Web.WebView2.Core.CoreWebView2Environment.CreateAsync(String browserExecutableFolder, String userDataFolder, CoreWebView2EnvironmentOptions options)\r\n   at Microsoft.Web.WebView2.WinForms.WebView2.InitCoreWebView2Async(CoreWebView2Environment environment, CoreWebView2ControllerOptions controllerOptions)\r\n   at PseudoBuilder.Modules.WindowAppModule.Program.RunWindowApp(String goalName, String appName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\WindowAppModule\\Program.cs:line 45\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseProgram.cs:line 126\r\n   at PseudoBuilder.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 280\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 206\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 215\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 180\r\n   at PseudoBuilder.Runtime.Engine.RunStart() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 160\r\n   at PseudoBuilder.Runtime.Engine.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred while trying to start a window application. The system is unable to change the thread mode after it has been set.\",\n\"howToFix\": \"This issue is often related to the threading model of the COM object. Make sure that the threading model of your COM object matches the threading model of the application. If the error persists, you may need to debug your application to identify the exact line of code causing the issue.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred while trying to start a window application. The system is unable to change the thread mode after it has been set.\",\n\"howToFix\": \"This issue is often related to the threading model of the COM object. Make sure that the threading model of your COM object matches the threading model of the application. If the error persists, you may need to debug your application to identify the exact line of code causing the issue.\"\n}",
    "hash": "a40457020551ead2dc590d5cd946280c7a27aed537146f290a396bd4ee86cf33",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PseudoBuilder.Exceptions.RuntimeStepException: Step 'start window app  , call !SearchBox' had exception\r\n ---> System.AggregateException: One or more errors occurred. (Cannot change thread mode after it is set. (0x80010106 (RPC_E_CHANGED_MODE)))\r\n ---> System.Runtime.InteropServices.COMException (0x80010106): Cannot change thread mode after it is set. (0x80010106 (RPC_E_CHANGED_MODE))\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(Int32 errorCode)\r\n   at Microsoft.Web.WebView2.Core.CoreWebView2Environment.CreateAsync(String browserExecutableFolder, String userDataFolder, CoreWebView2EnvironmentOptions options)\r\n   at PseudoBuilder.Modules.WindowAppModule.Program.RunWindowApp(String goalName, String appName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\WindowAppModule\\Program.cs:line 46\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Modules\\BaseProgram.cs:line 126\r\n   at PseudoBuilder.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 280\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 206\r\n   --- End of inner exception stack trace ---\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 215\r\n   at PseudoBuilder.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 180\r\n   at PseudoBuilder.Runtime.Engine.RunStart() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 160\r\n   at PseudoBuilder.Runtime.Engine.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PseudoBuilder\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred while trying to start a window application. The system was unable to change the thread mode after it was set.\",\n\"howToFix\": \"This issue might be due to a conflict in the threading model of your application. Please ensure that the threading model is set correctly before it is used. If you are using COM components, make sure they are initialized correctly. If the problem persists, you may need to debug your application to identify the exact cause of the issue.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred while trying to start a window application. The system was unable to change the thread mode after it was set.\",\n\"howToFix\": \"This issue might be due to a conflict in the threading model of your application. Please ensure that the threading model is set correctly before it is used. If you are using COM components, make sure they are initialized correctly. If the problem persists, you may need to debug your application to identify the exact cause of the issue.\"\n}",
    "hash": "82609e088b509661cc9a3cc1b6ed17744c6e7c91b91a5335692c1be58f778fec",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "search box,\n    input name and id is \"search\"\n    placeholder \"Type in stuff2\"\n    button, has search icon that sends to !Actions",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule()\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, HtmlModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SearchBoxCreation\",\n\"StepDescription\":\"Create a search box with the name and id as 'search'. The placeholder text should be 'Type in stuff2'. There should also be a button with a search icon that triggers the 'Actions' function when clicked.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HtmlModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SearchBoxCreation\",\n\"StepDescription\":\"Create a search box with the name and id as 'search'. The placeholder text should be 'Type in stuff2'. There should also be a button with a search icon that triggers the 'Actions' function when clicked.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HtmlModule\"\n]\n}",
    "hash": "e5f3de5a86232c7b2945dbbb8f091c062d9cee97036ad3ade8e799093b777047",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "Convert this user command to html using bootstrap 4.x css framework. \r\nthe html, head, body is already provided, you only need to generate the content from the div.\r\ndo not include css or js unless user specifies it.\r\nbootstrap css and js is include\r\nfontawesome css is include\r\nonclick events should have a call command\r\n\r\nYou need to figure out what the AppName and GoalName is from user command\r\n\r\nGoalName is required, AppName is optinal\r\n\r\nExample: \r\n- call !Google.Search => Google = AppName, Search = GoalName\r\n- call !DoStuff => DoStuff = GoalName, AppName is empty\r\n- call !SaveUesr => SaveUesr = GoalName, AppName is empty\r\n\r\nthe button should call a function. You should give a name to the function.\r\nThe function should have the following setup to \r\n\r\nfunction nameOfFunction() {\r\nlet message = {\r\n    AppName: \"Google\",\r\n\tGoalName: \"Search\"\r\n    Param: \"This is a parameter from inputs\"\r\n};\r\nwindow.chrome.webview.postMessage(JSON.stringify(message));\r\n}\r\n\r\nYou must return with the whole html/javascript/css content inside ```html, no extra text to explain, be concise\r\n\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: search box,\n    input name and id is \"search\"\n    placeholder \"Type in stuff2\"\n    button, has search icon that sends to !Actions",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRenderHtml(String html)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" id=\"search\" name=\"search\" placeholder=\"Type in stuff2\">\n    <button class=\"btn btn-primary\" onclick=\"postMessageToHost()\">\n        <i class=\"fas fa-search\"></i>\n    </button>\n</div>\n\n<script>\n    function postMessageToHost() {\n        let message = {\n            AppName: \"\",\n            GoalName: \"Actions\",\n            Param: document.getElementById('search').value\n        };\n        window.chrome.webview.postMessage(JSON.stringify(message));\n    }\n</script>\n```"
    },
    "answer": "```html\n<div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" id=\"search\" name=\"search\" placeholder=\"Type in stuff2\">\n    <button class=\"btn btn-primary\" onclick=\"postMessageToHost()\">\n        <i class=\"fas fa-search\"></i>\n    </button>\n</div>\n\n<script>\n    function postMessageToHost() {\n        let message = {\n            AppName: \"\",\n            GoalName: \"Actions\",\n            Param: document.getElementById('search').value\n        };\n        window.chrome.webview.postMessage(JSON.stringify(message));\n    }\n</script>\n```",
    "hash": "1fa6724a72d1eebf8aa62bf8efa3a84ac3e87210ae5b6c6ae7daeeb497a327f1",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button, has search icon that sends to !Actions",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule()\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, HtmlModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SearchBoxInput\",\n\"StepDescription\":\"The user is required to input a name and id labeled 'search' into a search box. The placeholder for this input is 'Type in stuff2'. There is also a button with a search icon that when clicked, sends the user to the 'Actions' function.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"SeleniumModule\",\n\t\"HtmlModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SearchBoxInput\",\n\"StepDescription\":\"The user is required to input a name and id labeled 'search' into a search box. The placeholder for this input is 'Type in stuff2'. There is also a button with a search icon that when clicked, sends the user to the 'Actions' function.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"SeleniumModule\",\n\t\"HtmlModule\"\n]\n}",
    "hash": "42fcdc787b1b9e08ea892941b1f91845d02f45390a7ea29ff2858a1a735b84fc",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"Length\": \"Int32\",\r\n  \"LongLength\": \"Int64\",\r\n  \"Rank\": \"Int32\",\r\n  \"SyncRoot\": \"Object\",\r\n  \"IsReadOnly\": \"Boolean\",\r\n  \"IsFixedSize\": \"Boolean\",\r\n  \"IsSynchronized\": \"Boolean\"\r\n}",
      "question": "command: search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button, has search icon that sends to !Actions",
      "assistant": "\r\n## functions available defined in csharp ##\r\nStartBrowser(Boolean? useUserSession = False, String? userSessionPath)\nCloseBrowser()\nNavigateToUrl(String url)\nClick(String cssSelector)\nSendKey(String cssSelector, String value)\nInput(String cssSelector, String value)\nSubmit(String cssSelector, String value)\nExtractContent(String cssSelector, Boolean? clearHtml = True)\nSwitchTab(Int32 tabIndex)\nWait(Int32? milliseconds = 1000)\nDispose()\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nEach line represents a command. Return an array of Action in your JSON, each action represents a call to a function. Make sure to convert html tags into correct css selector format",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "[\n  {\n    \"Action\": {\n      \"FunctionName\": \"Input\",\n      \"Inputs\": {\n        \"cssSelector\": \"input[name='search'][id='search'][placeholder='Type in stuff2']\",\n        \"value\": \"%searchValue%\"\n      },\n      \"Outputs\": {}\n    }\n  },\n  {\n    \"Action\": {\n      \"FunctionName\": \"Submit\",\n      \"Inputs\": {\n        \"cssSelector\": \"button:has(i[class*='search'])\"\n      },\n      \"Outputs\": {}\n    }\n  }\n]"
    },
    "answer": "[\n  {\n    \"Action\": {\n      \"FunctionName\": \"Input\",\n      \"Inputs\": {\n        \"cssSelector\": \"input[name='search'][id='search'][placeholder='Type in stuff2']\",\n        \"value\": \"%searchValue%\"\n      },\n      \"Outputs\": {}\n    }\n  },\n  {\n    \"Action\": {\n      \"FunctionName\": \"Submit\",\n      \"Inputs\": {\n        \"cssSelector\": \"button:has(i[class*='search'])\"\n      },\n      \"Outputs\": {}\n    }\n  }\n]",
    "hash": "744f39eaf0ca81700bd51ef87dbdc3521afa0438a7acec3bb2ea14d9c891e350",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button, has search icon that sends to !Actions",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nHtmlModule - generates html from user description\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SearchBoxCreation\",\n\"StepDescription\":\"Create a search box with the name and id as 'search' and a placeholder text 'Type in stuff2'. Also, create a button with a search icon that triggers the 'Actions' function when clicked.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HtmlModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SearchBoxCreation\",\n\"StepDescription\":\"Create a search box with the name and id as 'search' and a placeholder text 'Type in stuff2'. Also, create a button with a search icon that triggers the 'Actions' function when clicked.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HtmlModule\"\n]\n}",
    "hash": "b0696a763e5d5e84700f156a44894a1942bcccee1b8de49e52266b8dddc3fa8d",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "Convert this user command to html using bootstrap 4.x css framework. \r\nthe html, head, body is already provided, you only need to generate the content from the div.\r\ndo not include css or js unless user specifies it.\r\nbootstrap css and js is include\r\nfontawesome css is include\r\nonclick events should have a call command\r\n\r\nYou need to figure out what the AppName and GoalName is from user command\r\n\r\nGoalName is required, AppName is optinal\r\n\r\nExample: \r\n- call !Google.Search => Google = AppName, Search = GoalName\r\n- call !DoStuff => DoStuff = GoalName, AppName is empty\r\n- call !SaveUesr => SaveUesr = GoalName, AppName is empty\r\n\r\nthe button should call a function. You should give a name to the function.\r\nThe function should have the following setup to \r\n\r\nfunction nameOfFunction() {\r\nlet message = {\r\n    AppName: \"Google\",\r\n\tGoalName: \"Search\"\r\n    Params: {\r\n\t\tinputName : inputValue\r\n\t\t...\r\n\t}\r\n};\r\nwindow.chrome.webview.postMessage(JSON.stringify(message));\r\n}\r\n\r\nYou must return with the whole html/javascript/css content inside ```html, no extra text to explain, be concise\r\n\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button, has search icon that sends to !Actions",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRenderHtml(String html)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" id=\"search\" name=\"search\" placeholder=\"Type in stuff2\">\n    <button class=\"btn btn-primary\" onclick=\"callAction()\">\n        <i class=\"fa fa-search\"></i>\n    </button>\n</div>\n\n<script>\n    function callAction() {\n        let message = {\n            AppName: \"\",\n            GoalName: \"Actions\",\n            Params: {\n                search : document.getElementById('search').value\n            }\n        };\n        window.chrome.webview.postMessage(JSON.stringify(message));\n    }\n</script>\n```"
    },
    "answer": "```html\n<div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" id=\"search\" name=\"search\" placeholder=\"Type in stuff2\">\n    <button class=\"btn btn-primary\" onclick=\"callAction()\">\n        <i class=\"fa fa-search\"></i>\n    </button>\n</div>\n\n<script>\n    function callAction() {\n        let message = {\n            AppName: \"\",\n            GoalName: \"Actions\",\n            Params: {\n                search : document.getElementById('search').value\n            }\n        };\n        window.chrome.webview.postMessage(JSON.stringify(message));\n    }\n</script>\n```",
    "hash": "f45c2341d8bd6e20637c2b450886b8f444fa667dbf278d86f84c5fdad97e9af3",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "html: search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button, has search icon that sends to !Actions",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule()\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, HtmlModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CreateSearchBox\",\n\"StepDescription\":\"Create an HTML search box with an input field. The input field has a name and id of 'search' and a placeholder text 'Type in stuff2'. There is also a button with a search icon that triggers the 'Actions' function when clicked.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HtmlModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CreateSearchBox\",\n\"StepDescription\":\"Create an HTML search box with an input field. The input field has a name and id of 'search' and a placeholder text 'Type in stuff2'. There is also a button with a search icon that triggers the 'Actions' function when clicked.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HtmlModule\"\n]\n}",
    "hash": "5314dfecb0cffcb3c1f83fe64477e37ff0dff67827f0859983a9b4e1e3d0639b",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "Convert this user command to html using bootstrap 4.x css framework. \r\nthe html, head, body is already provided, you only need to generate the content from the div.\r\ndo not include css or js unless user specifies it.\r\nbootstrap css and js is include\r\nfontawesome css is include\r\nonclick events should have a call command\r\n\r\nYou need to figure out what the AppName and GoalName is from user command\r\n\r\nGoalName is required, AppName is optinal\r\n\r\nExample: \r\n- call !Google.Search => Google = AppName, Search = GoalName\r\n- call !DoStuff => DoStuff = GoalName, AppName is empty\r\n- call !SaveUesr => SaveUesr = GoalName, AppName is empty\r\n\r\nthe button should call a function. You should give a name to the function.\r\nThe function should have the following setup to \r\n\r\nfunction nameOfFunction() {\r\nlet message = {\r\n    AppName: \"Google\",\r\n\tGoalName: \"Search\"\r\n    Params: {\r\n\t\tinputName : inputValue\r\n\t\t...\r\n\t}\r\n};\r\nwindow.chrome.webview.postMessage(JSON.stringify(message));\r\n}\r\n\r\nYou must return with the whole html/javascript/css content inside ```html, no extra text to explain, be concise\r\n\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: html: search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button, has search icon that sends to !Actions",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRenderHtml(String html)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" id=\"search\" name=\"search\" placeholder=\"Type in stuff2\">\n    <button class=\"btn btn-primary\" onclick=\"callAction()\">\n        <i class=\"fa fa-search\"></i>\n    </button>\n</div>\n\n<script>\n    function callAction() {\n        let message = {\n            AppName: \"\",\n            GoalName: \"Actions\",\n            Params: {\n                search : document.getElementById('search').value\n            }\n        };\n        window.chrome.webview.postMessage(JSON.stringify(message));\n    }\n</script>\n```"
    },
    "answer": "```html\n<div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" id=\"search\" name=\"search\" placeholder=\"Type in stuff2\">\n    <button class=\"btn btn-primary\" onclick=\"callAction()\">\n        <i class=\"fa fa-search\"></i>\n    </button>\n</div>\n\n<script>\n    function callAction() {\n        let message = {\n            AppName: \"\",\n            GoalName: \"Actions\",\n            Params: {\n                search : document.getElementById('search').value\n            }\n        };\n        window.chrome.webview.postMessage(JSON.stringify(message));\n    }\n</script>\n```",
    "hash": "06cd876b060ab2de3cc7449b3c864d86d01bf0417a1a24402a1671e2c2a6c809",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "html: search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, has search icon that sends to !Actions when clicked",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule()\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, HtmlModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CreateSearchBox\",\n\"StepDescription\":\"Create an HTML search box with an input field and a button. The input field has a name and id of 'search' and a placeholder text 'Type in stuff2'. The button is placed on the same line as the input field and has a search icon. When the button is clicked, it triggers the 'Actions' function.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HtmlModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CreateSearchBox\",\n\"StepDescription\":\"Create an HTML search box with an input field and a button. The input field has a name and id of 'search' and a placeholder text 'Type in stuff2'. The button is placed on the same line as the input field and has a search icon. When the button is clicked, it triggers the 'Actions' function.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HtmlModule\"\n]\n}",
    "hash": "afeceb234edbb470d2f555e3793c6591111b5b943aa02cd516d9b8e4c495073c",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "Convert this user command to html using bootstrap 4.x css framework. \r\nthe html, head, body is already provided, you only need to generate the content from the div.\r\ndo not include css or js unless user specifies it.\r\nbootstrap css and js is include\r\nfontawesome css is include\r\nonclick events should have a call command\r\n\r\nYou need to figure out what the AppName and GoalName is from user command\r\n\r\nGoalName is required, AppName is optinal\r\n\r\nExample: \r\n- call !Google.Search => Google = AppName, Search = GoalName\r\n- call !DoStuff => DoStuff = GoalName, AppName is empty\r\n- call !SaveUesr => SaveUesr = GoalName, AppName is empty\r\n\r\nthe button should call a function. You should give a name to the function.\r\nThe function should have the following setup to \r\n\r\nfunction nameOfFunction() {\r\nlet message = {\r\n    AppName: \"Google\",\r\n\tGoalName: \"Search\"\r\n    Params: {\r\n\t\tinputName : inputValue\r\n\t\t...\r\n\t}\r\n};\r\nwindow.chrome.webview.postMessage(JSON.stringify(message));\r\n}\r\n\r\nYou must return with the whole html/javascript/css content inside ```html, no extra text to explain, be concise\r\n\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: html: search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, has search icon that sends to !Actions when clicked",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRenderHtml(String html)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"form-inline\">\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Type in stuff2\" id=\"search\" name=\"search\">\n    <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onclick=\"postMessageToActions()\">\n        <i class=\"fas fa-search\"></i>\n    </button>\n</div>\n\n<script>\n    function postMessageToActions() {\n        let message = {\n            AppName: \"\",\n            GoalName: \"Actions\",\n            Params: {\n                search : document.getElementById('search').value\n            }\n        };\n        window.chrome.webview.postMessage(JSON.stringify(message));\n    }\n</script>\n```"
    },
    "answer": "```html\n<div class=\"form-inline\">\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Type in stuff2\" id=\"search\" name=\"search\">\n    <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onclick=\"postMessageToActions()\">\n        <i class=\"fas fa-search\"></i>\n    </button>\n</div>\n\n<script>\n    function postMessageToActions() {\n        let message = {\n            AppName: \"\",\n            GoalName: \"Actions\",\n            Params: {\n                search : document.getElementById('search').value\n            }\n        };\n        window.chrome.webview.postMessage(JSON.stringify(message));\n    }\n</script>\n```",
    "hash": "1d252a7ef7f1275e620a95ffb8f410389ac2888a4f71b96735d0dd85d05d4bfb",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "html: search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click call !Actions",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule()\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule()\n, SeleniumModule()\n, ScheduleModule()\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule()\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule()\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule()\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule()\n, HtmlModule()\n, FileModule()\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule()\n, CryptographicModule()\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule()\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CreateSearchBox\",\n\"StepDescription\":\"Create an HTML search box with an input field and a button. The input field has the name and id 'search' and a placeholder text 'Type in stuff2'. The button is placed in the same line as the input field and has a search icon. When the button is clicked, the function 'Actions' is called.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HtmlModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CreateSearchBox\",\n\"StepDescription\":\"Create an HTML search box with an input field and a button. The input field has the name and id 'search' and a placeholder text 'Type in stuff2'. The button is placed in the same line as the input field and has a search icon. When the button is clicked, the function 'Actions' is called.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HtmlModule\"\n]\n}",
    "hash": "643202f5d19f84056e1c05ebf5829a18409c0c63cbd17c2062d041fcda25549b",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": null,
      "system": "Convert this user command to html using bootstrap 4.x css framework. \r\nthe html, head, body is already provided, you only need to generate the content from the div.\r\ndo not include css or js unless user specifies it.\r\nbootstrap css and js is include\r\nfontawesome css is include\r\nonclick events should have a call command\r\n\r\nYou need to figure out what the AppName and GoalName is from user command\r\n\r\nGoalName is required, AppName is optinal\r\n\r\nExample: \r\n- call !Google.Search => Google = AppName, Search = GoalName\r\n- call !DoStuff => DoStuff = GoalName, AppName is empty\r\n- call !SaveUesr => SaveUesr = GoalName, AppName is empty\r\n\r\nthe button should call a function. You should give a name to the function.\r\nThe function should have the following setup to \r\n\r\nfunction nameOfFunction() {\r\nlet message = {\r\n    AppName: \"Google\",\r\n\tGoalName: \"Search\"\r\n    Params: {\r\n\t\tinputName : inputValue\r\n\t\t...\r\n\t}\r\n};\r\nwindow.chrome.webview.postMessage(JSON.stringify(message));\r\n}\r\n\r\nYou must return with the whole html/javascript/css content inside ```html, no extra text to explain, be concise\r\n\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: html: search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click call !Actions",
      "assistant": "\r\n## functions available defined in csharp ##\r\nRenderHtml(String html)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"form-inline\">\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Type in stuff2\" id=\"search\" name=\"search\">\n    <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onclick=\"callAction()\">\n        <i class=\"fas fa-search\"></i>\n    </button>\n</div>\n\n<script>\n    function callAction() {\n        let message = {\n            AppName: \"\",\n            GoalName: \"Actions\",\n            Params: {\n                search : document.getElementById('search').value\n            }\n        };\n        window.chrome.webview.postMessage(JSON.stringify(message));\n    }\n</script>\n```"
    },
    "answer": "```html\n<div class=\"form-inline\">\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Type in stuff2\" id=\"search\" name=\"search\">\n    <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onclick=\"callAction()\">\n        <i class=\"fas fa-search\"></i>\n    </button>\n</div>\n\n<script>\n    function callAction() {\n        let message = {\n            AppName: \"\",\n            GoalName: \"Actions\",\n            Params: {\n                search : document.getElementById('search').value\n            }\n        };\n        window.chrome.webview.postMessage(JSON.stringify(message));\n    }\n</script>\n```",
    "hash": "ffee83bc7fad76efbaa68f60c77d9b93e5ab46b7b7b601b6e2665bdfdbc816f9",
    "Created": "0001-01-01T00:00:00"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "askllm:\n    system: Your job is to select the correct app to use from the user request. \n        You MUST return in json scheme:{app:string}\n    assistant: === Available apps ===\n     %__Apps__% \n    === Available modules ===\n    user: %search% ",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind onCreate, onChange, onRemove events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SelectApp\",\n\"StepDescription\": \"The assistant is required to select the correct application based on the user's request.\",\n\"Modules\": [\"PLang.Modules.LlmModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"SelectApp\",\n\"StepDescription\": \"The assistant is required to select the correct application based on the user's request.\",\n\"Modules\": [\"PLang.Modules.LlmModule\"],\n\"WaitForExecution\": true}",
    "hash": "f3e6500e65632ebd721814329e9779fbdf5051329aa04b6f0f6398a1c9aab7bd",
    "Created": "2023-10-12T21:29:38.1991452Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "start window app  , call !SearchBox",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind onCreate, onChange, onRemove events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"StartWindowAppAndSearch\",\n\"StepDescription\": \"This step involves starting a window application and calling the SearchBox function.\",\n\"Modules\": [\"PLang.Modules.WindowAppModule\", \"PLang.Modules.CallGoalModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 500}}"
    },
    "answer": "{\"StepName\": \"StartWindowAppAndSearch\",\n\"StepDescription\": \"This step involves starting a window application and calling the SearchBox function.\",\n\"Modules\": [\"PLang.Modules.WindowAppModule\", \"PLang.Modules.CallGoalModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 500}}",
    "hash": "28d16894939461ec28ed45c59933a56d65d74fefe8d177edb45910e05099b8a0",
    "Created": "2023-10-12T21:30:04.2781589Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: start window app  , call !SearchBox",
      "assistant": "## functions available defined in csharp ##\r\nvoid CreateNewWindow() \nString RunWindowApp(String goalName, Dictionary`2<String>? parameters)  // goalName is required. It is one word. Example: !CallGoal, or !Google.Search. Do not use the names in your response unless defined by user. \n\r\n## functions available ends ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"FunctionName\": \"RunWindowApp\",\n  \"Parameters\": [\n    {\n      \"Type\": \"string\",\n      \"Name\": \"goalName\",\n      \"Value\": \"!SearchBox\"\n    },\n    {\n      \"Type\": \"Dictionary`2<String>\",\n      \"Name\": \"parameters\",\n      \"Value\": null\n    }\n  ],\n  \"ReturnValue\": {\n    \"Type\": \"string\",\n    \"VariableName\": \"windowAppResult\"\n  }\n}"
    },
    "answer": "{\n  \"FunctionName\": \"RunWindowApp\",\n  \"Parameters\": [\n    {\n      \"Type\": \"string\",\n      \"Name\": \"goalName\",\n      \"Value\": \"!SearchBox\"\n    },\n    {\n      \"Type\": \"Dictionary`2<String>\",\n      \"Name\": \"parameters\",\n      \"Value\": null\n    }\n  ],\n  \"ReturnValue\": {\n    \"Type\": \"string\",\n    \"VariableName\": \"windowAppResult\"\n  }\n}",
    "hash": "11e1c0c4e497a1d926d7318d2a16b4eafd1adbd317b92dc48fec152a79bb18f6",
    "Created": "2023-10-12T21:30:12.7364013Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click call !Actions",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind onCreate, onChange, onRemove events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SearchBoxAction\",\n\"StepDescription\": \"Create a search box with an input field having name and id as 'search' and a placeholder 'Type in stuff2'. A button with a search icon is placed in the same line as the input field. When the button is clicked, the function 'Actions' is called.\",\n\"Modules\": [\"PLang.Modules.SeleniumModule\"],\n\"WaitForExecution\": true,\n\"ExternalServiceHandler\": {\"GoalName\": \"Actions\",\n\"Uri\": \"\",\n\"StartCssSelector\": \"\",\n\"EndCssSelector\": \"\"},\n\"CachingHandler\": {\"TimeInMilliseconds\": 0,\n\"CacheKey\": \"\",\n\"CachingType\": 0},\n\"ErrorHandler\": {\"IgnoreErrors\": false,\n\"Except\": []},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}"
    },
    "answer": "{\"StepName\": \"SearchBoxAction\",\n\"StepDescription\": \"Create a search box with an input field having name and id as 'search' and a placeholder 'Type in stuff2'. A button with a search icon is placed in the same line as the input field. When the button is clicked, the function 'Actions' is called.\",\n\"Modules\": [\"PLang.Modules.SeleniumModule\"],\n\"WaitForExecution\": true,\n\"ExternalServiceHandler\": {\"GoalName\": \"Actions\",\n\"Uri\": \"\",\n\"StartCssSelector\": \"\",\n\"EndCssSelector\": \"\"},\n\"CachingHandler\": {\"TimeInMilliseconds\": 0,\n\"CacheKey\": \"\",\n\"CachingType\": 0},\n\"ErrorHandler\": {\"IgnoreErrors\": false,\n\"Except\": []},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}",
    "hash": "9635ce64227ab3f428432ec6c987bd3facdd26f0742dee0ff357793aea3400b3",
    "Created": "2023-10-12T21:30:24.6360242Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click call !Actions",
      "assistant": "## functions available defined in csharp ##\r\nvoid StartBrowser(String? browserType = Chrome, Boolean? headless = False, Boolean? useUserSession = False, String? userSessionPath, Boolean? incognito = False, Boolean? kioskMode = False, Dictionary`2<String>? argumentOptions)  // browserType=Chrome|Edge|Firefox|IE|Safari. \nvoid CloseBrowser() \nvoid NavigateToUrl(String url, String? browserType = Chrome, Boolean? headless = False, Boolean? useUserSession = False, String? userSessionPath, Boolean? incognito = False, Boolean? kioskMode = False, Dictionary`2<String>? argumentOptions) \nvoid Click(String cssSelector) \nvoid SendKey(String value, String? cssSelector) \nvoid Input(String value, String? cssSelector)  // set the value of an input by cssSelector. \nvoid Submit(String? cssSelector) \nList`1 ExtractContent(Boolean? clearHtml = True, String? cssSelector) \nvoid SwitchTab(Int32 tabIndex) \nvoid Wait(Int32? milliseconds = 1000) \nvoid TakeScreenshotOfWebsite(String saveToPath) \n\r\n## functions available ends ##\nMake sure to convert html tags into correct css selector format",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Input\",\n\"Parameters\": [\n    {\"Type\": \"string\", \"Name\": \"value\", \"Value\": \"%name%\"},\n    {\"Type\": \"string\", \"Name\": \"cssSelector\", \"Value\": \"input[id='search'][name='search'][placeholder='Type in stuff2']\"}\n],\n\"ReturnValue\": null},\n\n{\"FunctionName\": \"Click\",\n\"Parameters\": [\n    {\"Type\": \"string\", \"Name\": \"cssSelector\", \"Value\": \"button:has(i.fa-search)\"}\n],\n\"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Input\",\n\"Parameters\": [\n    {\"Type\": \"string\", \"Name\": \"value\", \"Value\": \"%name%\"},\n    {\"Type\": \"string\", \"Name\": \"cssSelector\", \"Value\": \"input[id='search'][name='search'][placeholder='Type in stuff2']\"}\n],\n\"ReturnValue\": null},\n\n{\"FunctionName\": \"Click\",\n\"Parameters\": [\n    {\"Type\": \"string\", \"Name\": \"cssSelector\", \"Value\": \"button:has(i.fa-search)\"}\n],\n\"ReturnValue\": null}",
    "hash": "5b81a54ecb55dda70aef24097be2c192d773b0753e6c998515e53fdb99832733",
    "Created": "2023-10-12T21:30:33.2796761Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "write out %result%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind onCreate, onChange, onRemove events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"WriteOutResult\",\n\"StepDescription\": \"Output the value of the variable 'result'\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"WriteOutResult\",\n\"StepDescription\": \"Output the value of the variable 'result'\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true}",
    "hash": "389c38170e5684a384971ce2e5c30c93038d2b531f71d857dab3ba32b26ac87a",
    "Created": "2023-10-12T21:30:36.5571396Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "write out %result%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\nHtmlModule\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"WriteOutput\",\n\"StepDescription\": \"Write the value of the variable 'result' to the output\",\n\"Modules\": [\"N/A\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}"
    },
    "answer": "{\"StepName\": \"WriteOutput\",\n\"StepDescription\": \"Write the value of the variable 'result' to the output\",\n\"Modules\": [\"N/A\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}",
    "hash": "c436dfc1cbc0142bd00b3012031e34c46fd26db2e46a8aa4066963a39bc9eaf9",
    "Created": "2023-10-12T21:32:43.927258Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click call !Actions",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\nHtmlModule\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SearchBoxAction\",\n\"StepDescription\": \"Define a search box with input name and id as 'search' and placeholder as 'Type in stuff2'. A button with a search icon is placed in the same line as the input. When the button is clicked, the 'Actions' function is called.\",\n\"Modules\": [\"HtmlModule\"],\n\"WaitForExecution\": true,\n\"ExternalServiceHandler\": {\"GoalName\": \"Actions\",\n\"Uri\": \"\",\n\"StartCssSelector\": \"\",\n\"EndCssSelector\": \"\"},\n\"CachingHandler\": {\"TimeInMilliseconds\": 0,\n\"CacheKey\": \"\",\n\"CachingType\": 0},\n\"ErrorHandler\": {\"IgnoreErrors\": false,\n\"Except\": []},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}"
    },
    "answer": "{\"StepName\": \"SearchBoxAction\",\n\"StepDescription\": \"Define a search box with input name and id as 'search' and placeholder as 'Type in stuff2'. A button with a search icon is placed in the same line as the input. When the button is clicked, the 'Actions' function is called.\",\n\"Modules\": [\"HtmlModule\"],\n\"WaitForExecution\": true,\n\"ExternalServiceHandler\": {\"GoalName\": \"Actions\",\n\"Uri\": \"\",\n\"StartCssSelector\": \"\",\n\"EndCssSelector\": \"\"},\n\"CachingHandler\": {\"TimeInMilliseconds\": 0,\n\"CacheKey\": \"\",\n\"CachingType\": 0},\n\"ErrorHandler\": {\"IgnoreErrors\": false,\n\"Except\": []},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}",
    "hash": "9f420f087e13de3554c59f0590d22e9b16e69dee380989db36a0987f9e30d847",
    "Created": "2023-10-12T21:37:49.4197302Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click call !Actions",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"CreateSearchBoxWithButton\",\n\"Parameters\": [\n    {\"Type\": \"string\", \"Name\": \"inputName\", \"Value\": \"search\"},\n    {\"Type\": \"string\", \"Name\": \"inputId\", \"Value\": \"search\"},\n    {\"Type\": \"string\", \"Name\": \"placeholder\", \"Value\": \"Type in stuff2\"},\n    {\"Type\": \"string\", \"Name\": \"buttonIcon\", \"Value\": \"search\"},\n    {\"Type\": \"string\", \"Name\": \"actionOnClick\", \"Value\": \"!Actions\"}\n],\n\"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"CreateSearchBoxWithButton\",\n\"Parameters\": [\n    {\"Type\": \"string\", \"Name\": \"inputName\", \"Value\": \"search\"},\n    {\"Type\": \"string\", \"Name\": \"inputId\", \"Value\": \"search\"},\n    {\"Type\": \"string\", \"Name\": \"placeholder\", \"Value\": \"Type in stuff2\"},\n    {\"Type\": \"string\", \"Name\": \"buttonIcon\", \"Value\": \"search\"},\n    {\"Type\": \"string\", \"Name\": \"actionOnClick\", \"Value\": \"!Actions\"}\n],\n\"ReturnValue\": null}",
    "hash": "b1c2fbfc0f734525fcb3c402ae151993185e401e10a7b5934de0c5e241487be2",
    "Created": "2023-10-12T21:37:59.8143866Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "centered horizontaly and vertically",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CenteringElement\",\n\"StepDescription\": \"Center the element both horizontally and vertically\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"CenteringElement\",\n\"StepDescription\": \"Center the element both horizontally and vertically\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}",
    "hash": "76aa30f3e89eee8b8df4466ae292089b601875ed764db9b296d4614c4118f672",
    "Created": "2023-10-12T21:39:16.074042Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: centered horizontaly and vertically",
      "assistant": "\r\n### For context ###\r\n(Goal) Form\n- (%step1%) centered horizontaly and vertically\n- (%step2%) form\n- (%step3%) create fieldset for 'User info',\n        inputs: Name, Email, Phone\n- (%step4%) divider\n- (%step5%) create input password\n        min length=8\n        pattern=\"\"\n- (%step6%) submit button, \"Save\"\n        call !SaveUserInfo\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"d-flex justify-content-center align-items-center\" style=\"height: 100vh;\">\n    %step2%\n</div>\n```\n\n```css\nbody {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n```\n\n```javascript\n```"
    },
    "answer": "```html\n<div class=\"d-flex justify-content-center align-items-center\" style=\"height: 100vh;\">\n    %step2%\n</div>\n```\n\n```css\nbody {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n```\n\n```javascript\n```",
    "hash": "17f9ce663b08fb08e3ade78920fa2028040c67d70a58787a7717da0d3cb8039a",
    "Created": "2023-10-12T21:40:47.142108Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "form",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"HandleForm\",\n\"StepDescription\": \"This step involves handling a form, which could include filling out fields, submitting the form, and processing the response.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 1000}}"
    },
    "answer": "{\"StepName\": \"HandleForm\",\n\"StepDescription\": \"This step involves handling a form, which could include filling out fields, submitting the form, and processing the response.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 1000}}",
    "hash": "ea0c588264e742f0fcb4be9e78edc7279d9cfa166aa7d2c898f03ddf8cea8876",
    "Created": "2023-10-12T21:41:38.8460002Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: form",
      "assistant": "\r\n### For context ###\r\n(Goal) Form\n- (%step1%) centered horizontaly and vertically\n- (%step2%) form\n- (%step3%) create fieldset for 'User info',\n        inputs: Name, Email, Phone\n- (%step4%) divider\n- (%step5%) create input password\n        min length=8\n        pattern=\"\"\n- (%step6%) submit button, \"Save\"\n        call !SaveUserInfo\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"d-flex justify-content-center align-items-center vh-100\">\n    <form id=\"userForm\">\n        %step3%\n        %step4%\n        %step5%\n        %step6%\n    </form>\n</div>\n```\n```css\n.vh-100 {\n    height: 100vh;\n}\n```\n```javascript\ndocument.getElementById('userForm').addEventListener('submit', function(event) {\n    event.preventDefault();\n    global.plang.callMethod('SaveUserInfo', {});\n});\n```"
    },
    "answer": "```html\n<div class=\"d-flex justify-content-center align-items-center vh-100\">\n    <form id=\"userForm\">\n        %step3%\n        %step4%\n        %step5%\n        %step6%\n    </form>\n</div>\n```\n```css\n.vh-100 {\n    height: 100vh;\n}\n```\n```javascript\ndocument.getElementById('userForm').addEventListener('submit', function(event) {\n    event.preventDefault();\n    global.plang.callMethod('SaveUserInfo', {});\n});\n```",
    "hash": "f30bbb2de5b86deb27727b5b8d102da91aef979916fcaee7fa3a88c9e0f82253",
    "Created": "2023-10-12T21:41:53.5352806Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "create fieldset for 'User info',\n        inputs: Name, Email, Phone",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CreateUserInfoFieldset\",\n\"StepDescription\": \"Create a fieldset labeled 'User info' with input fields for Name, Email, and Phone.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 500}}"
    },
    "answer": "{\"StepName\": \"CreateUserInfoFieldset\",\n\"StepDescription\": \"Create a fieldset labeled 'User info' with input fields for Name, Email, and Phone.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 500}}",
    "hash": "ba2d959875922b07613c91ed74ca25332b20828bc5460d4a22bd6e3046b5efac",
    "Created": "2023-10-12T21:42:06.4615318Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: create fieldset for 'User info',\n        inputs: Name, Email, Phone",
      "assistant": "\r\n### For context ###\r\n(Goal) Form\n- (%step1%) centered horizontaly and vertically\n- (%step2%) form\n- (%step3%) create fieldset for 'User info',\n        inputs: Name, Email, Phone\n- (%step4%) divider\n- (%step5%) create input password\n        min length=8\n        pattern=\"\"\n- (%step6%) submit button, \"Save\"\n        call !SaveUserInfo\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<fieldset class=\"mb-3\">\n    <legend>User Info</legend>\n    <div class=\"mb-3\">\n        <label for=\"name\" class=\"form-label\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Enter your name\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"email\" class=\"form-label\">Email</label>\n        <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter your email\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"phone\" class=\"form-label\">Phone</label>\n        <input type=\"tel\" class=\"form-control\" id=\"phone\" placeholder=\"Enter your phone number\">\n    </div>\n</fieldset>\n```\n```css\n```\n```javascript\n```"
    },
    "answer": "```html\n<fieldset class=\"mb-3\">\n    <legend>User Info</legend>\n    <div class=\"mb-3\">\n        <label for=\"name\" class=\"form-label\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Enter your name\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"email\" class=\"form-label\">Email</label>\n        <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter your email\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"phone\" class=\"form-label\">Phone</label>\n        <input type=\"tel\" class=\"form-control\" id=\"phone\" placeholder=\"Enter your phone number\">\n    </div>\n</fieldset>\n```\n```css\n```\n```javascript\n```",
    "hash": "fbc616fb4d0d28e53825e93738726b977d4769a99209e72d3374918c0027fa87",
    "Created": "2023-10-12T21:42:22.0893264Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "divider",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"N/A\", \"StepDescription\": \"N/A\", \"Modules\": [\"N/A\"], \"WaitForExecution\": true, \"ExternalServiceHandler\": {\"GoalName\": \"N/A\", \"Uri\": \"N/A\", \"StartCssSelector\": \"N/A\", \"EndCssSelector\": \"N/A\"}, \"CachingHandler\": {\"TimeInMilliseconds\": 0, \"CacheKey\": \"N/A\", \"CachingType\": 0}, \"ErrorHandler\": {\"IgnoreErrors\": true, \"Except\": [\"N/A\"]}, \"RetryHandler\": {\"RetryCount\": 0, \"RetryDelayInMilliseconds\": 0}}"
    },
    "answer": "{\"StepName\": \"N/A\", \"StepDescription\": \"N/A\", \"Modules\": [\"N/A\"], \"WaitForExecution\": true, \"ExternalServiceHandler\": {\"GoalName\": \"N/A\", \"Uri\": \"N/A\", \"StartCssSelector\": \"N/A\", \"EndCssSelector\": \"N/A\"}, \"CachingHandler\": {\"TimeInMilliseconds\": 0, \"CacheKey\": \"N/A\", \"CachingType\": 0}, \"ErrorHandler\": {\"IgnoreErrors\": true, \"Except\": [\"N/A\"]}, \"RetryHandler\": {\"RetryCount\": 0, \"RetryDelayInMilliseconds\": 0}}",
    "hash": "587d19a1201dfccd6ff69345e774aae4fe8dcf1a8c3b842503bec32781a034e7",
    "Created": "2023-10-12T21:42:34.580554Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "create input password\n        min length=8\n        pattern=\"\"",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CreatePasswordInput\",\n\"StepDescription\": \"Create an input field for password with a minimum length of 8 and a specific pattern.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"CreatePasswordInput\",\n\"StepDescription\": \"Create an input field for password with a minimum length of 8 and a specific pattern.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}",
    "hash": "a36a408ffeafa24c988860fb2efc4f1006b718aec7610d0d0b970fea9fec02d4",
    "Created": "2023-10-12T21:42:38.4878082Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: create input password\n        min length=8\n        pattern=\"\"",
      "assistant": "\r\n### For context ###\r\n(Goal) Form\n- (%step1%) centered horizontaly and vertically\n- (%step2%) form\n- (%step3%) create fieldset for 'User info',\n        inputs: Name, Email, Phone\n- (%step4%) divider\n- (%step5%) create input password\n        min length=8\n        pattern=\"\"\n- (%step6%) submit button, \"Save\"\n        call !SaveUserInfo\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<input type=\"password\" id=\"password\" name=\"password\" minlength=\"8\" pattern=\"\" required>\n```\n```javascript\n```\n```css\n```"
    },
    "answer": "```html\n<input type=\"password\" id=\"password\" name=\"password\" minlength=\"8\" pattern=\"\" required>\n```\n```javascript\n```\n```css\n```",
    "hash": "533570ad74a76b95903a65182bf5a1fc91489ff34077a3e16bae3a8be9054eb6",
    "Created": "2023-10-12T21:42:41.1922261Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "submit button, \"Save\"\n        call !SaveUserInfo",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SaveUserInfo\",\n\"StepDescription\": \"This step involves clicking the 'Save' button to submit the user information.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 1000}}"
    },
    "answer": "{\"StepName\": \"SaveUserInfo\",\n\"StepDescription\": \"This step involves clicking the 'Save' button to submit the user information.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 1000}}",
    "hash": "39f8baa3829b8a9470c9b9578e8b0d24ad0041d3241557a0a52f618c10d7a648",
    "Created": "2023-10-12T21:42:47.1804996Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: submit button, \"Save\"\n        call !SaveUserInfo",
      "assistant": "\r\n### For context ###\r\n(Goal) Form\n- (%step1%) centered horizontaly and vertically\n- (%step2%) form\n- (%step3%) create fieldset for 'User info',\n        inputs: Name, Email, Phone\n- (%step4%) divider\n- (%step5%) create input password\n        min length=8\n        pattern=\"\"\n- (%step6%) submit button, \"Save\"\n        call !SaveUserInfo\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<button type=\"submit\" class=\"btn btn-primary\" id=\"saveButton\">Save</button>\n```\n\n```javascript\ndocument.getElementById('saveButton').addEventListener('click', function(event) {\n    event.preventDefault();\n    global.plang.callMethod('SaveUserInfo', {});\n});\n```\n\n```css\n```"
    },
    "answer": "```html\n<button type=\"submit\" class=\"btn btn-primary\" id=\"saveButton\">Save</button>\n```\n\n```javascript\ndocument.getElementById('saveButton').addEventListener('click', function(event) {\n    event.preventDefault();\n    global.plang.callMethod('SaveUserInfo', {});\n});\n```\n\n```css\n```",
    "hash": "4140d35aad06cb8795934e3157e9af73eaed1543568b98ce629dfaa82ee76d62",
    "Created": "2023-10-12T21:42:52.9941152Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click call !Actions",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SearchBoxInput\",\n\"StepDescription\": \"Input the name and id 'search' into the search box. The placeholder should be 'Type in stuff2'. The search button, which is on the same line as the input, has a search icon. When the button is clicked, the 'Actions' function is called.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true,\n\"ExternalServiceHandler\": {\"GoalName\": \"Actions\",\n\"Uri\": \"\",\n\"StartCssSelector\": \"\",\n\"EndCssSelector\": \"\"},\n\"CachingHandler\": {\"TimeInMilliseconds\": 0,\n\"CacheKey\": \"\",\n\"CachingType\": 0},\n\"ErrorHandler\": {\"IgnoreErrors\": false,\n\"Except\": []},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}"
    },
    "answer": "{\"StepName\": \"SearchBoxInput\",\n\"StepDescription\": \"Input the name and id 'search' into the search box. The placeholder should be 'Type in stuff2'. The search button, which is on the same line as the input, has a search icon. When the button is clicked, the 'Actions' function is called.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true,\n\"ExternalServiceHandler\": {\"GoalName\": \"Actions\",\n\"Uri\": \"\",\n\"StartCssSelector\": \"\",\n\"EndCssSelector\": \"\"},\n\"CachingHandler\": {\"TimeInMilliseconds\": 0,\n\"CacheKey\": \"\",\n\"CachingType\": 0},\n\"ErrorHandler\": {\"IgnoreErrors\": false,\n\"Except\": []},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}",
    "hash": "d3a5e2eac4d19c0431b9783c0907261d7a10713c7dc86a2da7f2608d8397268c",
    "Created": "2023-10-12T21:43:05.7427215Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click call !Actions",
      "assistant": "\r\n### For context ###\r\n(Goal) SearchBox\n- (%step1%) search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click call !Actions\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"input-group\">\n  <input type=\"text\" class=\"form-control\" placeholder=\"Type in stuff2\" id=\"search\" name=\"search\">\n  <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">\n    <i class=\"bi bi-search\"></i>\n  </button>\n</div>\n```\n\n```javascript\ndocument.getElementById('button-addon2').addEventListener('click', function() {\n  var searchValue = document.getElementById('search').value;\n  global.plang.callMethod('Actions', {search: searchValue});\n});\n```\n\n```css\n/* No custom CSS needed for this task */\n```"
    },
    "answer": "```html\n<div class=\"input-group\">\n  <input type=\"text\" class=\"form-control\" placeholder=\"Type in stuff2\" id=\"search\" name=\"search\">\n  <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">\n    <i class=\"bi bi-search\"></i>\n  </button>\n</div>\n```\n\n```javascript\ndocument.getElementById('button-addon2').addEventListener('click', function() {\n  var searchValue = document.getElementById('search').value;\n  global.plang.callMethod('Actions', {search: searchValue});\n});\n```\n\n```css\n/* No custom CSS needed for this task */\n```",
    "hash": "6b211283f404847c5504eb55b6c4ac1df1048859094fa1ee25315b9f6693242f",
    "Created": "2023-10-12T22:26:19.830368Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "write out %result%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"WriteOutput\",\n\"StepDescription\": \"Write the value of the variable 'result' to the output\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"WriteOutput\",\n\"StepDescription\": \"Write the value of the variable 'result' to the output\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}",
    "hash": "f8e21d5b78606adc714310299d7ba918ca80d9cb1e84715269c504bc35c5fab1",
    "Created": "2023-10-12T21:43:21.2813271Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: write out %result%",
      "assistant": "\r\n### For context ###\r\n(Goal) ShowResult\n- (%step1%) write out %result%\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<p id=\"result\"></p>\n```\n\n```javascript\ndocument.getElementById('result').innerText = global.plang.get('result');\n```\n\n```css\n#result {\n    color: rgb(0, 0, 0);\n    font-size: 16px;\n}\n```"
    },
    "answer": "```html\n<p id=\"result\"></p>\n```\n\n```javascript\ndocument.getElementById('result').innerText = global.plang.get('result');\n```\n\n```css\n#result {\n    color: rgb(0, 0, 0);\n    font-size: 16px;\n}\n```",
    "hash": "2b1ca60985cb7118123d74fbc5cebf457086ce00b54153288a12f3f1843e4ef5",
    "Created": "2023-10-12T21:43:26.7916068Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "header: First name, Last name, Email, Phone, Actions",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"DefineHeader\",\n\"StepDescription\": \"Define a header with the following fields: First name, Last name, Email, Phone, Actions\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}"
    },
    "answer": "{\"StepName\": \"DefineHeader\",\n\"StepDescription\": \"Define a header with the following fields: First name, Last name, Email, Phone, Actions\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}",
    "hash": "4807ea313dfd369c1b06c7a43652d7e1379359173a6aa6d318a96226fb865a3e",
    "Created": "2023-10-12T21:43:32.6124486Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: header: First name, Last name, Email, Phone, Actions",
      "assistant": "\r\n### For context ###\r\n(Goal) Table\n- (%step1%) header: First name, Last name, Email, Phone, Actions\n- (%step2%) body: %users.FirstName%, %users.LastName%, %users.Email%, %users.Phone%\n    edit, call !Edit %users.id%\n    delete call !Delete %users.id%\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<thead>\n    <tr>\n        <th>First name</th>\n        <th>Last name</th>\n        <th>Email</th>\n        <th>Phone</th>\n        <th>Actions</th>\n    </tr>\n</thead>\n```"
    },
    "answer": "```html\n<thead>\n    <tr>\n        <th>First name</th>\n        <th>Last name</th>\n        <th>Email</th>\n        <th>Phone</th>\n        <th>Actions</th>\n    </tr>\n</thead>\n```",
    "hash": "14ef2d26bbc4eae8963792e83235394b7d2144d829983b56c6fabb61cb674b32",
    "Created": "2023-10-12T21:43:37.705236Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "body: %users.FirstName%, %users.LastName%, %users.Email%, %users.Phone%\n    edit, call !Edit %users.id%\n    delete call !Delete %users.id%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"EditAndDeleteUser\",\n\"StepDescription\": \"This step involves editing and deleting a user. The user's first name, last name, email, and phone number are defined in the body. The 'Edit' function is called with the user's ID as a parameter, and the 'Delete' function is also called with the user's ID as a parameter.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3,\n\"RetryDelayInMilliseconds\": 2000}}"
    },
    "answer": "{\"StepName\": \"EditAndDeleteUser\",\n\"StepDescription\": \"This step involves editing and deleting a user. The user's first name, last name, email, and phone number are defined in the body. The 'Edit' function is called with the user's ID as a parameter, and the 'Delete' function is also called with the user's ID as a parameter.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3,\n\"RetryDelayInMilliseconds\": 2000}}",
    "hash": "e1f098fb2b70ddc923a9cc24902311c7207131ed28d901daedc51614e0e5cc7b",
    "Created": "2023-10-12T21:43:45.5762179Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: body: %users.FirstName%, %users.LastName%, %users.Email%, %users.Phone%\n    edit, call !Edit %users.id%\n    delete call !Delete %users.id%",
      "assistant": "\r\n### For context ###\r\n(Goal) Table\n- (%step1%) header: First name, Last name, Email, Phone, Actions\n- (%step2%) body: %users.FirstName%, %users.LastName%, %users.Email%, %users.Phone%\n    edit, call !Edit %users.id%\n    delete call !Delete %users.id%\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<tbody>\n    @foreach (var user in users)\n    {\n        <tr>\n            <td>@user.FirstName</td>\n            <td>@user.LastName</td>\n            <td>@user.Email</td>\n            <td>@user.Phone</td>\n            <td>\n                <button class=\"btn btn-primary\" onclick=\"global.plang.callMethod('Edit', {id: @user.id})\">Edit</button>\n                <button class=\"btn btn-danger\" onclick=\"global.plang.callMethod('Delete', {id: @user.id})\">Delete</button>\n            </td>\n        </tr>\n    }\n</tbody>\n```\n```css\n```\n```javascript\n```"
    },
    "answer": "```html\n<tbody>\n    @foreach (var user in users)\n    {\n        <tr>\n            <td>@user.FirstName</td>\n            <td>@user.LastName</td>\n            <td>@user.Email</td>\n            <td>@user.Phone</td>\n            <td>\n                <button class=\"btn btn-primary\" onclick=\"global.plang.callMethod('Edit', {id: @user.id})\">Edit</button>\n                <button class=\"btn btn-danger\" onclick=\"global.plang.callMethod('Delete', {id: @user.id})\">Delete</button>\n            </td>\n        </tr>\n    }\n</tbody>\n```\n```css\n```\n```javascript\n```",
    "hash": "f3d7fd0eb704065e4df39c2c47431a3c94d2bcf237cc73a0878ebb9162170795",
    "Created": "2023-10-12T21:43:57.4012417Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "divider",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"Divider\",\n\"StepDescription\": \"This step does not require any specific action or module as it seems to be a placeholder or a divider for the steps.\",\n\"Modules\": [\"N/A\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"Divider\",\n\"StepDescription\": \"This step does not require any specific action or module as it seems to be a placeholder or a divider for the steps.\",\n\"Modules\": [\"N/A\"],\n\"WaitForExecution\": true}",
    "hash": "3b8b26bd9f7bc5ed5fa48504d1528164778f88c6dd96ee86559084cc39fdb2d2",
    "Created": "2023-10-12T22:03:44.2558815Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "divider",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\", \"description\": \"Takes any user command and tries to convert it to html\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"Divider\",\n\"StepDescription\": \"This step does not require any specific action or module as it seems to be a placeholder or a divider for separating different sections of the code.\",\n\"Modules\": [\"N/A\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"Divider\",\n\"StepDescription\": \"This step does not require any specific action or module as it seems to be a placeholder or a divider for separating different sections of the code.\",\n\"Modules\": [\"N/A\"],\n\"WaitForExecution\": true}",
    "hash": "1d6469f83424c0d8bea7f1d3d06fa5f14a6a2eb75207ad3d75be6cce9462b0fb",
    "Created": "2023-10-12T22:08:01.3555532Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "html divider",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\", \"description\": \"Takes any user command and tries to convert it to html\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"HtmlDivider\",\n\"StepDescription\": \"Create an HTML divider\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"HtmlDivider\",\n\"StepDescription\": \"Create an HTML divider\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}",
    "hash": "c7affbf94666c8bfd9b21967111923c02f49437ee98689ca3d0428f4814edd2a",
    "Created": "2023-10-12T22:11:16.7891677Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: html divider",
      "assistant": "\r\n### For context ###\r\n(Goal) Form\n- (%step1%) centered horizontaly and vertically\n- (%step2%) form\n- (%step3%) create fieldset for 'User info',\n        inputs: Name, Email, Phone\n- (%step4%) html divider\n- (%step5%) create input password\n        min length=8\n        pattern=\"\"\n- (%step6%) submit button, \"Save\"\n        call !SaveUserInfo\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<hr>\n```"
    },
    "answer": "```html\n<hr>\n```",
    "hash": "8551ff007a36ff05ab527567e55e7ad8d905d5d2d7c8dc909b3a5cc3e4090a66",
    "Created": "2023-10-12T22:26:10.1503551Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click call !Actions",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\", \"description\": \"Takes any user command and tries to convert it to html\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SearchBoxCreation\",\n\"StepDescription\": \"Create a search box with the name and id 'search' and a placeholder text 'Type in stuff2'. The search box should have a button with a search icon on the same line as the input. When the button is clicked, it should call the 'Actions' function.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"SearchBoxCreation\",\n\"StepDescription\": \"Create a search box with the name and id 'search' and a placeholder text 'Type in stuff2'. The search box should have a button with a search icon on the same line as the input. When the button is clicked, it should call the 'Actions' function.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}",
    "hash": "fd61acc968738f117ec9cac9fe10e33c80ef2995946a49f069664726a5067533",
    "Created": "2023-10-12T22:11:29.0279672Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: html divider",
      "assistant": "## functions available defined in csharp ##\r\nString RenderHtml(String html) \n\r\n## functions available ends ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\r\n  \"Type\": \"String\",\r\n  \"Name\": \"html\",\r\n  \"Value\": \"<hr>\",\r\n  \"FunctionName\": \"RenderHtml\",\r\n  \"ReturnValue\": null\r\n}"
    },
    "answer": "{\r\n  \"Type\": \"String\",\r\n  \"Name\": \"html\",\r\n  \"Value\": \"<hr>\",\r\n  \"FunctionName\": \"RenderHtml\",\r\n  \"ReturnValue\": null\r\n}",
    "hash": "091924607e5c4a6080176f18a67214c29ac12f016bb96e2ce5ff5f7559cc33ae",
    "Created": "2023-10-12T22:14:11.3870657Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click call !Form",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\", \"description\": \"Takes any user command and tries to convert it to html\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SearchBoxCreation\",\n\"StepDescription\": \"Create a search box with the name and id 'search' and a placeholder text 'Type in stuff2'. The search box should have a button with a search icon on the same line. When the button is clicked, the function 'Form' should be called.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"SearchBoxCreation\",\n\"StepDescription\": \"Create a search box with the name and id 'search' and a placeholder text 'Type in stuff2'. The search box should have a button with a search icon on the same line. When the button is clicked, the function 'Form' should be called.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}",
    "hash": "0cb6a63c110a9e064f255a36bcc7ec4a1d241e6459f3fad67c3f01f7c547dbd4",
    "Created": "2023-10-12T22:33:24.6352996Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click call !Form",
      "assistant": "\r\n### For context ###\r\n(Goal) SearchBox\n- (%step1%) search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click call !Form\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"input-group\">\n  <input type=\"text\" class=\"form-control\" placeholder=\"Type in stuff2\" id=\"search\" name=\"search\">\n  <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">\n    <i class=\"bi bi-search\"></i>\n  </button>\n</div>\n```\n```javascript\ndocument.getElementById('button-addon2').addEventListener('click', function() {\n  var searchValue = document.getElementById('search').value;\n  global.plang.callMethod('Form', {search: searchValue});\n});\n```\n```css\n```"
    },
    "answer": "```html\n<div class=\"input-group\">\n  <input type=\"text\" class=\"form-control\" placeholder=\"Type in stuff2\" id=\"search\" name=\"search\">\n  <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">\n    <i class=\"bi bi-search\"></i>\n  </button>\n</div>\n```\n```javascript\ndocument.getElementById('button-addon2').addEventListener('click', function() {\n  var searchValue = document.getElementById('search').value;\n  global.plang.callMethod('Form', {search: searchValue});\n});\n```\n```css\n```",
    "hash": "f0403f76ea401792c2e4bf522b793de8f935390f3148f5778133844b70e1733d",
    "Created": "2023-10-12T22:33:33.4434524Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click  call !Form",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\", \"description\": \"Takes any user command and tries to convert it to html\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SearchBoxCreation\",\n\"StepDescription\": \"Create a search box with the name and id 'search' and a placeholder text 'Type in stuff2'. The search box should have a button with a search icon on the same line as the input. When the button is clicked, the function 'Form' should be called.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"SearchBoxCreation\",\n\"StepDescription\": \"Create a search box with the name and id 'search' and a placeholder text 'Type in stuff2'. The search box should have a button with a search icon on the same line as the input. When the button is clicked, the function 'Form' should be called.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}",
    "hash": "53ad8c48d5b2009d1e81bced7c073cfea82128c438586532fd27fe6e4955032f",
    "Created": "2023-10-12T22:34:06.6782338Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click  call !Form",
      "assistant": "\r\n### For context ###\r\n(Goal) SearchBox\n- (%step1%) search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click  call !Form\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"input-group\">\n  <input type=\"text\" class=\"form-control\" placeholder=\"Type in stuff2\" id=\"search\" name=\"search\">\n  <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">\n    <i class=\"bi bi-search\"></i>\n  </button>\n</div>\n```\n\n```javascript\ndocument.getElementById('button-addon2').addEventListener('click', function() {\n  var searchValue = document.getElementById('search').value;\n  global.plang.callMethod('Form', {search: searchValue});\n});\n```\n\n```css\n/* No custom CSS needed for this task */\n```"
    },
    "answer": "```html\n<div class=\"input-group\">\n  <input type=\"text\" class=\"form-control\" placeholder=\"Type in stuff2\" id=\"search\" name=\"search\">\n  <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">\n    <i class=\"bi bi-search\"></i>\n  </button>\n</div>\n```\n\n```javascript\ndocument.getElementById('button-addon2').addEventListener('click', function() {\n  var searchValue = document.getElementById('search').value;\n  global.plang.callMethod('Form', {search: searchValue});\n});\n```\n\n```css\n/* No custom CSS needed for this task */\n```",
    "hash": "cdb3a94da0eb5deead40aab84342641b2e39fbe4534a4e38e854f6412a344051",
    "Created": "2023-10-12T22:36:33.2610739Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "center content, horizontaly and vertically",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\", \"description\": \"Takes any user command and tries to convert it to html\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CenterContent\",\n\"StepDescription\": \"Center the content both horizontally and vertically\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"CenterContent\",\n\"StepDescription\": \"Center the content both horizontally and vertically\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}",
    "hash": "207a1a6d0403c079e6c8f6515d9112b5f720a3930c3e19ecf0889a6687f9b448",
    "Created": "2023-10-12T22:43:31.3751377Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: center content, horizontaly and vertically",
      "assistant": "\r\n### For context ###\r\n(Goal) SearchBox\n- (%step1%) center content, horizontaly and vertically\n- (%step2%) set logo in center, https://plang.is/logo.png\n- (%step3%) search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click  call !Form\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"d-flex justify-content-center align-items-center\" style=\"height: 100vh;\">\n    %step2%\n</div>\n```\n\n```css\nbody, html {\n    height: 100%;\n}\n```\n\n```javascript\n```"
    },
    "answer": "```html\n<div class=\"d-flex justify-content-center align-items-center\" style=\"height: 100vh;\">\n    %step2%\n</div>\n```\n\n```css\nbody, html {\n    height: 100%;\n}\n```\n\n```javascript\n```",
    "hash": "714135e0dd3ac3fcef8e1de19d2c023861fdd39c2ef6d5240d6f070b0b8f7d83",
    "Created": "2023-10-12T22:43:35.6203857Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "set logo in center, https://plang.is/logo.png",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\", \"description\": \"Takes any user command and tries to convert it to html\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SetLogoInCenter\",\n\"StepDescription\": \"This step involves setting a logo, which is located at 'https://plang.is/logo.png', in the center of the page.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"SetLogoInCenter\",\n\"StepDescription\": \"This step involves setting a logo, which is located at 'https://plang.is/logo.png', in the center of the page.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}",
    "hash": "770b519b2b69c25d99ae8bd3915ffcb59546072c0b83e71af03587b1d1df5b78",
    "Created": "2023-10-12T22:43:40.230636Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: set logo in center, https://plang.is/logo.png",
      "assistant": "\r\n### For context ###\r\n(Goal) SearchBox\n- (%step1%) center content, horizontaly and vertically\n- (%step2%) set logo in center, https://plang.is/logo.png\n- (%step3%) search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click  call !Form\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"d-flex justify-content-center\">\n    <img src=\"https://plang.is/logo.png\" alt=\"Logo\">\n</div>\n```\n\n```css\nimg {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    width: 50%;\n}\n```\n\n```javascript\n```"
    },
    "answer": "```html\n<div class=\"d-flex justify-content-center\">\n    <img src=\"https://plang.is/logo.png\" alt=\"Logo\">\n</div>\n```\n\n```css\nimg {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    width: 50%;\n}\n```\n\n```javascript\n```",
    "hash": "5ded41c447fbb385ba40eb3f90d216f56cca9bc377e13dcbaa41b4e1eeabe470",
    "Created": "2023-10-12T22:43:44.7844002Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click  call !Form",
      "assistant": "\r\n### For context ###\r\n(Goal) SearchBox\n- (%step1%) center content, horizontaly and vertically\n- (%step2%) set logo in center, https://plang.is/logo.png\n- (%step3%) search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click  call !Form\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"input-group\">\n  <input type=\"text\" class=\"form-control\" placeholder=\"Type in stuff2\" id=\"search\" name=\"search\">\n  <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">\n    <i class=\"bi bi-search\"></i>\n  </button>\n</div>\n```\n\n```javascript\ndocument.getElementById('button-addon2').addEventListener('click', function() {\n  var searchValue = document.getElementById('search').value;\n  global.plang.callMethod('Form', {search: searchValue});\n});\n```\n\n```css\n/* No custom CSS needed for this task */\n```"
    },
    "answer": "```html\n<div class=\"input-group\">\n  <input type=\"text\" class=\"form-control\" placeholder=\"Type in stuff2\" id=\"search\" name=\"search\">\n  <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">\n    <i class=\"bi bi-search\"></i>\n  </button>\n</div>\n```\n\n```javascript\ndocument.getElementById('button-addon2').addEventListener('click', function() {\n  var searchValue = document.getElementById('search').value;\n  global.plang.callMethod('Form', {search: searchValue});\n});\n```\n\n```css\n/* No custom CSS needed for this task */\n```",
    "hash": "5941fb2a68bed64ccb8396ff1564979fcf927169d43ed4215580ca638118ac8a",
    "Created": "2023-10-12T22:43:54.8099562Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "center content, horizontaly and vertically, give good padding",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\", \"description\": \"Takes any user command and tries to convert it to html\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CenterContent\",\n\"StepDescription\": \"Center the content both horizontally and vertically and provide appropriate padding.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"CenterContent\",\n\"StepDescription\": \"Center the content both horizontally and vertically and provide appropriate padding.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}",
    "hash": "451b05fde8f04cef74017cb8e2c532306293085fb56c0e4f7b8cf01b25c538cc",
    "Created": "2023-10-12T22:55:57.8471198Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: center content, horizontaly and vertically, give good padding",
      "assistant": "\r\n### For context ###\r\n(Goal) SearchBox\n- (%step1%) center content, horizontaly and vertically, give good padding\n- (%step2%) set logo in center, https://plang.is/logo.png, max 150px height\n- (%step3%) search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click  call !Form\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"d-flex justify-content-center align-items-center\" style=\"height: 100vh; padding: 20px;\">\n    %step2%\n    %step3%\n</div>\n```\n\n```css\nbody {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n```\n\n```javascript\n```"
    },
    "answer": "```html\n<div class=\"d-flex justify-content-center align-items-center\" style=\"height: 100vh; padding: 20px;\">\n    %step2%\n    %step3%\n</div>\n```\n\n```css\nbody {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n```\n\n```javascript\n```",
    "hash": "f4400a344855f67b47bf9d094d98a338f68832e4a10a75c03d633c0e6dc807db",
    "Created": "2023-10-12T22:56:03.2679056Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "set logo in center, https://plang.is/logo.png, max 150px height",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n{ \"module\": \"PLang.Modules.HtmlModule\", \"description\": \"Takes any user command and tries to convert it to html\" }\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SetLogoCenter\",\n\"StepDescription\": \"This step involves setting a logo, which is located at 'https://plang.is/logo.png', at the center of the page. The maximum height of the logo should be 150px.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"SetLogoCenter\",\n\"StepDescription\": \"This step involves setting a logo, which is located at 'https://plang.is/logo.png', at the center of the page. The maximum height of the logo should be 150px.\",\n\"Modules\": [\"PLang.Modules.HtmlModule\"],\n\"WaitForExecution\": true}",
    "hash": "d04e82a96f7918719105d0c9845846b3552c907f6682fc0eb8266d9495f0e861",
    "Created": "2023-10-12T22:56:09.0295875Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Create the html, javascript and css needed from the user command using Bootstrap 5.1. \r\n\r\nGoal has series of steps where this user command is, it is only to provide context. Steps start with dash(-), steps can have sub steps\r\n\r\nvariables are defined with starting and ending %. They will be provided to the javascript as global.plang.get('%variableName%').\r\n\r\nGoals are prefixed with !, they are call for calling a method, e.g. Call !NewUser. They should call the funcion global.plang.callMethod(name:string, parameters:object)\r\n\r\nif the current step has sister or sub steps, then put %step1%, %stepN% instead of the html that will be provided by sister or sub steps later. Do not generate any html for sub steps.  \r\n\r\nHTML comments and <!-- --> are NOT allowed\r\n\r\nJavascript should be vanilla Javascript. popper.min.js and bootstrap.min.js are available. \r\n\r\nUse @Razor templating engine to go through lists, displaying object or property, see example later\r\n\r\nCss should be using up to date css standards. colors should be in rgb.\r\n\r\nIf a feedback is needed to the user, provide the solution also for that, if it needs javascript, provide javascript, if it needs custom css, provide css\r\n\r\nYou must return ```html, ```css, ```javascript, \r\nNo extra text to explain, be concise\r\n\n\nOnly write the raw html and javascript no summary, no extra text to explain, be concise",
      "question": "command: set logo in center, https://plang.is/logo.png, max 150px height",
      "assistant": "\r\n### For context ###\r\n(Goal) SearchBox\n- (%step1%) center content, horizontaly and vertically, give good padding\n- (%step2%) set logo in center, https://plang.is/logo.png, max 150px height\n- (%step3%) search box,\n    input name and id is \"search\", placeholder \"Type in stuff2\"\n    button in same line as input, button has search icon\n    when button is click  call !Form\r\n### For context ###\r\n### Razor ###\r\nvariable in plural are lists, single is an object. use the variable name as the name for the list and when looping through the list. \r\nExample for a tr in a table.\r\n\r\n@foreach (var task in tasks)\r\n{\r\n    <tr>\r\n        <td>@task .Description</td>\r\n        <td>Due date: @task.DueDate</td>\r\n    </tr>\r\n}\r\n\r\n<h3>@book.Title</h3>\r\n\r\n@{\r\n    bool isUserLoggedIn = true;\r\n}\r\n\r\n@if (isUserLoggedIn)\r\n{\r\n    <p>Welcome back, @user.Username!</p>\r\n}\r\nelse\r\n{\r\n    <p>Please log in.</p>\r\n}\r\n### Razor ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "```html\n<div class=\"d-flex justify-content-center\">\n    <img src=\"https://plang.is/logo.png\" alt=\"Logo\" style=\"max-height:150px;\">\n</div>\n```\n\n```css\n```\n\n```javascript\n```"
    },
    "answer": "```html\n<div class=\"d-flex justify-content-center\">\n    <img src=\"https://plang.is/logo.png\" alt=\"Logo\" style=\"max-height:150px;\">\n</div>\n```\n\n```css\n```\n\n```javascript\n```",
    "hash": "727cffe0120d4bc40450f675391c629b21de4dc41eaaf2139ee2c4de24522aa7",
    "Created": "2023-10-12T22:56:12.9007084Z"
  }
]
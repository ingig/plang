[
  {
    "question": {
      "type": "ModuleBuilder",
      "system": "Parse the content provided by the user to determine modules in a system\r\n\r\n- (dash) defines the module\r\n/ (slash) defines a comment\r\n\r\nYou MUST response in JSON, scheme\r\n[{name:string, value:string, comment:string}]\r\n\r\nname: name of module\r\ntype: native|.net|python|javascript\r\ncomment: create description of the module\r\nBe concise ",
      "question": "\r\nNative modules:\r\n- WindowAppModule\n- WebserverModule - Start webserver, write to Body, Header, Cookie\n- TerminalModule - Terminal/Console access to run external applications\n- SeleniumModule - Run a browser instance, browse a website, input values and extract content\n- ScheduleModule - Sleep and time delay. Cron scheduler\n- PythonModule - Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\n- OutputModule - Outputs and writes out, to the UI a text or a variable\n- MessageModule - Send and recieve private messages using Nostr protocol\n- LoopModule - While, for, foreach, loops through a list\n- LocalOrGlobalVariableModule - Set & Get local and static variables. Bind events to variable.\n- LlmModule - Ask LLM a question and recieve and answer\n- ListDictionaryModule - Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\n- HttpModule - Make Http request\n- HtmlModule\n- FileModule - Handle file system access\n- EnvironmentSettingsModule - Various settings for the program, such as culture, date & number formatting\n- DbModule - Database access, select, insert, update, delete and execute raw sql. Handles transactions\n- CryptographicModule - Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token\n- ConditionalModule - Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\n- CodeModule - Generate c# code from user description. Only use if no other module is found\n- CallGoalModule - Call another Goal, when ! is prefixed, e.g. !RenameFile\n- BlockchainModule - Use blockchain, create wallet, account info, transfer money, sign message, verify signature\n\r\n",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "[\n  {\"name\": \"WindowAppModule\", \"type\": \"native\", \"comment\": \"Native module for managing window applications\"},\n  {\"name\": \"WebserverModule\", \"type\": \"native\", \"comment\": \"Start webserver, write to Body, Header, Cookie\"},\n  {\"name\": \"TerminalModule\", \"type\": \"native\", \"comment\": \"Terminal/Console access to run external applications\"},\n  {\"name\": \"SeleniumModule\", \"type\": \"native\", \"comment\": \"Run a browser instance, browse a website, input values and extract content\"},\n  {\"name\": \"ScheduleModule\", \"type\": \"native\", \"comment\": \"Sleep and time delay. Cron scheduler\"},\n  {\"name\": \"PythonModule\", \"type\": \"python\", \"comment\": \"Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\"},\n  {\"name\": \"OutputModule\", \"type\": \"native\", \"comment\": \"Outputs and writes out, to the UI a text or a variable\"},\n  {\"name\": \"MessageModule\", \"type\": \"native\", \"comment\": \"Send and recieve private messages using Nostr protocol\"},\n  {\"name\": \"LoopModule\", \"type\": \"native\", \"comment\": \"While, for, foreach, loops through a list\"},\n  {\"name\": \"LocalOrGlobalVariableModule\", \"type\": \"native\", \"comment\": \"Set & Get local and static variables. Bind events to variable.\"},\n  {\"name\": \"LlmModule\", \"type\": \"native\", \"comment\": \"Ask LLM a question and recieve and answer\"},\n  {\"name\": \"ListDictionaryModule\", \"type\": \"native\", \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"},\n  {\"name\": \"HttpModule\", \"type\": \"native\", \"comment\": \"Make Http request\"},\n  {\"name\": \"HtmlModule\", \"type\": \"native\", \"comment\": \"Module for handling HTML content\"},\n  {\"name\": \"FileModule\", \"type\": \"native\", \"comment\": \"Handle file system access\"},\n  {\"name\": \"EnvironmentSettingsModule\", \"type\": \"native\", \"comment\": \"Various settings for the program, such as culture, date & number formatting\"},\n  {\"name\": \"DbModule\", \"type\": \"native\", \"comment\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions\"},\n  {\"name\": \"CryptographicModule\", \"type\": \"native\", \"comment\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token\"},\n  {\"name\": \"ConditionalModule\", \"type\": \"native\", \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\"},\n  {\"name\": \"CodeModule\", \"type\": \".net\", \"comment\": \"Generate c# code from user description. Only use if no other module is found\"},\n  {\"name\": \"CallGoalModule\", \"type\": \"native\", \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"},\n  {\"name\": \"BlockchainModule\", \"type\": \"native\", \"comment\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature\"}\n]"
    },
    "answer": "[\n  {\"name\": \"WindowAppModule\", \"type\": \"native\", \"comment\": \"Native module for managing window applications\"},\n  {\"name\": \"WebserverModule\", \"type\": \"native\", \"comment\": \"Start webserver, write to Body, Header, Cookie\"},\n  {\"name\": \"TerminalModule\", \"type\": \"native\", \"comment\": \"Terminal/Console access to run external applications\"},\n  {\"name\": \"SeleniumModule\", \"type\": \"native\", \"comment\": \"Run a browser instance, browse a website, input values and extract content\"},\n  {\"name\": \"ScheduleModule\", \"type\": \"native\", \"comment\": \"Sleep and time delay. Cron scheduler\"},\n  {\"name\": \"PythonModule\", \"type\": \"python\", \"comment\": \"Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\"},\n  {\"name\": \"OutputModule\", \"type\": \"native\", \"comment\": \"Outputs and writes out, to the UI a text or a variable\"},\n  {\"name\": \"MessageModule\", \"type\": \"native\", \"comment\": \"Send and recieve private messages using Nostr protocol\"},\n  {\"name\": \"LoopModule\", \"type\": \"native\", \"comment\": \"While, for, foreach, loops through a list\"},\n  {\"name\": \"LocalOrGlobalVariableModule\", \"type\": \"native\", \"comment\": \"Set & Get local and static variables. Bind events to variable.\"},\n  {\"name\": \"LlmModule\", \"type\": \"native\", \"comment\": \"Ask LLM a question and recieve and answer\"},\n  {\"name\": \"ListDictionaryModule\", \"type\": \"native\", \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"},\n  {\"name\": \"HttpModule\", \"type\": \"native\", \"comment\": \"Make Http request\"},\n  {\"name\": \"HtmlModule\", \"type\": \"native\", \"comment\": \"Module for handling HTML content\"},\n  {\"name\": \"FileModule\", \"type\": \"native\", \"comment\": \"Handle file system access\"},\n  {\"name\": \"EnvironmentSettingsModule\", \"type\": \"native\", \"comment\": \"Various settings for the program, such as culture, date & number formatting\"},\n  {\"name\": \"DbModule\", \"type\": \"native\", \"comment\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions\"},\n  {\"name\": \"CryptographicModule\", \"type\": \"native\", \"comment\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token\"},\n  {\"name\": \"ConditionalModule\", \"type\": \"native\", \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\"},\n  {\"name\": \"CodeModule\", \"type\": \".net\", \"comment\": \"Generate c# code from user description. Only use if no other module is found\"},\n  {\"name\": \"CallGoalModule\", \"type\": \"native\", \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"},\n  {\"name\": \"BlockchainModule\", \"type\": \"native\", \"comment\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature\"}\n]",
    "hash": "40dc62ebcfc7f0be5c982aa9781b4e3f802257e8299c633a51285d2516f3333f"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "read file ../HelloWorld/.build/cache/questions.json into %questions%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ReadFile\",\n\"StepDescription\":\"Read the file located at '../HelloWorld/.build/cache/questions.json' and store its content into the variable '%questions%'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ReadFile\",\n\"StepDescription\":\"Read the file located at '../HelloWorld/.build/cache/questions.json' and store its content into the variable '%questions%'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "300cccd6eef37fc110db1cfb76f88eb13a7a97206ea06fbf13b8f2b62c5d23e6"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: read file ../HelloWorld/.build/cache/questions.json into %questions%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadTextFile\",\n    \"Inputs\": {\n      \"path\": \"../HelloWorld/.build/cache/questions.json\"\n    },\n    \"Outputs\": {\n      \"String\": \"%questions%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadTextFile\",\n    \"Inputs\": {\n      \"path\": \"../HelloWorld/.build/cache/questions.json\"\n    },\n    \"Outputs\": {\n      \"String\": \"%questions%\"\n    }\n  }\n}",
    "hash": "89718c53010d4814e2bd9b94a3ae2b74ad504e549d876387510e88082a54bc44"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "go through each %questions% call !ProcessQuestion",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ProcessQuestions\",\n\"StepDescription\":\"Iterate through each item in the 'questions' variable and call the 'ProcessQuestion' function for each item.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ProcessQuestions\",\n\"StepDescription\":\"Iterate through each item in the 'questions' variable and call the 'ProcessQuestion' function for each item.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}",
    "hash": "68cfb9d900d06224ec7586b46dfb106566cd8a3fa46e5dd5b5b5e102469bffc7"
  },
  {
    "question": {
      "type": "LoopModule",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\n\r\nStatement should define a call goal statement, return the Call name, e.g. call DoStuff. \r\nOnly return the call name, other code will go through the list\r\nVariable: is the name of the variable\r\nYou MUST respond in JSON, scheme:\r\n{CallGoal:string, Variable:string}\r\n\r\nBe Concise.e",
      "question": "go through each %questions% call !ProcessQuestion",
      "assistant": null,
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"CallGoal\": \"!ProcessQuestion\",\n\"Variable\": \"questions\"\n}"
    },
    "answer": "{\n\"CallGoal\": \"!ProcessQuestion\",\n\"Variable\": \"questions\"\n}",
    "hash": "4e67e402d3c08af8d111ad199b36c53da1cd5da3da2ea54f303fc68de72608da"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "set '{\"messages\": [{\"system\":\"%item.question.system%\", \"assistant\":\"%item.question.assistant%\", \"user\":\"%item.question.question%, assistant:%item.question.RawResponse%\"}]}'\n    into %data%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SetData\",\n\"StepDescription\":\"Set the 'messages' object, which contains 'system', 'assistant', and 'user' properties, into the variable %data%\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SetData\",\n\"StepDescription\":\"Set the 'messages' object, which contains 'system', 'assistant', and 'user' properties, into the variable %data%\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}",
    "hash": "344f30756e875955592a8dc7f919f311bb14890442dea8d7bdc671dfdb5e2835"
  },
  {
    "question": {
      "type": "PLang.Modules.LocalOrGlobalVariableModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: set '{\"messages\": [{\"system\":\"%item.question.system%\", \"assistant\":\"%item.question.assistant%\", \"user\":\"%item.question.question%, assistant:%item.question.RawResponse%\"}]}'\n    into %data%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nOnAddVariableListener(String key, String goalName, String appName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\nOnChangeVariableListener(String key, String goalName, String appName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\nOnRemoveVariableListener(String key, String goalName, String appName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\nSetVariable(String key, Object value)\nGetVariable(String key)\nSetStaticVariable(String key, Object value)\nGetStaticVariable(String key)\nRemoveVariable(String key)\nRemoveStaticVariable(String key)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"SetVariable\",\n    \"Inputs\": {\n      \"key\": \"data\",\n      \"value\": {\n        \"messages\": [\n          {\n            \"system\": \"%item.question.system%\",\n            \"assistant\": \"%item.question.assistant%\",\n            \"user\": \"%item.question.question%, assistant:%item.question.RawResponse%\"\n          }\n        ]\n      }\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"SetVariable\",\n    \"Inputs\": {\n      \"key\": \"data\",\n      \"value\": {\n        \"messages\": [\n          {\n            \"system\": \"%item.question.system%\",\n            \"assistant\": \"%item.question.assistant%\",\n            \"user\": \"%item.question.question%, assistant:%item.question.RawResponse%\"\n          }\n        ]\n      }\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "2fd51f10f4f3b8ff2a4cfa55fdb2aa34aff5b294c77ac11a8c57cbcff3f09809"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "create folder 'training'",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CreateFolder\",\n\"StepDescription\":\"Create a new folder named 'training'\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CreateFolder\",\n\"StepDescription\":\"Create a new folder named 'training'\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "27a6b7a5f32f86030856ab54f0ed7525983da7ac33b8295b243ab792fc75dac0"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: create folder 'training'",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"CreateDirectory\",\n    \"Inputs\": {\n      \"directoryPath\": \"training\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"CreateDirectory\",\n    \"Inputs\": {\n      \"directoryPath\": \"training\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "f10187aaf27c4a1f424d09d1ca70043c55758c8c9ef1242e30d1bf054e87cb18"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "append to file 'training/%item.question.type%.jsonl'",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"AppendToFile\",\n\"StepDescription\":\"Append data to the file named 'training/%item.question.type%.jsonl'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"AppendToFile\",\n\"StepDescription\":\"Append data to the file named 'training/%item.question.type%.jsonl'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "9e06cec7c22960fa5343d4148821e2b069bfdae333964e10fde1c9bef9bdf4bf"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: append to file 'training/%item.question.type%.jsonl'",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"AppendToFile\",\n    \"Inputs\": {\n      \"path\": \"training/%item.question.type%.jsonl\",\n      \"content\": \"\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"AppendToFile\",\n    \"Inputs\": {\n      \"path\": \"training/%item.question.type%.jsonl\",\n      \"content\": \"\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "79f5d39d17299af4bd23161508a7789b2d948993d67ed50b782c64e0d2abe2e5"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'go through each %questions% call !ProcessQuestion' had exception\r\n ---> System.IO.DirectoryNotFoundException: Could not find goal path \r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 87\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 280\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 206\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 215\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 180\r\n   at PLang.Runtime.Engine.RunStart() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 160\r\n   at PLang.Runtime.Engine.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"The system could not find the specified goal path.\",\n\"howToFix\": \"Please check the goal path you have provided. Make sure it is correct and the directory exists. If the problem persists, consider checking your application's permissions to access the directory.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"The system could not find the specified goal path.\",\n\"howToFix\": \"Please check the goal path you have provided. Make sure it is correct and the directory exists. If the problem persists, consider checking your application's permissions to access the directory.\"\n}",
    "hash": "63cf5b1b46bcd8c9194203c9bf7f45facd197519f5103a6b878d02e68a0ab9f8"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "append to file 'training/%item.question.type%.jsonl', %data%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"AppendToFile\",\n\"StepDescription\":\"Append the data stored in the variable %data% to the file named 'training/%item.question.type%.jsonl'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"AppendToFile\",\n\"StepDescription\":\"Append the data stored in the variable %data% to the file named 'training/%item.question.type%.jsonl'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "d703efe7bc193beeba021078c7c4bb2cd51221504ca0f652eb4a17568a639cfc"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: append to file 'training/%item.question.type%.jsonl', %data%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"AppendToFile\",\n    \"Inputs\": {\n      \"path\": \"training/%item.question.type%.jsonl\",\n      \"content\": \"%data%\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"AppendToFile\",\n    \"Inputs\": {\n      \"path\": \"training/%item.question.type%.jsonl\",\n      \"content\": \"%data%\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "8fc4d858dbfed2943cf9b62afb921f76e08446a247778509de3575773c1b8eaa"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "set '{\"messages\": [{\"system\":\"%item.question.system.JsonSafe()%\", \"assistant\":\"%item.question.assistant.JsonSafe()%\", \"user\":\"%item.question.question.JsonSafe()%, assistant:%item.question.RawResponse.JsonSafe()%\"}]}'\n    into %data%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SetData\",\n\"StepDescription\":\"Set the 'messages' object, which contains 'system', 'assistant', and 'user' properties, into the variable %data%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SetData\",\n\"StepDescription\":\"Set the 'messages' object, which contains 'system', 'assistant', and 'user' properties, into the variable %data%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}",
    "hash": "96b06c0e129deb2bf6d261740e015a5651589525b2880ee05f3c3c76ff00b246"
  },
  {
    "question": {
      "type": "PLang.Modules.LocalOrGlobalVariableModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: set '{\"messages\": [{\"system\":\"%item.question.system.JsonSafe()%\", \"assistant\":\"%item.question.assistant.JsonSafe()%\", \"user\":\"%item.question.question.JsonSafe()%, assistant:%item.question.RawResponse.JsonSafe()%\"}]}'\n    into %data%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nOnAddVariableListener(String key, String goalName, String appName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\nOnChangeVariableListener(String key, String goalName, String appName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\nOnRemoveVariableListener(String key, String goalName, String appName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\nSetVariable(String key, Object value)\nGetVariable(String key)\nSetStaticVariable(String key, Object value)\nGetStaticVariable(String key)\nRemoveVariable(String key)\nRemoveStaticVariable(String key)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"SetVariable\",\n    \"Inputs\": {\n      \"key\": \"data\",\n      \"value\": {\n        \"messages\": [\n          {\n            \"system\": \"%item.question.system.JsonSafe()%\",\n            \"assistant\": \"%item.question.assistant.JsonSafe()%\",\n            \"user\": \"%item.question.question.JsonSafe()%\",\n            \"assistant\": \"%item.question.RawResponse.JsonSafe()%\"\n          }\n        ]\n      }\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"SetVariable\",\n    \"Inputs\": {\n      \"key\": \"data\",\n      \"value\": {\n        \"messages\": [\n          {\n            \"system\": \"%item.question.system.JsonSafe()%\",\n            \"assistant\": \"%item.question.assistant.JsonSafe()%\",\n            \"user\": \"%item.question.question.JsonSafe()%\",\n            \"assistant\": \"%item.question.RawResponse.JsonSafe()%\"\n          }\n        ]\n      }\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "c4c34d95ab74331e58049b1d881767c58aa5b3c7759bad034fe31f9c989989a6"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'go through each %questions% call !ProcessQuestion' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'set '{\"messages\": [{\"system\":\"%item.question.system.JsonSafe()%\", \"assistant\":\"%item.question.assistant.JsonSafe()%\", \"user\":\"%item.question.question.JsonSafe()%, assistant:%item.question.RawResponse.JsonSafe()%\"}]}'\n    into %data%' had exception\r\n ---> Newtonsoft.Json.JsonException: Array index expected.\r\n   at Newtonsoft.Json.Linq.JsonPath.JPath.ParseArrayIndexer(Char indexerCloseChar)\r\n   at Newtonsoft.Json.Linq.JsonPath.JPath.ParseIndexer(Char indexerOpenChar, Boolean scan)\r\n   at Newtonsoft.Json.Linq.JsonPath.JPath.ParsePath(List`1 filters, Int32 currentPartStartIndex, Boolean query)\r\n   at Newtonsoft.Json.Linq.JsonPath.JPath.ParseMain()\r\n   at Newtonsoft.Json.Linq.JsonPath.JPath..ctor(String expression)\r\n   at Newtonsoft.Json.Linq.JToken.SelectToken(String path, JsonSelectSettings settings)\r\n   at Newtonsoft.Json.Linq.JToken.SelectToken(String path)\r\n   at PLang.Runtime.MemoryStack.Get(String key, Type type, Boolean staticVariable) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\MemoryStack.cs:line 343\r\n   at PLang.Runtime.MemoryStack.Get[T](String key, Boolean staticVariable) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\MemoryStack.cs:line 216\r\n   at PLang.Runtime.MemoryStack.Get(String key, Boolean staticVariable) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\MemoryStack.cs:line 221\r\n   at PLang.utils.VariableHelper.GetVariables(String content, Boolean emptyIfNotFound) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Utils\\VariableHelper.cs:line 331\r\n   at PLang.utils.VariableHelper.LoadVariables(String content, Boolean emptyIfNotFound) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Utils\\VariableHelper.cs:line 226\r\n   at PLang.Modules.BaseProgram.GetMethodAndParameters(GenericFunction function) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 237\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 93\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 280\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 206\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 215\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 180\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 280\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 206\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 215\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 180\r\n   at PLang.Runtime.Engine.RunStart() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 160\r\n   at PLang.Runtime.Engine.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There was an error while processing your request. The system encountered an issue with an array index.\",\n\"howToFix\": \"This error is usually caused by trying to access an array element that doesn't exist. Please check your code to ensure that you're not trying to access an index that is out of the array's bounds. Also, make sure that your JSON data is correctly formatted.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There was an error while processing your request. The system encountered an issue with an array index.\",\n\"howToFix\": \"This error is usually caused by trying to access an array element that doesn't exist. Please check your code to ensure that you're not trying to access an index that is out of the array's bounds. Also, make sure that your JSON data is correctly formatted.\"\n}",
    "hash": "0be94ff510fd53473518a6ef29ff842c9bc723ebad556a3d254b8e048b30eabd"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "set {\"messages\":\n         [{\"system\":\"%item.question.system.JsonSafe()%\", \n            \"assistant\":\"%item.question.assistant.JsonSafe()%\", \n            \"user\":\"%item.question.question.JsonSafe()%, \n            assistant:%item.question.RawResponse.JsonSafe()%\"}]\n        }\n    write into %data%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SetAndWriteData\",\n\"StepDescription\":\"Set a dictionary with keys 'system', 'assistant', 'user', and 'assistant' with their respective values from 'item.question'. Then, write this dictionary into the variable 'data'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\",\n    \"OutputModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SetAndWriteData\",\n\"StepDescription\":\"Set a dictionary with keys 'system', 'assistant', 'user', and 'assistant' with their respective values from 'item.question'. Then, write this dictionary into the variable 'data'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\",\n    \"OutputModule\"\n]\n}",
    "hash": "a0e43721c05a57f3f0da38ff49283b7157cccaa7432121b47381ec2e4a723f99"
  },
  {
    "question": {
      "type": "PLang.Modules.LocalOrGlobalVariableModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: set {\"messages\":\n         [{\"system\":\"%item.question.system.JsonSafe()%\", \n            \"assistant\":\"%item.question.assistant.JsonSafe()%\", \n            \"user\":\"%item.question.question.JsonSafe()%, \n            assistant:%item.question.RawResponse.JsonSafe()%\"}]\n        }\n    write into %data%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nOnAddVariableListener(String key, String goalName, String appName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\nOnChangeVariableListener(String key, String goalName, String appName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\nOnRemoveVariableListener(String key, String goalName, String appName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\nSetVariable(String key, Object value)\nGetVariable(String key)\nSetStaticVariable(String key, Object value)\nGetStaticVariable(String key)\nRemoveVariable(String key)\nRemoveStaticVariable(String key)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"SetVariable\",\n    \"Inputs\": {\n      \"key\": \"data\",\n      \"value\": {\n        \"messages\": [\n          {\n            \"system\": \"%item.question.system.JsonSafe()%\",\n            \"assistant\": \"%item.question.assistant.JsonSafe()%\",\n            \"user\": \"%item.question.question.JsonSafe()%\",\n            \"assistant\": \"%item.question.RawResponse.JsonSafe()%\"\n          }\n        ]\n      }\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"SetVariable\",\n    \"Inputs\": {\n      \"key\": \"data\",\n      \"value\": {\n        \"messages\": [\n          {\n            \"system\": \"%item.question.system.JsonSafe()%\",\n            \"assistant\": \"%item.question.assistant.JsonSafe()%\",\n            \"user\": \"%item.question.question.JsonSafe()%\",\n            \"assistant\": \"%item.question.RawResponse.JsonSafe()%\"\n          }\n        ]\n      }\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "73a5306cefd0b94b762e75ec89942b4ed98538ec1b8a69fe386cd730918ffe76"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "append to file 'training/%item.question.type%.jsonl', %data%, seperate by new line",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"AppendToFile\",\n\"StepDescription\":\"Append the data stored in the variable %data% to the file named 'training/%item.question.type%.jsonl', each data entry should be separated by a new line.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"AppendToFile\",\n\"StepDescription\":\"Append the data stored in the variable %data% to the file named 'training/%item.question.type%.jsonl', each data entry should be separated by a new line.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "15309866ef4026d41b2a04cf0e95a6bfec4131d82619a739cfb91bc7a593c736"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: append to file 'training/%item.question.type%.jsonl', %data%, seperate by new line",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"AppendToFile\",\n    \"Inputs\": {\n      \"path\": \"training/%item.question.type%.jsonl\",\n      \"content\": \"%data%\",\n      \"seperator\": \"\\n\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"AppendToFile\",\n    \"Inputs\": {\n      \"path\": \"training/%item.question.type%.jsonl\",\n      \"content\": \"%data%\",\n      \"seperator\": \"\\n\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "ebb1c9038c3c8e478b41c48e58af2407fa05164f3c0d2dab99d127e06788d207"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "set {\"messages\":\n         [{\"system\":\"%item.question.system.JsonSafe().Replace(\"\\n\", \"\").Replace(\"\\t\", \"\") %\", \n            \"assistant\":\"%item.question.assistant.JsonSafe()%\", \n            \"user\":\"%item.question.question.JsonSafe()%, \n            assistant:%item.question.RawResponse.JsonSafe()%\"}]\n        }\n    write into %data%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SetAndWriteData\",\n\"StepDescription\":\"Set a dictionary with keys 'system', 'assistant', 'user', and 'assistant' with their respective values from 'item.question'. Then, write this dictionary into the variable 'data'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SetAndWriteData\",\n\"StepDescription\":\"Set a dictionary with keys 'system', 'assistant', 'user', and 'assistant' with their respective values from 'item.question'. Then, write this dictionary into the variable 'data'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}",
    "hash": "62a44ca8c880f3adea81eccd53c316e4c9a7c895f3936a911f804b253e7916c8"
  },
  {
    "question": {
      "type": "PLang.Modules.LocalOrGlobalVariableModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: set {\"messages\":\n         [{\"system\":\"%item.question.system.JsonSafe().Replace(\"\\n\", \"\").Replace(\"\\t\", \"\") %\", \n            \"assistant\":\"%item.question.assistant.JsonSafe()%\", \n            \"user\":\"%item.question.question.JsonSafe()%, \n            assistant:%item.question.RawResponse.JsonSafe()%\"}]\n        }\n    write into %data%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nOnAddVariableListener(String key, String goalName, String appName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\nOnChangeVariableListener(String key, String goalName, String appName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\nOnRemoveVariableListener(String key, String goalName, String appName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\nSetVariable(String key, Object value)\nGetVariable(String key)\nSetStaticVariable(String key, Object value)\nGetStaticVariable(String key)\nRemoveVariable(String key)\nRemoveStaticVariable(String key)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"SetVariable\",\n    \"Inputs\": {\n      \"key\": \"data\",\n      \"value\": {\n        \"messages\": [\n          {\n            \"system\": \"%item.question.system.JsonSafe().Replace(\\\"\\\\n\\\", \\\"\\\").Replace(\\\"\\\\t\\\", \\\"\\\") %\",\n            \"assistant\": \"%item.question.assistant.JsonSafe()%\",\n            \"user\": \"%item.question.question.JsonSafe()%\",\n            \"assistant\": \"%item.question.RawResponse.JsonSafe()%\"\n          }\n        ]\n      }\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"SetVariable\",\n    \"Inputs\": {\n      \"key\": \"data\",\n      \"value\": {\n        \"messages\": [\n          {\n            \"system\": \"%item.question.system.JsonSafe().Replace(\\\"\\\\n\\\", \\\"\\\").Replace(\\\"\\\\t\\\", \\\"\\\") %\",\n            \"assistant\": \"%item.question.assistant.JsonSafe()%\",\n            \"user\": \"%item.question.question.JsonSafe()%\",\n            \"assistant\": \"%item.question.RawResponse.JsonSafe()%\"\n          }\n        ]\n      }\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "ff4b813f6ffbbf0a78e285c313649f32b0632112a14b493075b278fbe154bf1e"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "read all questions.json in path ../ and subfolders, into %questions%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ReadQuestions\",\n\"StepDescription\":\"Read all questions.json files from the specified path and its subfolders and store the data into the variable %questions%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ReadQuestions\",\n\"StepDescription\":\"Read all questions.json files from the specified path and its subfolders and store the data into the variable %questions%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "f31d0eebc7f63f66e0feaab8f8b8e578a4c366a2bcbacaf804c8f37d997c92ba"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: read all questions.json in path ../ and subfolders, into %questions%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadMultipleTextFiles\",\n    \"Inputs\": {\n      \"folderPath\": \"../\",\n      \"filePattern\": \"questions.json\",\n      \"includeAllSubfolders\": true\n    },\n    \"Outputs\": {\n      \"List<String>\": \"%questions%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadMultipleTextFiles\",\n    \"Inputs\": {\n      \"folderPath\": \"../\",\n      \"filePattern\": \"questions.json\",\n      \"includeAllSubfolders\": true\n    },\n    \"Outputs\": {\n      \"List<String>\": \"%questions%\"\n    }\n  }\n}",
    "hash": "d46e5836b463ec24373c17edd4f2fb147b42507ff4aa00cc0a35ce22b19e5b4c"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "read all questions.json in path ../ and subfolders, into %files%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ReadQuestions\",\n\"StepDescription\":\"Read all files named 'questions.json' located in the path '../' and its subfolders, and store the content into the variable '%files%'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ReadQuestions\",\n\"StepDescription\":\"Read all files named 'questions.json' located in the path '../' and its subfolders, and store the content into the variable '%files%'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "8457f67f07df0e856aa22eb9c382a65db4ad770f437120031768bf2dfc735337"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: read all questions.json in path ../ and subfolders, into %files%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadMultipleTextFiles\",\n    \"Inputs\": {\n      \"folderPath\": \"../\",\n      \"filePattern\": \"questions.json\",\n      \"includeAllSubfolders\": true\n    },\n    \"Outputs\": {\n      \"List<String>\": \"%files%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadMultipleTextFiles\",\n    \"Inputs\": {\n      \"folderPath\": \"../\",\n      \"filePattern\": \"questions.json\",\n      \"includeAllSubfolders\": true\n    },\n    \"Outputs\": {\n      \"List<String>\": \"%files%\"\n    }\n  }\n}",
    "hash": "7984aac73a1cbcde1ab9f8bcbbcc8363439fb9d3c7c492c4057efe9f8fd17847"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "go through each %files%, call !ProcessFile",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ProcessFiles\",\n\"StepDescription\":\"Iterate through each file in the 'files' variable and call the 'ProcessFile' function for each one.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ProcessFiles\",\n\"StepDescription\":\"Iterate through each file in the 'files' variable and call the 'ProcessFile' function for each one.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}",
    "hash": "01227c074ec94c7db0d210b458c48c039aa3ae9c4163d520e5b6ce87f07a1489"
  },
  {
    "question": {
      "type": "LoopModule",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\n\r\nStatement should define a call goal statement, return the Call name, e.g. call DoStuff. \r\nOnly return the call name, other code will go through the list\r\nVariable: is the name of the variable\r\nYou MUST respond in JSON, scheme:\r\n{CallGoal:string, Variable:string}\r\n\r\nBe Concise.e",
      "question": "go through each %files%, call !ProcessFile",
      "assistant": null,
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"CallGoal\": \"ProcessFile\", \"Variable\": \"files\"}"
    },
    "answer": "{\"CallGoal\": \"ProcessFile\", \"Variable\": \"files\"}",
    "hash": "99a48524242b808591f2e34ef5ca31c5ebb3d6c9c6de546193d9b35fc48ebcc0"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "go through each %item% call !ProcessQuestion",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"LoopThroughItems\",\n\"StepDescription\":\"Iterate through each item and call the function 'ProcessQuestion' for each item.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"LoopThroughItems\",\n\"StepDescription\":\"Iterate through each item and call the function 'ProcessQuestion' for each item.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}",
    "hash": "e17fed06a2949bbef01854d7c66b72f8ee30f87a6a91e2d79a5fdd7b22b122d2"
  },
  {
    "question": {
      "type": "LoopModule",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\n\r\nStatement should define a call goal statement, return the Call name, e.g. call DoStuff. \r\nOnly return the call name, other code will go through the list\r\nVariable: is the name of the variable\r\nYou MUST respond in JSON, scheme:\r\n{CallGoal:string, Variable:string}\r\n\r\nBe Concise.e",
      "question": "go through each %item% call !ProcessQuestion",
      "assistant": null,
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"CallGoal\": \"ProcessQuestion\", \"Variable\": \"item\"}"
    },
    "answer": "{\"CallGoal\": \"ProcessQuestion\", \"Variable\": \"item\"}",
    "hash": "de5aada8e1386b7079a1b840566e95e8c7c3e359905231ef672ae6ce4faedfd1"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: create folder 'training'",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"CreateDirectory\",\n    \"Inputs\": {\n      \"directoryPath\": \"training\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"CreateDirectory\",\n    \"Inputs\": {\n      \"directoryPath\": \"training\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "c4966d9b2eb205787da3c1676777978b04925485f04badd0d104302c31c44373"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: append to file 'training/%item.question.type%.jsonl', %data%, seperate by new line",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"AppendToFile\",\n    \"Inputs\": {\n      \"path\": \"training/%item.question.type%.jsonl\",\n      \"content\": \"%data%\",\n      \"seperator\": \"\\n\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"AppendToFile\",\n    \"Inputs\": {\n      \"path\": \"training/%item.question.type%.jsonl\",\n      \"content\": \"%data%\",\n      \"seperator\": \"\\n\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "d13357a497306106e901f80afffdc646be371b78bc3a1141521a6ef6f7c1a80f"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'go through each %files%, call !ProcessFile' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'go through each %item% call !ProcessQuestion' had exception\r\n ---> System.IO.DirectoryNotFoundException: Could not find goal path \r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 280\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 206\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 215\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 180\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 280\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 206\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 215\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 180\r\n   at PLang.Runtime.Engine.RunStart() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 160\r\n   at PLang.Runtime.Engine.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"The system could not find the specified path.\",\n\"howToFix\": \"Please check the path you have provided. Make sure it exists and is accessible.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"The system could not find the specified path.\",\n\"howToFix\": \"Please check the path you have provided. Make sure it exists and is accessible.\"\n}",
    "hash": "65d85d5011c495d878b223138ae71f92f156f85420f95acf41d79214a6e06607"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "read file training/LoopModule.jsonl, into %json%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ReadFile\",\n\"StepDescription\":\"Read the file located at 'training/LoopModule.jsonl' and store its content into the variable %json%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ReadFile\",\n\"StepDescription\":\"Read the file located at 'training/LoopModule.jsonl' and store its content into the variable %json%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "7516c12fafc4d886b948ee9c7c2c93dbf566375a9a996863b35b4c82f99254b3"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: read file training/LoopModule.jsonl, into %json%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadTextFile\",\n    \"Inputs\": {\n      \"path\": \"training/LoopModule.jsonl\"\n    },\n    \"Outputs\": {\n      \"String\": \"json\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadTextFile\",\n    \"Inputs\": {\n      \"path\": \"training/LoopModule.jsonl\"\n    },\n    \"Outputs\": {\n      \"String\": \"json\"\n    }\n  }\n}",
    "hash": "0f3177aeffab4ba6f6bb261c633976ea4bd6ae2b45383183ea72ad6441628e1c"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "post https://api.openai.com/v1/files,",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"PostRequest\",\n\"StepDescription\":\"Make a POST request to the URL https://api.openai.com/v1/files\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HttpModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"PostRequest\",\n\"StepDescription\":\"Make a POST request to the URL https://api.openai.com/v1/files\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HttpModule\"\n]\n}",
    "hash": "537f780cfaf25514a929bf93ba453928d428f1dad9447afd4966c97b7bee5d9b"
  },
  {
    "question": {
      "type": "PLang.Modules.HttpModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: post https://api.openai.com/v1/files,",
      "assistant": "\r\n## functions available defined in csharp ##\r\nPost(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nPatch(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nGet(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nOption(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nHead(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nPut(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nDelete(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nUser might use JSONPath to describe how to load variable in Output, keep the $ for the Output key.\\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Post\",\n    \"Inputs\": {\n      \"url\": \"https://api.openai.com/v1/files\",\n      \"data\": {},\n      \"signRequest\": false,\n      \"headers\": {},\n      \"encoding\": \"utf-8\",\n      \"contentType\": \"application/json\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Post\",\n    \"Inputs\": {\n      \"url\": \"https://api.openai.com/v1/files\",\n      \"data\": {},\n      \"signRequest\": false,\n      \"headers\": {},\n      \"encoding\": \"utf-8\",\n      \"contentType\": \"application/json\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "e525a95a1aa68181fdcaeaeac918660b2d5a707270023853f61cfcc950dd412e"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\" \\\n    \\-F file=\"%json\"\n    bearer %Settings.OpenAi%\n    write to %result%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"PostToOpenAI\",\n\"StepDescription\":\"Make a POST request to the OpenAI API at 'https://api.openai.com/v1/files' with the purpose set to 'fine-tune' and the file set to the value of the variable 'json'. The bearer token for authentication is retrieved from 'Settings.OpenAi'. The response from the API is stored in the variable 'result'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HttpModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"PostToOpenAI\",\n\"StepDescription\":\"Make a POST request to the OpenAI API at 'https://api.openai.com/v1/files' with the purpose set to 'fine-tune' and the file set to the value of the variable 'json'. The bearer token for authentication is retrieved from 'Settings.OpenAi'. The response from the API is stored in the variable 'result'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HttpModule\"\n]\n}",
    "hash": "9b1a668716c7a79e5788bf3eeebdc21dad612c7a0ea495a3289a89629d49f548"
  },
  {
    "question": {
      "type": "PLang.Modules.HttpModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\" \\\n    \\-F file=\"%json\"\n    bearer %Settings.OpenAi%\n    write to %result%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nPost(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nPatch(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nGet(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nOption(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nHead(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nPut(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nDelete(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nUser might use JSONPath to describe how to load variable in Output, keep the $ for the Output key.\\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Post\",\n    \"Inputs\": {\n      \"url\": \"https://api.openai.com/v1/files\",\n      \"data\": {\n        \"purpose\": \"fine-tune\",\n        \"file\": \"%json%\"\n      },\n      \"signRequest\": false,\n      \"headers\": {\n        \"Authorization\": \"Bearer %Settings.Get('OpenAi', '', 'Your OpenAI API Key')%\"\n      },\n      \"encoding\": \"utf-8\",\n      \"contentType\": \"multipart/form-data\"\n    },\n    \"Outputs\": {\n      \"$\": \"%result%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Post\",\n    \"Inputs\": {\n      \"url\": \"https://api.openai.com/v1/files\",\n      \"data\": {\n        \"purpose\": \"fine-tune\",\n        \"file\": \"%json%\"\n      },\n      \"signRequest\": false,\n      \"headers\": {\n        \"Authorization\": \"Bearer %Settings.Get('OpenAi', '', 'Your OpenAI API Key')%\"\n      },\n      \"encoding\": \"utf-8\",\n      \"contentType\": \"multipart/form-data\"\n    },\n    \"Outputs\": {\n      \"$\": \"%result%\"\n    }\n  }\n}",
    "hash": "b9ac7662d2706f10ab29fd2ff99b92530e9456e68f5bd801c2fd8daaf010b416"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "write %result% to training/LoopModuleResult.json",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WriteToFile\",\n\"StepDescription\":\"Write the content of the variable %result% to a file named LoopModuleResult.json located in the training directory\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WriteToFile\",\n\"StepDescription\":\"Write the content of the variable %result% to a file named LoopModuleResult.json located in the training directory\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "34315214b79410db31a4689c9e90f4a29ba11ebf00567ef2c250e947436952ad"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: write %result% to training/LoopModuleResult.json",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"WriteToFile\",\n    \"Inputs\": {\n      \"path\": \"training/LoopModuleResult.json\",\n      \"content\": \"%result%\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"WriteToFile\",\n    \"Inputs\": {\n      \"path\": \"training/LoopModuleResult.json\",\n      \"content\": \"%result%\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "ac31f1cc4218d0aeea702e32142126dda4e19fb97996d0e80bcd2085ede36a9b"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\" \\\n    \\-F file=\"%json\"\n    bearer %Settings.OpenAi%\n    write to %result%' had exception\r\n ---> System.AggregateException: One or more errors occurred. ({\n  \"error\": {\n    \"message\": \"Invalid authorization header\",\n    \"type\": \"server_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n)\r\n ---> System.Net.Http.HttpRequestException: {\n  \"error\": {\n    \"message\": \"Invalid authorization header\",\n    \"type\": \"server_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n\r\n   at PLang.Modules.HttpModule.Program.Request(String url, String method, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 160\r\n   at PLang.Modules.HttpModule.Program.Post(String url, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 21\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Modules.BaseRetryProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 36\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 290\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 311\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 216\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 225\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 190\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There seems to be an issue with your authorization header while trying to connect to the OpenAI API.\",\n\"howToFix\": \"Please check your authorization header. Make sure that your API key is correct and properly included in your request. If the problem persists, consider regenerating your API key from the OpenAI dashboard.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There seems to be an issue with your authorization header while trying to connect to the OpenAI API.\",\n\"howToFix\": \"Please check your authorization header. Make sure that your API key is correct and properly included in your request. If the problem persists, consider regenerating your API key from the OpenAI dashboard.\"\n}",
    "hash": "f474a62159953b8027f2a040ca6f87fedce4036f0fd5e1d474c9feb6c2a1644e"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "read file training/LoopModule.jsonl, write into %json%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ReadFile\",\n\"StepDescription\":\"Read the file located at 'training/LoopModule.jsonl' and store its content into the variable %json%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ReadFile\",\n\"StepDescription\":\"Read the file located at 'training/LoopModule.jsonl' and store its content into the variable %json%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "69e91363ff73eb6298513eef9f97b00d63f283eff803d449870851cf33e443db"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: read file training/LoopModule.jsonl, write into %json%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadTextFile\",\n    \"Inputs\": {\n      \"path\": \"training/LoopModule.jsonl\"\n    },\n    \"Outputs\": {\n      \"String\": \"%json%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadTextFile\",\n    \"Inputs\": {\n      \"path\": \"training/LoopModule.jsonl\"\n    },\n    \"Outputs\": {\n      \"String\": \"%json%\"\n    }\n  }\n}",
    "hash": "5c935ecac89d2ba43523bfb738b43e69b230361afc86c69312dcf01fd4ed33cf"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\" \\\n    \\-F file=\"%json\"\n    bearer %Settings.OpenAi%\n    write to %result%' had exception\r\n ---> System.AggregateException: One or more errors occurred. (Object reference not set to an instance of an object.)\r\n ---> System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at PLang.Runtime.MemoryStack.Get(String key, Type type, Boolean staticVariable) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\MemoryStack.cs:line 294\r\n   at PLang.Runtime.MemoryStack.Get[T](String key, Boolean staticVariable) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\MemoryStack.cs:line 217\r\n   at PLang.Runtime.MemoryStack.Get(String key, Boolean staticVariable) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\MemoryStack.cs:line 222\r\n   at PLang.utils.VariableHelper.GetVariables(String content, Boolean emptyIfNotFound) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Utils\\VariableHelper.cs:line 95\r\n   at PLang.utils.VariableHelper.LoadVariables(String content, Boolean emptyIfNotFound) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Utils\\VariableHelper.cs:line 51\r\n   at PLang.Modules.HttpModule.Program.<>c__DisplayClass8_0.<Request>b__2() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 118\r\n   at Polly.Policy`1.<>c__DisplayClass11_0.<Execute>b__0(Context _, CancellationToken _)\r\n   at Polly.Retry.RetryEngine.Implementation[TResult](Func`3 action, Context context, CancellationToken cancellationToken, ExceptionPredicates shouldRetryExceptionPredicates, ResultPredicates`1 shouldRetryResultPredicates, Action`4 onRetry, Int32 permittedRetryCount, IEnumerable`1 sleepDurationsEnumerable, Func`4 sleepDurationProvider)\r\n   at Polly.Retry.RetryPolicy`1.Implementation(Func`3 action, Context context, CancellationToken cancellationToken)\r\n   at Polly.Policy`1.Execute(Func`3 action, Context context, CancellationToken cancellationToken)\r\n   at Polly.Policy`1.Execute(Func`1 action)\r\n   at PLang.Modules.HttpModule.Program.Request(String url, String method, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 95\r\n   at PLang.Modules.HttpModule.Program.Post(String url, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 21\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Modules.BaseRetryProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 36\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 290\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 216\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 225\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 190\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"userFriendlyMessage\": \"An error occurred while trying to access a variable that doesn't exist or hasn't been initialized.\", \"howToFix\": \"Please check your code to ensure that all variables are properly initialized before they are used. Also, make sure that the variable names are spelled correctly.\"}"
    },
    "answer": "{\"userFriendlyMessage\": \"An error occurred while trying to access a variable that doesn't exist or hasn't been initialized.\", \"howToFix\": \"Please check your code to ensure that all variables are properly initialized before they are used. Also, make sure that the variable names are spelled correctly.\"}",
    "hash": "5e9c0b65e04297836f224d4c683c254b9fb3b921e7d85bdeba1abe8c1557a43c"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\" \\\n    \\-F file=\"%json.JsonSafe()%\"\n    bearer %Settings.OpenAi%\n    write to %result%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"PostFileToOpenAI\",\n\"StepDescription\":\"Make a POST request to the OpenAI API at 'https://api.openai.com/v1/files' with the purpose set to 'fine-tune' and the file set to the safe JSON content. The request should be authorized using the bearer token from the settings. The response should be written to the 'result' variable.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HttpModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"PostFileToOpenAI\",\n\"StepDescription\":\"Make a POST request to the OpenAI API at 'https://api.openai.com/v1/files' with the purpose set to 'fine-tune' and the file set to the safe JSON content. The request should be authorized using the bearer token from the settings. The response should be written to the 'result' variable.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HttpModule\"\n]\n}",
    "hash": "5c6688f68646cd69d59459e926341d6d9dd6614d94d734c059c3d578b740f89a"
  },
  {
    "question": {
      "type": "PLang.Modules.HttpModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\" \\\n    \\-F file=\"%json.JsonSafe()%\"\n    bearer %Settings.OpenAi%\n    write to %result%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nPost(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nPatch(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nGet(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nOption(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nHead(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nPut(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nDelete(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nUser might use JSONPath to describe how to load variable in Output, keep the $ for the Output key.\\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Post\",\n    \"Inputs\": {\n      \"url\": \"https://api.openai.com/v1/files\",\n      \"data\": {\n        \"purpose\": \"fine-tune\",\n        \"file\": \"%json.JsonSafe()%\"\n      },\n      \"signRequest\": false,\n      \"headers\": {\n        \"Authorization\": \"Bearer %Settings.Get(\\\"OpenAi\\\", \\\"\\\", \\\"Your OpenAI API Key\\\")%\"\n      },\n      \"encoding\": \"utf-8\",\n      \"contentType\": \"application/json\"\n    },\n    \"Outputs\": {\n      \"$\": \"%result%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Post\",\n    \"Inputs\": {\n      \"url\": \"https://api.openai.com/v1/files\",\n      \"data\": {\n        \"purpose\": \"fine-tune\",\n        \"file\": \"%json.JsonSafe()%\"\n      },\n      \"signRequest\": false,\n      \"headers\": {\n        \"Authorization\": \"Bearer %Settings.Get(\\\"OpenAi\\\", \\\"\\\", \\\"Your OpenAI API Key\\\")%\"\n      },\n      \"encoding\": \"utf-8\",\n      \"contentType\": \"application/json\"\n    },\n    \"Outputs\": {\n      \"$\": \"%result%\"\n    }\n  }\n}",
    "hash": "56bb2ec8c9f2a987d731c0bd70fbfc078ee857c330d54c2df6686f40ed31f7c0"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\" \\\n    \\-F file=\"%json.JsonSafe()%\"\n    bearer %Settings.OpenAi%\n    write to %result%' had exception\r\n ---> System.AggregateException: One or more errors occurred. ({\n  \"error\": {\n    \"message\": \"Invalid Content-Type header (application/json; charset=utf-8), expected multipart/form-data. (HINT: If you're using curl, you can pass -H 'Content-Type: multipart/form-data')\",\n    \"type\": \"invalid_request_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n)\r\n ---> System.Net.Http.HttpRequestException: {\n  \"error\": {\n    \"message\": \"Invalid Content-Type header (application/json; charset=utf-8), expected multipart/form-data. (HINT: If you're using curl, you can pass -H 'Content-Type: multipart/form-data')\",\n    \"type\": \"invalid_request_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n\r\n   at PLang.Modules.HttpModule.Program.Request(String url, String method, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 160\r\n   at PLang.Modules.HttpModule.Program.Post(String url, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 21\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Modules.BaseRetryProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 36\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 290\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 311\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 216\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 225\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 190\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There was an issue with the Content-Type header in your HTTP request. The server expected 'multipart/form-data' but received 'application/json; charset=utf-8'.\",\n\"howToFix\": \"You need to change the Content-Type header in your HTTP request to 'multipart/form-data'. If you're using curl, you can do this by adding -H 'Content-Type: multipart/form-data' to your command.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There was an issue with the Content-Type header in your HTTP request. The server expected 'multipart/form-data' but received 'application/json; charset=utf-8'.\",\n\"howToFix\": \"You need to change the Content-Type header in your HTTP request to 'multipart/form-data'. If you're using curl, you can do this by adding -H 'Content-Type: multipart/form-data' to your command.\"\n}",
    "hash": "0c67379f9423d5a464c1874442063d95da6e201f1a082d154406a0b479f131b1"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\"\n    \\-F file=\"%json.JsonSafe()%\"\n    bearer %Settings.OpenAi%\n    multipart\n    write to %result%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"PostFileToOpenAI\",\n\"StepDescription\":\"Make a POST request to the OpenAI API at 'https://api.openai.com/v1/files' with the purpose set to 'fine-tune' and the file set to the JSON content. The request should be authenticated using a bearer token from the settings. The request should be sent as multipart and the response should be stored in the 'result' variable.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HttpModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"PostFileToOpenAI\",\n\"StepDescription\":\"Make a POST request to the OpenAI API at 'https://api.openai.com/v1/files' with the purpose set to 'fine-tune' and the file set to the JSON content. The request should be authenticated using a bearer token from the settings. The request should be sent as multipart and the response should be stored in the 'result' variable.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HttpModule\"\n]\n}",
    "hash": "f2b9f8874691d0f3276e5ac177d6860e42f3cee7c16aa4d3bfe4ab0aaceaf5ee"
  },
  {
    "question": {
      "type": "PLang.Modules.HttpModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\"\n    \\-F file=\"%json.JsonSafe()%\"\n    bearer %Settings.OpenAi%\n    multipart\n    write to %result%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nPost(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nPatch(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nGet(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nOption(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nHead(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nPut(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nDelete(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nUser might use JSONPath to describe how to load variable in Output, keep the $ for the Output key.\\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Post\",\n    \"Inputs\": {\n      \"url\": \"https://api.openai.com/v1/files\",\n      \"data\": {\n        \"purpose\": \"fine-tune\",\n        \"file\": \"%json.JsonSafe()%\"\n      },\n      \"signRequest\": false,\n      \"headers\": {\n        \"Authorization\": \"Bearer %Settings.Get(\\\"OpenAi\\\", \\\"\\\", \\\"Your OpenAI API Key\\\")%\",\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    },\n    \"Outputs\": {\n      \"$\": \"%result%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Post\",\n    \"Inputs\": {\n      \"url\": \"https://api.openai.com/v1/files\",\n      \"data\": {\n        \"purpose\": \"fine-tune\",\n        \"file\": \"%json.JsonSafe()%\"\n      },\n      \"signRequest\": false,\n      \"headers\": {\n        \"Authorization\": \"Bearer %Settings.Get(\\\"OpenAi\\\", \\\"\\\", \\\"Your OpenAI API Key\\\")%\",\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    },\n    \"Outputs\": {\n      \"$\": \"%result%\"\n    }\n  }\n}",
    "hash": "6e1e01f4a0c05f4610147fade1977441164d9aeee1771fb61ba5a3807af97b7a"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\"\n    \\-F file=\"%json.JsonSafe()%\"\n    bearer %Settings.OpenAi%\n    multipart\n    write to %result%' had exception\r\n ---> System.AggregateException: One or more errors occurred. ({\n  \"error\": {\n    \"message\": \"Invalid Content-Type header (application/json; charset=utf-8), expected multipart/form-data. (HINT: If you're using curl, you can pass -H 'Content-Type: multipart/form-data')\",\n    \"type\": \"invalid_request_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n)\r\n ---> System.Net.Http.HttpRequestException: {\n  \"error\": {\n    \"message\": \"Invalid Content-Type header (application/json; charset=utf-8), expected multipart/form-data. (HINT: If you're using curl, you can pass -H 'Content-Type: multipart/form-data')\",\n    \"type\": \"invalid_request_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n\r\n   at PLang.Modules.HttpModule.Program.Request(String url, String method, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 160\r\n   at PLang.Modules.HttpModule.Program.Post(String url, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 21\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Modules.BaseRetryProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 36\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 290\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 216\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 225\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 190\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There was an issue with the Content-Type header in your request. It was set to 'application/json; charset=utf-8' but the server expected 'multipart/form-data'.\",\n\"howToFix\": \"You need to change the Content-Type header in your request to 'multipart/form-data'. If you're using curl, you can do this by adding -H 'Content-Type: multipart/form-data' to your command.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There was an issue with the Content-Type header in your request. It was set to 'application/json; charset=utf-8' but the server expected 'multipart/form-data'.\",\n\"howToFix\": \"You need to change the Content-Type header in your request to 'multipart/form-data'. If you're using curl, you can do this by adding -H 'Content-Type: multipart/form-data' to your command.\"\n}",
    "hash": "5f40745dd007f405d2310e937dccb8154cd15ec837407cb7ebc50e4f2f5a056d"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\"\n    \\-F file=\"%json.JsonSafe()%\"\n    bearer %Settings.OpenAi%\n    multipart\n    write to %result%' had exception\r\n ---> System.AggregateException: One or more errors occurred. ({\n  \"error\": {\n    \"message\": \"The browser (or proxy) sent a request that this server could not understand.\",\n    \"type\": \"server_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n)\r\n ---> System.Net.Http.HttpRequestException: {\n  \"error\": {\n    \"message\": \"The browser (or proxy) sent a request that this server could not understand.\",\n    \"type\": \"server_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n\r\n   at PLang.Modules.HttpModule.Program.Request(String url, String method, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 175\r\n   at PLang.Modules.HttpModule.Program.Post(String url, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 22\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Modules.BaseRetryProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 36\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 290\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 216\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 225\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 190\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"The server could not understand the request sent by your browser or proxy.\",\n\"howToFix\": \"Please check the request you are sending. Make sure the URL, headers, and body of your request are correctly formatted. If you are using a proxy, ensure it is properly configured.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"The server could not understand the request sent by your browser or proxy.\",\n\"howToFix\": \"Please check the request you are sending. Make sure the URL, headers, and body of your request are correctly formatted. If you are using a proxy, ensure it is properly configured.\"\n}",
    "hash": "c98169af752b3fdfd62b8259454929bbef8f1458385077d9344ddd23490188b5"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\"\n    \\-F file=\"%json.JsonSafe()%\"\n    bearer %Settings.OpenAi%\n    multipart\n    write to %result%' had exception\r\n ---> System.AggregateException: One or more errors occurred. ({\n  \"error\": {\n    \"message\": \"The browser (or proxy) sent a request that this server could not understand.\",\n    \"type\": \"server_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n)\r\n ---> System.Net.Http.HttpRequestException: {\n  \"error\": {\n    \"message\": \"The browser (or proxy) sent a request that this server could not understand.\",\n    \"type\": \"server_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n\r\n   at PLang.Modules.HttpModule.Program.Request(String url, String method, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 172\r\n   at PLang.Modules.HttpModule.Program.Post(String url, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 22\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Modules.BaseRetryProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 36\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 290\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 216\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 225\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 190\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There was an issue with the server understanding the request sent by your browser or proxy. This could be due to an error in the request format.\",\n\"howToFix\": \"Please check the request you are sending. Make sure the URL, headers, and body of the request are correctly formatted. If you are using a proxy, ensure it is properly configured. If the problem persists, consider reaching out to the server's support team.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There was an issue with the server understanding the request sent by your browser or proxy. This could be due to an error in the request format.\",\n\"howToFix\": \"Please check the request you are sending. Make sure the URL, headers, and body of the request are correctly formatted. If you are using a proxy, ensure it is properly configured. If the problem persists, consider reaching out to the server's support team.\"\n}",
    "hash": "a3005940d59397508ad67bdc85f13fc68ac4c927e4804a1e9cca38790a27e0e8"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\"\n    \\-F file=\"%json.JsonSafe()%\"\n    bearer %Settings.OpenAi%\n    multipart\n    write to %result%' had exception\r\n ---> System.AggregateException: One or more errors occurred. ({\n  \"error\": {\n    \"message\": \"The browser (or proxy) sent a request that this server could not understand.\",\n    \"type\": \"server_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n)\r\n ---> System.Net.Http.HttpRequestException: {\n  \"error\": {\n    \"message\": \"The browser (or proxy) sent a request that this server could not understand.\",\n    \"type\": \"server_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n\r\n   at PLang.Modules.HttpModule.Program.Request(String url, String method, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 180\r\n   at PLang.Modules.HttpModule.Program.Post(String url, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 22\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Modules.BaseRetryProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 36\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 290\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 216\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 225\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 190\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"The server could not understand the request sent by your browser or proxy.\",\n\"howToFix\": \"Please check your request parameters and ensure they are correct. If you are using a proxy, verify its settings. If the problem persists, contact your system administrator.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"The server could not understand the request sent by your browser or proxy.\",\n\"howToFix\": \"Please check your request parameters and ensure they are correct. If you are using a proxy, verify its settings. If the problem persists, contact your system administrator.\"\n}",
    "hash": "2a3bd8c81b8e97f4831e26181286cb3b03bff4ef8cbf13196857c1617cc62e82"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\"\n    \\-F file=\"%json.JsonSafe()%\"\n    bearer %Settings.OpenAi%\n    multipart\n    write to %result%' had exception\r\n ---> System.AggregateException: One or more errors occurred. ({\n  \"error\": {\n    \"message\": \"The browser (or proxy) sent a request that this server could not understand.\",\n    \"type\": \"server_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n)\r\n ---> System.Net.Http.HttpRequestException: {\n  \"error\": {\n    \"message\": \"The browser (or proxy) sent a request that this server could not understand.\",\n    \"type\": \"server_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n\r\n   at PLang.Modules.HttpModule.Program.Request(String url, String method, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 185\r\n   at PLang.Modules.HttpModule.Program.Post(String url, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 22\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Modules.BaseRetryProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 36\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 290\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 216\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 225\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 190\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"The server could not understand the request sent by your browser or proxy.\",\n\"howToFix\": \"Please check the request you are sending. Make sure the URL, headers, and body of your request are correctly formatted. If you are using a proxy, ensure it is properly configured.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"The server could not understand the request sent by your browser or proxy.\",\n\"howToFix\": \"Please check the request you are sending. Make sure the URL, headers, and body of your request are correctly formatted. If you are using a proxy, ensure it is properly configured.\"\n}",
    "hash": "395adb43fdb02ff70683d9853d02624642da0b126f4e939a50daa539d44cd78d"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\"\n    \\-F file=\"%json.JsonSafe()%\"\n    bearer %Settings.OpenAi%\n    multipart\n    write to %result%' had exception\r\n ---> System.AggregateException: One or more errors occurred. ({\n  \"error\": {\n    \"message\": \"Invalid message key. Expected each message to be a JSON object with at most 3 keys (role, content, name). Line 1, message 1 has key system.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n)\r\n ---> System.Net.Http.HttpRequestException: {\n  \"error\": {\n    \"message\": \"Invalid message key. Expected each message to be a JSON object with at most 3 keys (role, content, name). Line 1, message 1 has key system.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": null,\n    \"code\": null\n  }\n}\n\r\n   at PLang.Modules.HttpModule.Program.Request(String url, String method, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 185\r\n   at PLang.Modules.HttpModule.Program.Post(String url, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 22\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Modules.BaseRetryProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 36\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 290\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 216\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 225\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 190\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There's an issue with the JSON object you're trying to send. It should have at most 3 keys: role, content, and name. However, it seems like there's an unexpected key 'system'.\",\n\"howToFix\": \"Please review the JSON object you're trying to send. Make sure it only contains the keys 'role', 'content', and 'name'. Remove the 'system' key if it's not necessary.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There's an issue with the JSON object you're trying to send. It should have at most 3 keys: role, content, and name. However, it seems like there's an unexpected key 'system'.\",\n\"howToFix\": \"Please review the JSON object you're trying to send. Make sure it only contains the keys 'role', 'content', and 'name'. Remove the 'system' key if it's not necessary.\"\n}",
    "hash": "adfc659785b5d40e5583896597421109df01cef99974e13f22ab68293760bd45"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "set {\"messages\":\n         [{\"role\":\"system\", \"content\":\"%item.question.system.JsonSafe()%\", \n            \"role\":\"assistant\", \"content\":\"%item.question.assistant.JsonSafe()%\", \n            \"role\":\"user\", \"content\":\"%item.question.question.JsonSafe()%\", \n            \"role\":\"assistant\", content:\"%item.question.RawResponse.JsonSafe()%\"}\n        ]\n        }\n    write into %data%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SetAndWriteData\",\n\"StepDescription\":\"Set a dictionary with keys as 'messages' and values as an array of dictionaries. Each dictionary in the array represents a message with keys as 'role' and 'content' and their respective values. Then, write this data into a variable named 'data'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SetAndWriteData\",\n\"StepDescription\":\"Set a dictionary with keys as 'messages' and values as an array of dictionaries. Each dictionary in the array represents a message with keys as 'role' and 'content' and their respective values. Then, write this data into a variable named 'data'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}",
    "hash": "a3322b63d212aca2ccd2238a1b05897cfa1b628ebe0951709da1c7cbb1862356"
  },
  {
    "question": {
      "type": "PLang.Modules.LocalOrGlobalVariableModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: set {\"messages\":\n         [{\"role\":\"system\", \"content\":\"%item.question.system.JsonSafe()%\", \n            \"role\":\"assistant\", \"content\":\"%item.question.assistant.JsonSafe()%\", \n            \"role\":\"user\", \"content\":\"%item.question.question.JsonSafe()%\", \n            \"role\":\"assistant\", content:\"%item.question.RawResponse.JsonSafe()%\"}\n        ]\n        }\n    write into %data%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nOnAddVariableListener(String key, String goalName, String appName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\nOnChangeVariableListener(String key, String goalName, String appName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\nOnRemoveVariableListener(String key, String goalName, String appName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)\nSetVariable(String key, Object value)\nGetVariable(String key)\nSetStaticVariable(String key, Object value)\nGetStaticVariable(String key)\nRemoveVariable(String key)\nRemoveStaticVariable(String key)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"SetVariable\",\n    \"Inputs\": {\n      \"key\": \"data\",\n      \"value\": {\n        \"messages\": [\n          {\n            \"role\": \"system\",\n            \"content\": \"%item.question.system.JsonSafe()%\"\n          },\n          {\n            \"role\": \"assistant\",\n            \"content\": \"%item.question.assistant.JsonSafe()%\"\n          },\n          {\n            \"role\": \"user\",\n            \"content\": \"%item.question.question.JsonSafe()%\"\n          },\n          {\n            \"role\": \"assistant\",\n            \"content\": \"%item.question.RawResponse.JsonSafe()%\"\n          }\n        ]\n      }\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"SetVariable\",\n    \"Inputs\": {\n      \"key\": \"data\",\n      \"value\": {\n        \"messages\": [\n          {\n            \"role\": \"system\",\n            \"content\": \"%item.question.system.JsonSafe()%\"\n          },\n          {\n            \"role\": \"assistant\",\n            \"content\": \"%item.question.assistant.JsonSafe()%\"\n          },\n          {\n            \"role\": \"user\",\n            \"content\": \"%item.question.question.JsonSafe()%\"\n          },\n          {\n            \"role\": \"assistant\",\n            \"content\": \"%item.question.RawResponse.JsonSafe()%\"\n          }\n        ]\n      }\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "8726df1a04dbca552c0076e75095e5baa023bd50b4877dd240309feaa062437a"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: read all questions.json in path ../ and subfolders, into %files%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadMultipleTextFiles\",\n    \"Inputs\": {\n      \"folderPath\": \"../\",\n      \"filePattern\": \"questions.json\",\n      \"includeAllSubfolders\": true\n    },\n    \"Outputs\": {\n      \"List<String>\": \"%files%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadMultipleTextFiles\",\n    \"Inputs\": {\n      \"folderPath\": \"../\",\n      \"filePattern\": \"questions.json\",\n      \"includeAllSubfolders\": true\n    },\n    \"Outputs\": {\n      \"List<String>\": \"%files%\"\n    }\n  }\n}",
    "hash": "28b4f94e4c4562a6e1048ec7c948efadbba780d76f639cb140b48f834928b1e3"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: create folder 'training'",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"CreateDirectory\",\n    \"Inputs\": {\n      \"directoryPath\": \"training\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"CreateDirectory\",\n    \"Inputs\": {\n      \"directoryPath\": \"training\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "0ab936e21823a79e15a70ebb37345e25d5585ab1d92842bd3bdb1fa27f6a12f5"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: append to file 'training/%item.question.type%.jsonl', %data%, seperate by new line",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"AppendToFile\",\n    \"Inputs\": {\n      \"path\": \"training/%item.question.type%.jsonl\",\n      \"content\": \"%data%\",\n      \"seperator\": \"\\n\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"AppendToFile\",\n    \"Inputs\": {\n      \"path\": \"training/%item.question.type%.jsonl\",\n      \"content\": \"%data%\",\n      \"seperator\": \"\\n\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "1f884a5f890083a28f771147b9c2c0a71ebecd349c3c0d479e0ead274e6e61ce"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "read file training/LoopModuleResult.json into %json%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ReadJsonFile\",\n\"StepDescription\":\"Read the content of the file named 'LoopModuleResult.json' located in the 'training' directory and store it into the variable '%json%'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ReadJsonFile\",\n\"StepDescription\":\"Read the content of the file named 'LoopModuleResult.json' located in the 'training' directory and store it into the variable '%json%'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "3a2a37aadc6afb6cafb493d7f42160e1ee441af3d43272ee224ba25aba4765ea"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: read file training/LoopModuleResult.json into %json%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadFileAsStream(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\nDispose()\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadTextFile\",\n    \"Inputs\": {\n      \"path\": \"training/LoopModuleResult.json\"\n    },\n    \"Outputs\": {\n      \"String\": \"%json%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadTextFile\",\n    \"Inputs\": {\n      \"path\": \"training/LoopModuleResult.json\"\n    },\n    \"Outputs\": {\n      \"String\": \"%json%\"\n    }\n  }\n}",
    "hash": "feac5df6aabb4910a8c0f324536a2f6cc3007d594ad00b9f9c3ba8878b0502c9"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "curl https://api.openai.com/v1/fine_tuning/jobs \\\n  \\-H \"Content-Type: application/json\"\n  \\-H \"Authorization: Bearer %Settings.OpenAi%\"\n  \\-d '{\n    \"training_file\": \"%json.id%\"\n    \"model\": \"gpt-3.5-turbo\",\n  }'\n  write to %result%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"MakeAPIRequest\",\n\"StepDescription\":\"Make a HTTP request to the OpenAI API endpoint 'https://api.openai.com/v1/fine_tuning/jobs' with the method 'curl'. The request headers should include 'Content-Type: application/json' and 'Authorization: Bearer %Settings.OpenAi%'. The request body should be a JSON object with 'training_file' set to '%json.id%' and 'model' set to 'gpt-3.5-turbo'. The response of the request should be written to the variable '%result%'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HttpModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"MakeAPIRequest\",\n\"StepDescription\":\"Make a HTTP request to the OpenAI API endpoint 'https://api.openai.com/v1/fine_tuning/jobs' with the method 'curl'. The request headers should include 'Content-Type: application/json' and 'Authorization: Bearer %Settings.OpenAi%'. The request body should be a JSON object with 'training_file' set to '%json.id%' and 'model' set to 'gpt-3.5-turbo'. The response of the request should be written to the variable '%result%'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HttpModule\"\n]\n}",
    "hash": "c424bd284aa671287a10152653d3c7cac4d3b4c3b2412f85a7dc64cf23876c40"
  },
  {
    "question": {
      "type": "PLang.Modules.HttpModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: curl https://api.openai.com/v1/fine_tuning/jobs \\\n  \\-H \"Content-Type: application/json\"\n  \\-H \"Authorization: Bearer %Settings.OpenAi%\"\n  \\-d '{\n    \"training_file\": \"%json.id%\"\n    \"model\": \"gpt-3.5-turbo\",\n  }'\n  write to %result%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nPost(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nPatch(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nGet(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nOption(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nHead(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nPut(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\nDelete(String url, Object data, Boolean? signRequest = False, Dictionary`2? headers, String? encoding = utf-8, String? contentType = application/json)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nUser might use JSONPath to describe how to load variable in Output, keep the $ for the Output key.\\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Post\",\n    \"Inputs\": {\n      \"url\": \"https://api.openai.com/v1/fine_tuning/jobs\",\n      \"data\": {\n        \"training_file\": \"%json.id%\",\n        \"model\": \"gpt-3.5-turbo\"\n      },\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer %Settings.Get('OpenAi', '', 'Your OpenAI API Key')%\"\n      }\n    },\n    \"Outputs\": {\n      \"$\": \"%result%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Post\",\n    \"Inputs\": {\n      \"url\": \"https://api.openai.com/v1/fine_tuning/jobs\",\n      \"data\": {\n        \"training_file\": \"%json.id%\",\n        \"model\": \"gpt-3.5-turbo\"\n      },\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer %Settings.Get('OpenAi', '', 'Your OpenAI API Key')%\"\n      }\n    },\n    \"Outputs\": {\n      \"$\": \"%result%\"\n    }\n  }\n}",
    "hash": "5d2cc1a30fbe1f84e2da38887cca49fa208ef36e870a979dfff2a8b2cf74092b"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "write to file training/LoopModuleTrainResult.json",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WriteToFile\",\n\"StepDescription\":\"Write the content to the file named 'training/LoopModuleTrainResult.json'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WriteToFile\",\n\"StepDescription\":\"Write the content to the file named 'training/LoopModuleTrainResult.json'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "b085b5280d644eb58d2489cbc80b4065baeee8e0bd55511f3438178758d32f88"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: write to file training/LoopModuleTrainResult.json",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadFileAsStream(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\nDispose()\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "\"Action\": {\n  \"FunctionName\": \"WriteToFile\",\n  \"Inputs\": {\n    \"path\": \"training/LoopModuleTrainResult.json\",\n    \"content\": \"\"\n  },\n  \"Outputs\": {}\n}"
    },
    "answer": "\"Action\": {\n  \"FunctionName\": \"WriteToFile\",\n  \"Inputs\": {\n    \"path\": \"training/LoopModuleTrainResult.json\",\n    \"content\": \"\"\n  },\n  \"Outputs\": {}\n}",
    "hash": "c5a2f8d042dff746bfcf6d5c16b01f4b5611cfcaeaed2569fc72ed902b6beee1"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at PLang.Modules.BaseRetryBuilder.Build(GoalStep goalStep, String system, String assistant) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseBuilder.cs:line 24\r\n   at PLang.Modules.BaseBuilder.Build(GoalStep goalStep) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseBuilder.cs:line 68\r\n   at PLang.Building.Builder.BuildInstruction(Goal goal, GoalStep goalStep, String module, Int32 stepNr, String goalFolderPath, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\Builder.cs:line 380\r\n   at PLang.Building.Builder.ProcessStep(Goal goal, Int32 stepNr, String goalFolderPath, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\Builder.cs:line 358\r\n   at PLang.Building.Builder.BuildGoal(String fileName) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\Builder.cs:line 198",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"Oops, something went wrong. The system is trying to use an object that hasn't been initialized yet.\",\n\"howToFix\": \"Please ensure that all objects are properly initialized before they are used. This error is often caused by trying to use a null object. If you're not sure how to do this, you may need to consult with a developer or a technical expert.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"Oops, something went wrong. The system is trying to use an object that hasn't been initialized yet.\",\n\"howToFix\": \"Please ensure that all objects are properly initialized before they are used. This error is often caused by trying to use a null object. If you're not sure how to do this, you may need to consult with a developer or a technical expert.\"\n}",
    "hash": "c9f226af3f34fc519f027f56f5f16a979f8cd710dffd366930eb357147197c7d"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.BuilderException: Could not find function fitting your request. Did you include all parameters?\r\n   at PLang.Modules.BaseRetryBuilder.Build(GoalStep goalStep, String system, String assistant) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseBuilder.cs:line 28\r\n   at PLang.Modules.BaseBuilder.Build(GoalStep goalStep) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseBuilder.cs:line 74\r\n   at PLang.Building.Builder.BuildInstruction(Goal goal, GoalStep goalStep, String module, Int32 stepNr, String goalFolderPath, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\Builder.cs:line 380\r\n   at PLang.Building.Builder.ProcessStep(Goal goal, Int32 stepNr, String goalFolderPath, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\Builder.cs:line 358\r\n   at PLang.Building.Builder.BuildGoal(String fileName) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\Builder.cs:line 198",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"The function you're trying to use can't be found. It's possible that you may have missed including all the necessary parameters.\",\n\"howToFix\": \"Please check your function request and ensure that all required parameters are included. If the problem persists, verify that the function exists and is correctly implemented in your code.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"The function you're trying to use can't be found. It's possible that you may have missed including all the necessary parameters.\",\n\"howToFix\": \"Please check your function request and ensure that all required parameters are included. If the problem persists, verify that the function exists and is correctly implemented in your code.\"\n}",
    "hash": "6f4572086a4e03d98160c1a413b6d90a9294a10cf5f6476b4276834ec40046b5"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "write %result% to file training/LoopModuleTrainResult.json",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WriteToFile\",\n\"StepDescription\":\"Write the content of the variable %result% to a file named 'LoopModuleTrainResult.json' located in the 'training' directory.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WriteToFile\",\n\"StepDescription\":\"Write the content of the variable %result% to a file named 'LoopModuleTrainResult.json' located in the 'training' directory.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "4be8237514ff378f30aad42ee0901dc1265dbf46dc83c6552cc6e648be58c865"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: write %result% to file training/LoopModuleTrainResult.json",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadFileAsStream(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\nDispose()\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"WriteToFile\",\n    \"Inputs\": {\n      \"path\": \"training/LoopModuleTrainResult.json\",\n      \"content\": \"%result%\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"WriteToFile\",\n    \"Inputs\": {\n      \"path\": \"training/LoopModuleTrainResult.json\",\n      \"content\": \"%result%\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "b6e72bce44dc62ec28f8cc5c78777b3078292d24f4b0a47eaee4341a974c3f63"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'curl https://api.openai.com/v1/fine_tuning/jobs \\\n  \\-H \"Content-Type: application/json\"\n  \\-H \"Authorization: Bearer %Settings.OpenAi%\"\n  \\-d '{\n    \"training_file\": \"%json.id%\"\n    \"model\": \"gpt-3.5-turbo\",\n  }'\n  write to %result%' had exception\r\n ---> System.AggregateException: One or more errors occurred. ({\n  \"error\": {\n    \"message\": \"file-UuzjIs47R0UuZROIdc7eJjzs has 3 example(s), but must have at least 10 examples\",\n    \"type\": \"invalid_request_error\",\n    \"param\": null,\n    \"code\": \"invalid_n_examples\"\n  }\n})\r\n ---> System.Net.Http.HttpRequestException: {\n  \"error\": {\n    \"message\": \"file-UuzjIs47R0UuZROIdc7eJjzs has 3 example(s), but must have at least 10 examples\",\n    \"type\": \"invalid_request_error\",\n    \"param\": null,\n    \"code\": \"invalid_n_examples\"\n  }\n}\r\n   at PLang.Modules.HttpModule.Program.Request(String url, String method, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 185\r\n   at PLang.Modules.HttpModule.Program.Post(String url, Object data, Boolean signRequest, Dictionary`2 headers, String encoding, String contentType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\HttpModule\\Program.cs:line 22\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Modules.BaseRetryProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 36\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 289\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 215\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 224\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 189\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"The training file you provided has only 3 examples, but it must have at least 10 examples.\",\n\"howToFix\": \"Please update your training file to include at least 10 examples and try again.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"The training file you provided has only 3 examples, but it must have at least 10 examples.\",\n\"howToFix\": \"Please update your training file to include at least 10 examples and try again.\"\n}",
    "hash": "21a289a7dd3bed3fc8da48a21565337e61fea9d475f2a797ae3d68a5fd744d0e"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "read training/ModuleDecider.jsonl into %json%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"ReadJsonFile\",\n\"StepDescription\":\"Read the content of the file named 'training/ModuleDecider.jsonl' and store it into the variable %json%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"ReadJsonFile\",\n\"StepDescription\":\"Read the content of the file named 'training/ModuleDecider.jsonl' and store it into the variable %json%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "0f2be30c8367770296eb77289df509fde6df00a31ff7472caf2052f09f5f025e"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: read training/ModuleDecider.jsonl into %json%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadFileAsStream(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\nDispose()\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadTextFile\",\n    \"Inputs\": {\n      \"path\": \"training/ModuleDecider.jsonl\"\n    },\n    \"Outputs\": {\n      \"String\": \"%json%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"ReadTextFile\",\n    \"Inputs\": {\n      \"path\": \"training/ModuleDecider.jsonl\"\n    },\n    \"Outputs\": {\n      \"String\": \"%json%\"\n    }\n  }\n}",
    "hash": "ee8e674a7782a9d92ec032037b8be4a4ed2ade6aa91f976f82902f3a9e3db8aa"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "split %json% on new line, write to %messages%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SplitJson\",\n\"StepDescription\":\"Split the content of the variable %json% on each new line and store the result in the variable %messages%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ListDictionaryModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SplitJson\",\n\"StepDescription\":\"Split the content of the variable %json% on each new line and store the result in the variable %messages%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ListDictionaryModule\"\n]\n}",
    "hash": "e246216fdd40c770180249d677d35bd969d2637e8bddc43a76763a3f29408d02"
  },
  {
    "question": {
      "type": "PLang.Modules.ListDictionaryModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: split %json% on new line, write to %messages%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nGetList(String key, Boolean? staticVariable = False)\nGetDictionary(String key, Boolean? staticVariable = False)\nDeleteObjectFromDictionary(String key, Object? value, Boolean? staticVariable = False)\nAddToStaticList(String key, Object value, Stuff condition)\nAddToList(String key, Object value)\nAddToStaticDictionary(String key, Object value, Boolean? updateIfExists = False)\nAddToList(String key, Object value, Boolean? updateIfExists = False)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "\"Action\": {\n  \"FunctionName\": \"N/A\",\n  \"Inputs\": {},\n  \"Outputs\": {}\n}"
    },
    "answer": "\"Action\": {\n  \"FunctionName\": \"N/A\",\n  \"Inputs\": {},\n  \"Outputs\": {}\n}",
    "hash": "b1c9277a5165f084d6f9df689447082b413c0fe6edfd32d3c1068bec472584af"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "go through each %messages% call !Messages",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"LoopThroughMessages\",\n\"StepDescription\":\"Iterate through each message in the 'messages' variable and call the 'Messages' function for each one.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"LoopThroughMessages\",\n\"StepDescription\":\"Iterate through each message in the 'messages' variable and call the 'Messages' function for each one.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}",
    "hash": "e82a3467e569d37fdcb8222eff5993a47f6f5fe91a400757302e5b8baeea945f"
  },
  {
    "question": {
      "type": "LoopModule",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\n\r\nStatement should define a call goal statement, return the Call name, e.g. call DoStuff. \r\nOnly return the call name, other code will go through the list\r\nVariable: is the name of the variable\r\nYou MUST respond in JSON, scheme:\r\n{CallGoal:string, Variable:string}\r\n\r\nBe Concise.e",
      "question": "go through each %messages% call !Messages",
      "assistant": null,
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"CallGoal\": \"!Messages\", \"Variable\": \"messages\"}"
    },
    "answer": "{\"CallGoal\": \"!Messages\", \"Variable\": \"messages\"}",
    "hash": "e1a3298deb6b078b64d82a03872f8bc91e75c49222793caaee50af1a3c100caf"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "go through %item%, call !WriteOut",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"LoopThroughItems\",\n\"StepDescription\":\"Iterate through each item in the variable %item% and call the function WriteOut for each item.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"LoopThroughItems\",\n\"StepDescription\":\"Iterate through each item in the variable %item% and call the function WriteOut for each item.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}",
    "hash": "7a50d2c4f0879fcaad9f2d3a1e45eb84de385028d4384999edc8b1580317a949"
  },
  {
    "question": {
      "type": "LoopModule",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\n\r\nStatement should define a call goal statement, return the Call name, e.g. call DoStuff. \r\nOnly return the call name, other code will go through the list\r\nVariable: is the name of the variable\r\nYou MUST respond in JSON, scheme:\r\n{CallGoal:string, Variable:string}\r\n\r\nBe Concise.e",
      "question": "go through %item%, call !WriteOut",
      "assistant": null,
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"CallGoal\": \"WriteOut\", \"Variable\": \"item\"}"
    },
    "answer": "{\"CallGoal\": \"WriteOut\", \"Variable\": \"item\"}",
    "hash": "de059e216eb961a7b776a89fb46c4f4e8c604e2c557334d0c5e1b98521c9db68"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "write \"",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WriteOutput\",\n\"StepDescription\":\"Write a string to the output\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WriteOutput\",\n\"StepDescription\":\"Write a string to the output\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}",
    "hash": "31a9021f657a55fa61ab5db77d8e2182c07ce0dfaf93cd42dbfcbbd2bc5d3ca5"
  },
  {
    "question": {
      "type": "PLang.Modules.OutputModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: write \"",
      "assistant": "\r\n## functions available defined in csharp ##\r\nWrite(String? text, Boolean? writeToBuffer = False)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "\"Action\": {\n  \"FunctionName\": \"Write\",\n  \"Inputs\": {\n    \"text\": \"\\\"\",\n    \"writeToBuffer\": false\n  },\n  \"Outputs\": {}\n}"
    },
    "answer": "\"Action\": {\n  \"FunctionName\": \"Write\",\n  \"Inputs\": {\n    \"text\": \"\\\"\",\n    \"writeToBuffer\": false\n  },\n  \"Outputs\": {}\n}",
    "hash": "28c8f7c3c801242e17ec4a7e7007596556e020a2ef4a3204df6f11bbb0529eca"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "System.InvalidOperationException: Sequence contains no elements\r\n   at System.Linq.ThrowHelper.ThrowNoElementsException()\r\n   at System.Linq.Enumerable.Last[TSource](IEnumerable`1 source)\r\n   at PLang.Building.GoalParser.ParseGoalFile(String fileName) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\GoalParser.cs:line 86\r\n   at PLang.Building.Builder.BuildGoal(String fileName) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\Builder.cs:line 142",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"The operation failed because the sequence does not contain any elements.\",\n\"howToFix\": \"Please ensure that the sequence you are trying to access has at least one element. This error often occurs when you are trying to perform an operation like 'Last' on an empty sequence. Check your data source or the logic that populates the sequence.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"The operation failed because the sequence does not contain any elements.\",\n\"howToFix\": \"Please ensure that the sequence you are trying to access has at least one element. This error often occurs when you are trying to perform an operation like 'Last' on an empty sequence. Check your data source or the logic that populates the sequence.\"\n}",
    "hash": "74cb30b2f7c6642229e414caadf8c7bd3d70436abaa792b3f6039f2b83f9e1a9"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "write \"\n    %item.role%\n    %item.content\n    ====\" \n    to file output_%idx%.txt",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WriteToFile\",\n\"StepDescription\":\"Write the values of 'item.role' and 'item.content' to a file named 'output_idx.txt'. Each value is written on a new line and separated by '===='.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WriteToFile\",\n\"StepDescription\":\"Write the values of 'item.role' and 'item.content' to a file named 'output_idx.txt'. Each value is written on a new line and separated by '===='.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "4d92ca140e742d1baadc44f638d025b067489482a7a3d8f5e3edbf9216385069"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: write \"\n    %item.role%\n    %item.content\n    ====\" \n    to file output_%idx%.txt",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadFileAsStream(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\nDispose()\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"WriteToFile\",\n    \"Inputs\": {\n      \"path\": \"output_%idx%.txt\",\n      \"content\": \"\\n%item.role%\\n%item.content\\n====\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"WriteToFile\",\n    \"Inputs\": {\n      \"path\": \"output_%idx%.txt\",\n      \"content\": \"\\n%item.role%\\n%item.content\\n====\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "441a5449a2281c2a1138b9bee80284752ef014fdf9fe0d210ef4aeacaffad792"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'split %json% on new line, write to %messages%' had exception\r\n ---> System.ArgumentNullException: Value cannot be null. (Parameter 'name')\r\n   at System.ArgumentNullException.Throw(String paramName)\r\n   at System.Type.GetMethod(String name, BindingFlags bindingAttr)\r\n   at PLang.Modules.BaseProgram.GetMethodAndParameters(GenericFunction function) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 198\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 93\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 289\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 215\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 224\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 189\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred while trying to split a JSON object. The system could not find the method because a required value was null.\",\n\"howToFix\": \"Check your code to ensure that all required parameters are provided and not null. The error is specifically in the 'split %json% on new line, write to %messages%' step. Make sure the 'name' parameter is correctly assigned.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred while trying to split a JSON object. The system could not find the method because a required value was null.\",\n\"howToFix\": \"Check your code to ensure that all required parameters are provided and not null. The error is specifically in the 'split %json% on new line, write to %messages%' step. Make sure the 'name' parameter is correctly assigned.\"\n}",
    "hash": "0b07ad96581c53f827c6058781710528ad6d213ddfb4fa49f19bb1b3f190dc9d"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "code: split %json% on new line, write to %messages%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SplitJson\",\n\"StepDescription\":\"Split the content of the variable %json% at each new line and store the result in the variable %messages%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ListDictionaryModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SplitJson\",\n\"StepDescription\":\"Split the content of the variable %json% at each new line and store the result in the variable %messages%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ListDictionaryModule\"\n]\n}",
    "hash": "216bd56d17af84ddddf96c95da37090f6390092514bcf3a18847d1c662c875f5"
  },
  {
    "question": {
      "type": "PLang.Modules.ListDictionaryModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: code: split %json% on new line, write to %messages%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nGetList(String key, Boolean? staticVariable = False)\nGetDictionary(String key, Boolean? staticVariable = False)\nDeleteObjectFromDictionary(String key, Object? value, Boolean? staticVariable = False)\nAddToStaticList(String key, Object value, Stuff condition)\nAddToList(String key, Object value)\nAddToStaticDictionary(String key, Object value, Boolean? updateIfExists = False)\nAddToList(String key, Object value, Boolean? updateIfExists = False)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "\"Action\": {\n  \"FunctionName\": \"N/A\",\n  \"Inputs\": {},\n  \"Outputs\": {}\n}"
    },
    "answer": "\"Action\": {\n  \"FunctionName\": \"N/A\",\n  \"Inputs\": {},\n  \"Outputs\": {}\n}",
    "hash": "72ead97b2157c7b1d5010f0f1700ef778f02a617e5a2d195e17edd8dbb77188b"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "codemodule: split %json% on new line, write to %messages%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SplitJson\",\n\"StepDescription\":\"Split the content of the variable %json% on each new line and write the result to the variable %messages%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"CodeModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SplitJson\",\n\"StepDescription\":\"Split the content of the variable %json% on each new line and write the result to the variable %messages%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"CodeModule\"\n]\n}",
    "hash": "c20a1a61e8062a73cc0ccd6f714d6f4c14e9887389f2ba02902f2ab4f30ca34b"
  },
  {
    "question": {
      "type": "CodeModule",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The class generated should have 1 method with the static method named Process and return void. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\n\r\nThe code will not be modified after it's generated.\r\nIf condition fails, throw Exception\r\nException message should be for non-technical user\r\n\r\nName: is CamelCase name of class\r\nAssemblies: dll to reference to compile using Roslyn\r\nVariables that user expect to be written to should be provided with out parameter in the function.\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\n\r\nYou MUST respond in JSON, scheme:\r\n{Name:string, Implementation:string, Using:string[], Assemblies:string[]}\r\n\r\nBe Concise",
      "question": "codemodule: split %json% on new line, write to %messages%",
      "assistant": null,
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Name\": \"SplitJsonOnNewLine\",\n  \"Implementation\": \"public static class SplitJsonOnNewLine\\n{\\n    public static void Process(string json, out string[] messages)\\n    {\\n        if (string.IsNullOrEmpty(json))\\n        {\\n            throw new Exception(\\\"The provided JSON is empty or null.\\\");\\n        }\\n        messages = json.Split(new[] { '\\\\n' }, StringSplitOptions.None);\\n    }\\n}\",\n  \"Using\": [\"System\"],\n  \"Assemblies\": []\n}"
    },
    "answer": "{\n  \"Name\": \"SplitJsonOnNewLine\",\n  \"Implementation\": \"public static class SplitJsonOnNewLine\\n{\\n    public static void Process(string json, out string[] messages)\\n    {\\n        if (string.IsNullOrEmpty(json))\\n        {\\n            throw new Exception(\\\"The provided JSON is empty or null.\\\");\\n        }\\n        messages = json.Split(new[] { '\\\\n' }, StringSplitOptions.None);\\n    }\\n}\",\n  \"Using\": [\"System\"],\n  \"Assemblies\": []\n}",
    "hash": "5456b76dfd9f7e6315269a63343b7c77c5171a99da5a48f2f3f5242f0e057f90"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'go through each %messages% call !Messages' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'go through %item%, call !WriteOut' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'write \"\n    %item.role%\n    %item.content\n    ====\" \n    to file output_%idx%.txt' had exception\r\n ---> System.AggregateException: One or more errors occurred. (The filename, directory name, or volume label syntax is incorrect. : 'C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLangExamples\\apps\\GPT35TrainingDataBuilder\\output_{\"messages\":[{\"role\":\"system\",\"content\":\"You are provided with a statement from the user. \\r\\nThis statement is a step in a Function. \\r\\n\\r\\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N\\A\\r\\n\\r\\nvariable is defined with starting and ending %, e.g. %filePath%\\r\\n! defines a call to a function\\r\\n\\r\\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step\\r\\nStepName: Short name for step\\r\\nStepDescription: Rewrite the step as you understand it, make it detailed\\r\\nWaitForReply: Indicates if code should NOT wait, default is true\\r\\nErrorHandler: How to handle errors, default is {false, []}\\r\\nRetryHandler: If should retry the step if there is error, default is {0, 50}\\r\\nRead the description of each module, then determine which module to use\\r\\n\\r\\nYour response MUST be JSON, scheme\\r\\n{\\r\\nStepName:string,\\r\\nStepDescription:string,\\r\\nWaitForReply:bool = true,\\r\\nErrorHandler : {\\r\\n\\tIgnoreErrors:bool = false,\\r\\n\\tExcept:string[] = null\\r\\n}\\r\\nRetryHandler : {\\r\\n\\tRetryCount:number = 0\\r\\n\\tRetryDelay:number = 50\\r\\n}\\r\\nModules:[\\r\\n\\tstring,\\r\\n]\\r\\n}\\r\\nBe Concise\"},{\"role\":\"assistant\",\"content\":\"This is a list of modules you can choose from\\r\\n## list starts ##\\r\\nWindowAppModule(Native module for managing window applications)\\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\\n, TerminalModule(Terminal\\Console access to run external applications)\\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\\n, ScheduleModule(Sleep and time delay. Cron scheduler)\\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\\n, MessageModule(Send and recieve private messages using Nostr protocol)\\n, LoopModule(While, for, foreach, loops through a list)\\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\\n, LlmModule(Ask LLM a question and recieve and answer)\\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static\\global)\\n, HttpModule(Make Http request)\\n, HtmlModule(Module for handling HTML content)\\n, FileModule(Handle file system access)\\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\\n\\r\\n## list ends ##\"},{\"role\":\"user\",\"content\":\"read file ..\\HelloWorld\\.build\\cache\\questions.json into %questions%\"},{\"role\":\"assistant\",\"content\":\"{\\n\\\"StepName\\\":\\\"ReadFile\\\",\\n\\\"StepDescription\\\":\\\"Read the file located at '..\\HelloWorld\\.build\\cache\\questions.json' and store its content into the variable '%questions%'\\\",\\n\\\"WaitForReply\\\":true,\\n\\\"ErrorHandler\\\" : {\\n\\t\\\"IgnoreErrors\\\":false,\\n\\t\\\"Except\\\":null\\n},\\n\\\"RetryHandler\\\" : {\\n\\t\\\"RetryCount\\\":0,\\n\\t\\\"RetryDelay\\\":50\\n},\\n\\\"Modules\\\":[\\n\\t\\\"FileModule\\\"\\n]')\r\n ---> System.IO.IOException: The filename, directory name, or volume label syntax is incorrect. : 'C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLangExamples\\apps\\GPT35TrainingDataBuilder\\output_{\"messages\":[{\"role\":\"system\",\"content\":\"You are provided with a statement from the user. \\r\\nThis statement is a step in a Function. \\r\\n\\r\\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N\\A\\r\\n\\r\\nvariable is defined with starting and ending %, e.g. %filePath%\\r\\n! defines a call to a function\\r\\n\\r\\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step\\r\\nStepName: Short name for step\\r\\nStepDescription: Rewrite the step as you understand it, make it detailed\\r\\nWaitForReply: Indicates if code should NOT wait, default is true\\r\\nErrorHandler: How to handle errors, default is {false, []}\\r\\nRetryHandler: If should retry the step if there is error, default is {0, 50}\\r\\nRead the description of each module, then determine which module to use\\r\\n\\r\\nYour response MUST be JSON, scheme\\r\\n{\\r\\nStepName:string,\\r\\nStepDescription:string,\\r\\nWaitForReply:bool = true,\\r\\nErrorHandler : {\\r\\n\\tIgnoreErrors:bool = false,\\r\\n\\tExcept:string[] = null\\r\\n}\\r\\nRetryHandler : {\\r\\n\\tRetryCount:number = 0\\r\\n\\tRetryDelay:number = 50\\r\\n}\\r\\nModules:[\\r\\n\\tstring,\\r\\n]\\r\\n}\\r\\nBe Concise\"},{\"role\":\"assistant\",\"content\":\"This is a list of modules you can choose from\\r\\n## list starts ##\\r\\nWindowAppModule(Native module for managing window applications)\\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\\n, TerminalModule(Terminal\\Console access to run external applications)\\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\\n, ScheduleModule(Sleep and time delay. Cron scheduler)\\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\\n, MessageModule(Send and recieve private messages using Nostr protocol)\\n, LoopModule(While, for, foreach, loops through a list)\\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\\n, LlmModule(Ask LLM a question and recieve and answer)\\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static\\global)\\n, HttpModule(Make Http request)\\n, HtmlModule(Module for handling HTML content)\\n, FileModule(Handle file system access)\\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\\n\\r\\n## list ends ##\"},{\"role\":\"user\",\"content\":\"read file ..\\HelloWorld\\.build\\cache\\questions.json into %questions%\"},{\"role\":\"assistant\",\"content\":\"{\\n\\\"StepName\\\":\\\"ReadFile\\\",\\n\\\"StepDescription\\\":\\\"Read the file located at '..\\HelloWorld\\.build\\cache\\questions.json' and store its content into the variable '%questions%'\\\",\\n\\\"WaitForReply\\\":true,\\n\\\"ErrorHandler\\\" : {\\n\\t\\\"IgnoreErrors\\\":false,\\n\\t\\\"Except\\\":null\\n},\\n\\\"RetryHandler\\\" : {\\n\\t\\\"RetryCount\\\":0,\\n\\t\\\"RetryDelay\\\":50\\n},\\n\\\"Modules\\\":[\\n\\t\\\"FileModule\\\"\\n]'\r\n   at System.IO.FileSystem.CreateDirectory(String fullPath, Byte[] securityDescriptor)\r\n   at System.IO.Directory.CreateDirectory(String path)\r\n   at PLang.Modules.FileModule.Program.WriteToFile(String path, String content) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\FileModule\\Program.cs:line 86\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 289\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 215\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 224\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 189\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 289\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 215\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 224\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 189\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 289\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 215\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 224\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 189\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"userFriendlyMessage\": \"The filename, directory name, or volume label syntax is incorrect.\", \"howToFix\": \"Please check the file path you are trying to access. It seems like the file path 'C:\\\\Users\\\\Ingi Gauti\\\\source\\\\repos\\\\ingig\\\\PLangExamples\\\\apps\\\\GPT35TrainingDataBuilder\\\\output_{\\\"messages\\\":[{\\\"role\\\":\\\"system\\\",\\\"content\\\":\\\"You are provided with a statement from the user...' is not valid. Make sure the file path is correctly formatted and the file exists at the specified location.\"}"
    },
    "answer": "{\"userFriendlyMessage\": \"The filename, directory name, or volume label syntax is incorrect.\", \"howToFix\": \"Please check the file path you are trying to access. It seems like the file path 'C:\\\\Users\\\\Ingi Gauti\\\\source\\\\repos\\\\ingig\\\\PLangExamples\\\\apps\\\\GPT35TrainingDataBuilder\\\\output_{\\\"messages\\\":[{\\\"role\\\":\\\"system\\\",\\\"content\\\":\\\"You are provided with a statement from the user...' is not valid. Make sure the file path is correctly formatted and the file exists at the specified location.\"}",
    "hash": "73254cbf23ca9a40f6a96b50c36013d9b780bd5fe4f9a670ea15e516c107bf14"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "go through %item%, call !WriteOut number=%idx%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"LoopThroughItems\",\n\"StepDescription\":\"Iterate through each item in the variable %item% and call the function WriteOut with the current index as the parameter.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"LoopThroughItems\",\n\"StepDescription\":\"Iterate through each item in the variable %item% and call the function WriteOut with the current index as the parameter.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}",
    "hash": "65e58a3d8c6b2d24c96c914520183face5130d65f1e7e4f3c9ca7e27c6a35fe5"
  },
  {
    "question": {
      "type": "LoopModule",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\n\r\nStatement should define a call goal statement, return the Call name, e.g. call DoStuff. \r\nOnly return the call name, other code will go through the list\r\nVariable: is the name of the variable\r\nYou MUST respond in JSON, scheme:\r\n{CallGoal:string, Variable:string}\r\n\r\nBe Concise.e",
      "question": "go through %item%, call !WriteOut number=%idx%",
      "assistant": null,
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"CallGoal\": \"WriteOut\", \"Variable\": \"idx\"}"
    },
    "answer": "{\"CallGoal\": \"WriteOut\", \"Variable\": \"idx\"}",
    "hash": "146dda8c28e2bacf239fac4d65471780a372d47574c7f35b9f7f47c77911f69b"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "write \"\n    %item.role%\n    %item.content%\n    ====\" \n    to file output_%number%.txt",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WriteToFile\",\n\"StepDescription\":\"Write the values of 'item.role' and 'item.content' variables, followed by '====', to a file named 'output_%number%.txt'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WriteToFile\",\n\"StepDescription\":\"Write the values of 'item.role' and 'item.content' variables, followed by '====', to a file named 'output_%number%.txt'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "01b5a90e93f1aa315b309f092599003313e29e4a72a3b33e0e5261405748430d"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: write \"\n    %item.role%\n    %item.content%\n    ====\" \n    to file output_%number%.txt",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadFileAsStream(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\nDispose()\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"WriteToFile\",\n    \"Inputs\": {\n      \"path\": \"output_%number%.txt\",\n      \"content\": \"\\n%item.role%\\n%item.content%\\n====\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"WriteToFile\",\n    \"Inputs\": {\n      \"path\": \"output_%number%.txt\",\n      \"content\": \"\\n%item.role%\\n%item.content%\\n====\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "2e03cda1e5f0877403c881f5223d82227136ae7f512c6a90d88c0f988c5bda94"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'go through each %messages% call !Messages' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'go through %item%, call !WriteOut number=%idx%' had exception\r\n ---> System.InvalidCastException: Unable to cast object of type 'System.Int32' to type 'System.Collections.Generic.List`1[System.Object]'.\r\n   at PLang.Runtime.MemoryStack.Get[T](String key, Boolean staticVariable) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\MemoryStack.cs:line 217\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 22\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 289\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 215\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 224\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 189\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 289\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 215\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 224\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 189\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There was an error in the program. It seems like the program is trying to treat a number as a list of items, which is causing issues.\",\n\"howToFix\": \"Check the part of your code where you are trying to loop through '%item%'. Make sure that '%item%' is a list or collection of items, not a single integer. If '%item%' is supposed to be a list, check the part of your code where '%item%' is defined or assigned a value, and make sure it is being assigned a list or collection, not a single integer.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There was an error in the program. It seems like the program is trying to treat a number as a list of items, which is causing issues.\",\n\"howToFix\": \"Check the part of your code where you are trying to loop through '%item%'. Make sure that '%item%' is a list or collection of items, not a single integer. If '%item%' is supposed to be a list, check the part of your code where '%item%' is defined or assigned a value, and make sure it is being assigned a list or collection, not a single integer.\"\n}",
    "hash": "3e50e04a921ce6617edc275f610069efe0ad99cfde1009c357539959802faeac"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "go through each %messages% call !WriteOut",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"LoopThroughMessages\",\n\"StepDescription\":\"Iterate through each item in the 'messages' variable and call the 'WriteOut' function for each item.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"LoopThroughMessages\",\n\"StepDescription\":\"Iterate through each item in the 'messages' variable and call the 'WriteOut' function for each item.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}",
    "hash": "343f21c13dd6eee91f4333346b971857ff4e18fbc9b8d4aae8f038e63a2a7c2c"
  },
  {
    "question": {
      "type": "LoopModule",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\n\r\nStatement should define a call goal statement, return the Call name, e.g. call DoStuff. \r\nOnly return the call name, other code will go through the list\r\nVariable: is the name of the variable\r\nYou MUST respond in JSON, scheme:\r\n{CallGoal:string, Variable:string}\r\n\r\nBe Concise.e",
      "question": "go through each %messages% call !WriteOut",
      "assistant": null,
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"CallGoal\": \"!WriteOut\", \"Variable\": \"messages\"}"
    },
    "answer": "{\"CallGoal\": \"!WriteOut\", \"Variable\": \"messages\"}",
    "hash": "0bb4c784e70fbee5cbe0dc6b6691fe209478b9f14a7a7d4caa9791a7bf2f8a57"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "write \"\n    %item.role%\n    %item.content%\n    ====\" \n    to output/file output_%idx%.txt",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WriteToFile\",\n\"StepDescription\":\"Write the values of 'item.role' and 'item.content' to a file named 'output_%idx%.txt'. Each value is written on a new line and separated by '===='.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WriteToFile\",\n\"StepDescription\":\"Write the values of 'item.role' and 'item.content' to a file named 'output_%idx%.txt'. Each value is written on a new line and separated by '===='.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "62d271e3247b169bac7ad33c8e3fc6bf90fa0b23e4bc4b5c66953b91f9639e11"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: write \"\n    %item.role%\n    %item.content%\n    ====\" \n    to output/file output_%idx%.txt",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadFileAsStream(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\nDispose()\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"WriteToFile\",\n    \"Inputs\": {\n      \"path\": \"output/file output_%idx%.txt\",\n      \"content\": \"\\n%item.role%\\n%item.content%\\n====\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"WriteToFile\",\n    \"Inputs\": {\n      \"path\": \"output/file output_%idx%.txt\",\n      \"content\": \"\\n%item.role%\\n%item.content%\\n====\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "b06faf89b614976ce66d58879f320dacb0509c5dcaa06e77d083103defc3f8fd"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'go through each %messages% call !WriteOut' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'write \"\n    %item.role%\n    %item.content%\n    ====\" \n    to output/file output_%idx%.txt' had exception\r\n ---> Newtonsoft.Json.JsonReaderException: Error reading JObject from JsonReader. Path '', line 0, position 0.\r\n   at Newtonsoft.Json.Linq.JObject.Load(JsonReader reader, JsonLoadSettings settings)\r\n   at Newtonsoft.Json.Linq.JObject.Parse(String json, JsonLoadSettings settings)\r\n   at Newtonsoft.Json.Linq.JObject.Parse(String json)\r\n   at PLang.Runtime.MemoryStack.Get(String key, Type type, Boolean staticVariable) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\MemoryStack.cs:line 320\r\n   at PLang.Runtime.MemoryStack.Get[T](String key, Boolean staticVariable) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\MemoryStack.cs:line 217\r\n   at PLang.Runtime.MemoryStack.Get(String key, Boolean staticVariable) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\MemoryStack.cs:line 222\r\n   at PLang.utils.VariableHelper.GetVariables(String content, Boolean emptyIfNotFound) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Utils\\VariableHelper.cs:line 95\r\n   at PLang.utils.VariableHelper.LoadVariables(String content, Boolean emptyIfNotFound) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Utils\\VariableHelper.cs:line 51\r\n   at PLang.Modules.BaseProgram.GetMethodAndParameters(GenericFunction function) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 237\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 93\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 289\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 215\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 224\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 189\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 289\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 215\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 224\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 189\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There was an error while reading a JSON object. The error occurred at the start of the file, line 0, position 0.\",\n\"howToFix\": \"Please check your JSON file to ensure it is properly formatted and not empty. If the error persists, there might be an issue with the way the program is trying to read the file.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There was an error while reading a JSON object. The error occurred at the start of the file, line 0, position 0.\",\n\"howToFix\": \"Please check your JSON file to ensure it is properly formatted and not empty. If the error persists, there might be an issue with the way the program is trying to read the file.\"\n}",
    "hash": "ec2e1f929eee228a871742ca6bec20c6cfe01d7f36abf3c03119221ee639409b"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "go through %item.messages%, call !WriteOut",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"IterateAndWriteOut\",\n\"StepDescription\":\"Iterate through the list of messages stored in the variable %item.messages% and call the function WriteOut for each message.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"IterateAndWriteOut\",\n\"StepDescription\":\"Iterate through the list of messages stored in the variable %item.messages% and call the function WriteOut for each message.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}",
    "hash": "029f6990fb5094b385e6987b363b36680cb8452e24df15ef8b1d64f087b47260"
  },
  {
    "question": {
      "type": "LoopModule",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\n\r\nStatement should define a call goal statement, return the Call name, e.g. call DoStuff. \r\nOnly return the call name, other code will go through the list\r\nVariable: is the name of the variable\r\nYou MUST respond in JSON, scheme:\r\n{CallGoal:string, Variable:string}\r\n\r\nBe Concise.e",
      "question": "go through %item.messages%, call !WriteOut",
      "assistant": null,
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"CallGoal\": \"WriteOut\", \"Variable\": \"item.messages\"}"
    },
    "answer": "{\"CallGoal\": \"WriteOut\", \"Variable\": \"item.messages\"}",
    "hash": "e6f6cfbd527c3c323c623fbada5ad248d47337b5bd4258f462863fa40f7f735e"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "write \"\n    %item.messages.role%\n    %item.content%\n    ====\" \n    to output/file output_%idx%.txt",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"WriteToFile\",\n\"StepDescription\":\"Write the values of 'item.messages.role' and 'item.content' to a file named 'output_idx.txt'. Each value is written on a new line and separated by '===='.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"WriteToFile\",\n\"StepDescription\":\"Write the values of 'item.messages.role' and 'item.content' to a file named 'output_idx.txt'. Each value is written on a new line and separated by '===='.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}",
    "hash": "5e1d59d0e1f4eab0ef4ea2dac66ee8770d673afe02555d3939a1b7f18de9ffde"
  },
  {
    "question": {
      "type": "PLang.Modules.FileModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: write \"\n    %item.messages.role%\n    %item.content%\n    ====\" \n    to output/file output_%idx%.txt",
      "assistant": "\r\n## functions available defined in csharp ##\r\nReadBinaryFileAndConvertToBase64(String path)\nReadTextFile(String path)\nReadFileAsStream(String path)\nReadMultipleTextFiles(String folderPath, String filePattern, Boolean? includeAllSubfolders = False)\nWriteToFile(String path, String content)\nAppendToFile(String path, String content, String? seperator)\nCopyFile(String sourceFileName, String destFileName)\nDeleteFile(String fileName)\nGetFileInfo(String fileName)\nCreateDirectory(String directoryPath)\nDeleteDirectory(String directoryPath)\nDirectoryExists(String directoryPath)\nFileExists(String directoryPath)\nDispose()\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"WriteToFile\",\n    \"Inputs\": {\n      \"path\": \"output/file output_%idx%.txt\",\n      \"content\": \"\\n%item.messages.role%\\n%item.content%\\n====\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"WriteToFile\",\n    \"Inputs\": {\n      \"path\": \"output/file output_%idx%.txt\",\n      \"content\": \"\\n%item.messages.role%\\n%item.content%\\n====\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "d637c04a8d9a04debc88db18cb598692039c60d1ec6d874552b84be4410953c6"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'go through each %messages% call !Messages' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'go through %item.messages%, call !WriteOut' had exception\r\n ---> Newtonsoft.Json.JsonReaderException: Error reading JObject from JsonReader. Path '', line 0, position 0.\r\n   at Newtonsoft.Json.Linq.JObject.Load(JsonReader reader, JsonLoadSettings settings)\r\n   at Newtonsoft.Json.Linq.JObject.Parse(String json, JsonLoadSettings settings)\r\n   at Newtonsoft.Json.Linq.JObject.Parse(String json)\r\n   at PLang.Runtime.MemoryStack.Get(String key, Type type, Boolean staticVariable) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\MemoryStack.cs:line 320\r\n   at PLang.Runtime.MemoryStack.Get[T](String key, Boolean staticVariable) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\MemoryStack.cs:line 217\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 22\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 289\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 215\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 224\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 189\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 289\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 215\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 224\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 189\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 170\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There was an error while reading a JSON object. The error occurred at the start of the file.\",\n\"howToFix\": \"Please check your JSON file to ensure it is correctly formatted and not empty. If the problem persists, there might be an issue with the way the program is trying to read the file.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There was an error while reading a JSON object. The error occurred at the start of the file.\",\n\"howToFix\": \"Please check your JSON file to ensure it is correctly formatted and not empty. If the problem persists, there might be an issue with the way the program is trying to read the file.\"\n}",
    "hash": "32cfccdcbf31fa5244e65b358d185fff9865f229c98353404f5703505a9fd169"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "select id from fine_tuning where hash=%item.hash%, write to %id%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SelectIdFromDatabase\",\n\"StepDescription\":\"Select the 'id' from the 'fine_tuning' table in the database where the 'hash' column matches the value of the 'item.hash' variable. The result is then written to the 'id' variable.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SelectIdFromDatabase\",\n\"StepDescription\":\"Select the 'id' from the 'fine_tuning' table in the database where the 'hash' column matches the value of the 'item.hash' variable. The result is then written to the 'id' variable.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}",
    "hash": "2e08847104b37d63075c99211943123b51978ac4256a74e0fe6d23d26d5a51b8"
  },
  {
    "question": {
      "type": "ModuleBuilder",
      "system": "Parse the content provided by the user to determine modules in a system\r\n\r\n- (dash) defines the module\r\n/ (slash) defines a comment\r\n\r\nYou MUST response in JSON, scheme\r\n[{name:string, value:string, comment:string}]\r\n\r\nname: name of module\r\ntype: native|.net|python|javascript\r\ncomment: create description of the module\r\nBe concise ",
      "question": "\r\nNative modules:\r\n- WindowAppModule\n- WebserverModule - Start webserver, write to Body, Header, Cookie\n- TerminalModule - Terminal/Console access to run external applications\n- SeleniumModule - Run a browser instance, browse a website, input values and extract content\n- ScheduleModule - Sleep and time delay. Cron scheduler\n- PythonModule - Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\n- OutputModule - Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response\n- MessageModule - Send and recieve private messages using Nostr protocol\n- LoopModule - While, for, foreach, loops through a list\n- LocalOrGlobalVariableModule - Set & Get local and static variables. Bind events to variable.\n- LlmModule - Ask LLM a question and recieve and answer\n- ListDictionaryModule - Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\n- HttpModule - Make Http request\n- HtmlModule\n- FileModule - Handle file system access\n- EnvironmentSettingsModule - Various settings for the program, such as culture, date & number formatting\n- DbModule - Database access, select, insert, update, delete and execute raw sql. Handles transactions\n- CryptographicModule - Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token\n- ConditionalModule - Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\n- CodeModule - Generate c# code from user description. Only use if no other module is found\n- CallGoalModule - Call another Goal, when ! is prefixed, e.g. !RenameFile\n- BlockchainModule - Use blockchain, create wallet, account info, transfer money, sign message, verify signature\n\r\n",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "[\n  {\"name\": \"WindowAppModule\", \"type\": \"native\", \"comment\": \"Native module for window applications\"},\n  {\"name\": \"WebserverModule\", \"type\": \"native\", \"comment\": \"Start webserver, write to Body, Header, Cookie\"},\n  {\"name\": \"TerminalModule\", \"type\": \"native\", \"comment\": \"Terminal/Console access to run external applications\"},\n  {\"name\": \"SeleniumModule\", \"type\": \"native\", \"comment\": \"Run a browser instance, browse a website, input values and extract content\"},\n  {\"name\": \"ScheduleModule\", \"type\": \"native\", \"comment\": \"Sleep and time delay. Cron scheduler\"},\n  {\"name\": \"PythonModule\", \"type\": \"python\", \"comment\": \"Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\"},\n  {\"name\": \"OutputModule\", \"type\": \"native\", \"comment\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response\"},\n  {\"name\": \"MessageModule\", \"type\": \"native\", \"comment\": \"Send and recieve private messages using Nostr protocol\"},\n  {\"name\": \"LoopModule\", \"type\": \"native\", \"comment\": \"While, for, foreach, loops through a list\"},\n  {\"name\": \"LocalOrGlobalVariableModule\", \"type\": \"native\", \"comment\": \"Set & Get local and static variables. Bind events to variable.\"},\n  {\"name\": \"LlmModule\", \"type\": \"native\", \"comment\": \"Ask LLM a question and recieve and answer\"},\n  {\"name\": \"ListDictionaryModule\", \"type\": \"native\", \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"},\n  {\"name\": \"HttpModule\", \"type\": \"native\", \"comment\": \"Make Http request\"},\n  {\"name\": \"HtmlModule\", \"type\": \"native\", \"comment\": \"Native module for handling HTML\"},\n  {\"name\": \"FileModule\", \"type\": \"native\", \"comment\": \"Handle file system access\"},\n  {\"name\": \"EnvironmentSettingsModule\", \"type\": \"native\", \"comment\": \"Various settings for the program, such as culture, date & number formatting\"},\n  {\"name\": \"DbModule\", \"type\": \"native\", \"comment\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions\"},\n  {\"name\": \"CryptographicModule\", \"type\": \"native\", \"comment\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token\"},\n  {\"name\": \"ConditionalModule\", \"type\": \"native\", \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\"},\n  {\"name\": \"CodeModule\", \"type\": \".net\", \"comment\": \"Generate c# code from user description. Only use if no other module is found\"},\n  {\"name\": \"CallGoalModule\", \"type\": \"native\", \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"},\n  {\"name\": \"BlockchainModule\", \"type\": \"native\", \"comment\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature\"}\n]"
    },
    "answer": "[\n  {\"name\": \"WindowAppModule\", \"type\": \"native\", \"comment\": \"Native module for window applications\"},\n  {\"name\": \"WebserverModule\", \"type\": \"native\", \"comment\": \"Start webserver, write to Body, Header, Cookie\"},\n  {\"name\": \"TerminalModule\", \"type\": \"native\", \"comment\": \"Terminal/Console access to run external applications\"},\n  {\"name\": \"SeleniumModule\", \"type\": \"native\", \"comment\": \"Run a browser instance, browse a website, input values and extract content\"},\n  {\"name\": \"ScheduleModule\", \"type\": \"native\", \"comment\": \"Sleep and time delay. Cron scheduler\"},\n  {\"name\": \"PythonModule\", \"type\": \"python\", \"comment\": \"Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%\"},\n  {\"name\": \"OutputModule\", \"type\": \"native\", \"comment\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response\"},\n  {\"name\": \"MessageModule\", \"type\": \"native\", \"comment\": \"Send and recieve private messages using Nostr protocol\"},\n  {\"name\": \"LoopModule\", \"type\": \"native\", \"comment\": \"While, for, foreach, loops through a list\"},\n  {\"name\": \"LocalOrGlobalVariableModule\", \"type\": \"native\", \"comment\": \"Set & Get local and static variables. Bind events to variable.\"},\n  {\"name\": \"LlmModule\", \"type\": \"native\", \"comment\": \"Ask LLM a question and recieve and answer\"},\n  {\"name\": \"ListDictionaryModule\", \"type\": \"native\", \"comment\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global\"},\n  {\"name\": \"HttpModule\", \"type\": \"native\", \"comment\": \"Make Http request\"},\n  {\"name\": \"HtmlModule\", \"type\": \"native\", \"comment\": \"Native module for handling HTML\"},\n  {\"name\": \"FileModule\", \"type\": \"native\", \"comment\": \"Handle file system access\"},\n  {\"name\": \"EnvironmentSettingsModule\", \"type\": \"native\", \"comment\": \"Various settings for the program, such as culture, date & number formatting\"},\n  {\"name\": \"DbModule\", \"type\": \"native\", \"comment\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions\"},\n  {\"name\": \"CryptographicModule\", \"type\": \"native\", \"comment\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token\"},\n  {\"name\": \"ConditionalModule\", \"type\": \"native\", \"comment\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.\"},\n  {\"name\": \"CodeModule\", \"type\": \".net\", \"comment\": \"Generate c# code from user description. Only use if no other module is found\"},\n  {\"name\": \"CallGoalModule\", \"type\": \"native\", \"comment\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile\"},\n  {\"name\": \"BlockchainModule\", \"type\": \"native\", \"comment\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature\"}\n]",
    "hash": "f663b9f7b502a96e3c0c9feedf156388ce81a273c1f5a04ae722029684216e0f"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "select * from fine_tuning where isValid is null, write into %data%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SelectData\",\n\"StepDescription\":\"Select all records from the 'fine_tuning' table where the 'isValid' field is null and store the result into the 'data' variable\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SelectData\",\n\"StepDescription\":\"Select all records from the 'fine_tuning' table where the 'isValid' field is null and store the result into the 'data' variable\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}",
    "hash": "f53f4bff1b6e928e113bdf3d6fb89af7a1d6c2f9da805506b164f6aa9692acf9"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "System.ArgumentException: Invalid ConnectionString format for part \"data.sqlite\", no equal sign found\r\n   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)\r\n   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly)\r\n   at System.Data.SQLite.SQLiteConnection.Open()\r\n   at PLang.Modules.DbModule.Setup.CreateConnectionString(String dataSourceName, String dbType, String connectionString) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\DbModule\\Setup.cs:line 171\r\n   at PLang.Modules.DbModule.Setup.FirstRun() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\DbModule\\Setup.cs:line 149\r\n   at PLang.Modules.DbModule.Builder.Build(GoalStep goalStep) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\DbModule\\Builder.cs:line 25\r\n   at PLang.Building.Builder.BuildInstruction(Goal goal, GoalStep goalStep, String module, Int32 stepNr, String goalFolderPath, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\Builder.cs:line 380\r\n   at PLang.Building.Builder.ProcessStep(Goal goal, Int32 stepNr, String goalFolderPath, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\Builder.cs:line 358\r\n   at PLang.Building.Builder.BuildGoal(String fileName) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\Builder.cs:line 198",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There's an issue with the format of your SQLite connection string. It seems to be missing an equal sign.\",\n\"howToFix\": \"Please check your SQLite connection string in your database setup. It should be in a format like 'Data Source=data.sqlite'. Make sure there's an equal sign between the key and value.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There's an issue with the format of your SQLite connection string. It seems to be missing an equal sign.\",\n\"howToFix\": \"Please check your SQLite connection string in your database setup. It should be in a format like 'Data Source=data.sqlite'. Make sure there's an equal sign between the key and value.\"\n}",
    "hash": "af24d845719cedd61ca4eff24dc1af7ef76293c8b24714081b15acbb1975732f"
  },
  {
    "question": {
      "type": "DbModule",
      "system": "",
      "question": "How do I list all the tables and views in a database on SQLite. Data Source=data.sqlite. Give your response in JSON, scheme \\r\\n{sql:string}\\r\\nBe concise",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"sql\": \"SELECT name FROM sqlite_master WHERE type IN ('table','view');\"\n}"
    },
    "answer": "{\n\"sql\": \"SELECT name FROM sqlite_master WHERE type IN ('table','view');\"\n}",
    "hash": "61902dd436b0e03b4acf23bf5812835c346d2a77d4e0777812c4f6d8bffc1c1a"
  },
  {
    "question": {
      "type": "PLang.Modules.DbModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: select * from fine_tuning where isValid is null, write into %data%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nGetDb()\nExecute(String sql)\nBeginTransaction()\nEndTransaction()\nSelect(String sql, Dictionary`2? Parameters)\nUpdate(String sql, Dictionary`2? Parameters)\nInsert(String sql, Dictionary`2? Parameters, String? Output)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nCreate SQL statement that works with sqlite.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the user is doing insert and wants the id output, make sure to include the select id after insert in the same sql statement\r\n\r\n## table & views in db start ##\r\nnull\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Select\",\n    \"Inputs\": {\n      \"sql\": \"select * from fine_tuning where isValid is null\"\n    },\n    \"Outputs\": {\n      \"DataTable\": \"%data%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Select\",\n    \"Inputs\": {\n      \"sql\": \"select * from fine_tuning where isValid is null\"\n    },\n    \"Outputs\": {\n      \"DataTable\": \"%data%\"\n    }\n  }\n}",
    "hash": "9f9790451c5d8320d0fff35255149e917d4f389275e45e11c6578bb4333dd675"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "loop through %data% call Question",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"LoopThroughData\",\n\"StepDescription\":\"Iterate through each item in the %data% variable and call the function 'Question' for each item.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"LoopThroughData\",\n\"StepDescription\":\"Iterate through each item in the %data% variable and call the function 'Question' for each item.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}",
    "hash": "ffd75c331f5832a38076b75660f17b25bd0e61b9c5b7fd60766003ec9f944e69"
  },
  {
    "question": {
      "type": "LoopModule",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\n\r\nStatement should define a call goal statement, return the Call name, e.g. call DoStuff. \r\nOnly return the call name, other code will go through the list\r\nVariable: is the name of the variable\r\nYou MUST respond in JSON, scheme:\r\n{CallGoal:string, Variable:string}\r\n\r\nBe Concise.e",
      "question": "loop through %data% call Question",
      "assistant": null,
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"CallGoal\": \"Question\", \"Variable\": \"data\"}"
    },
    "answer": "{\"CallGoal\": \"Question\", \"Variable\": \"data\"}",
    "hash": "55f3c452da2fdaa2006f13345a9a1c6aeda2bac4273fbf891c8267f903553104"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "ask user \"\n    === System ===\n    %item.system%\n    === System ==\n    === Assistant ===\n    %item.assistant%\n    === Assistant ==\n    === Question ===\n    %item.user%\n    === Question ==\n    Are you happy with this?, Y/N\", write to %result%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"AskUser\",\n\"StepDescription\":\"Ask the user if they are happy with the system, assistant, and question details. The user's response is stored in the %result% variable.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"AskUser\",\n\"StepDescription\":\"Ask the user if they are happy with the system, assistant, and question details. The user's response is stored in the %result% variable.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}",
    "hash": "c2b5cc6b6ab016c40d74f0b071a53ec75a873eed43134b937a8b8c5b2a5e50e4"
  },
  {
    "question": {
      "type": "PLang.Modules.OutputModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: ask user \"\n    === System ===\n    %item.system%\n    === System ==\n    === Assistant ===\n    %item.assistant%\n    === Assistant ==\n    === Question ===\n    %item.user%\n    === Question ==\n    Are you happy with this?, Y/N\", write to %result%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nAsk(String text)\nWrite(String? text, Boolean? writeToBuffer = False)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Ask\",\n    \"Inputs\": {\n      \"text\": \"\\n=== System ===\\n%item.system%\\n=== System ==\\n=== Assistant ===\\n%item.assistant%\\n=== Assistant ==\\n=== Question ===\\n%item.user%\\n=== Question ==\\nAre you happy with this?, Y/N\"\n    },\n    \"Outputs\": {\n      \"String\": \"%result%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Ask\",\n    \"Inputs\": {\n      \"text\": \"\\n=== System ===\\n%item.system%\\n=== System ==\\n=== Assistant ===\\n%item.assistant%\\n=== Assistant ==\\n=== Question ===\\n%item.user%\\n=== Question ==\\nAre you happy with this?, Y/N\"\n    },\n    \"Outputs\": {\n      \"String\": \"%result%\"\n    }\n  }\n}",
    "hash": "8c149712ad380d508b8cfaa178a8905bf638ab2d536f990541e722ef8117a022"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "if %result% is \"Y\", %isValid% is true",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CheckResult\",\n\"StepDescription\":\"Check if the value of the variable 'result' is 'Y'. If it is, set the variable 'isValid' to true.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ConditionalModule\",\n\t\"LocalOrGlobalVariableModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CheckResult\",\n\"StepDescription\":\"Check if the value of the variable 'result' is 'Y'. If it is, set the variable 'isValid' to true.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ConditionalModule\",\n\t\"LocalOrGlobalVariableModule\"\n]\n}",
    "hash": "f9015735190c5d5553bdc97ffa99eeeb57b7a3746eb908b1e8da630f9758d935"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "System.ArgumentNullException: Value cannot be null. (Parameter 'path1')\r\n   at System.ArgumentNullException.Throw(String paramName)\r\n   at System.IO.Path.Combine(String path1, String path2)\r\n   at PLang.Modules.ConditionalModule.Builder.Build(GoalStep step, String error) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\ConditionalModule\\Builder.cs:line 53\r\n   at PLang.Modules.ConditionalModule.Builder.Build(GoalStep step) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\ConditionalModule\\Builder.cs:line 37\r\n   at PLang.Building.Builder.BuildInstruction(Goal goal, GoalStep goalStep, String module, Int32 stepNr, String goalFolderPath, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\Builder.cs:line 380\r\n   at PLang.Building.Builder.ProcessStep(Goal goal, Int32 stepNr, String goalFolderPath, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\Builder.cs:line 358\r\n   at PLang.Building.Builder.BuildGoal(String fileName) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\Builder.cs:line 198",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred because a required file path value was not provided.\",\n\"howToFix\": \"Please ensure that the 'path1' parameter is not null or empty. It should contain a valid file path.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred because a required file path value was not provided.\",\n\"howToFix\": \"Please ensure that the 'path1' parameter is not null or empty. It should contain a valid file path.\"\n}",
    "hash": "a4fddfd603007f7553eb7a479ad9a8c4536f7b32a1a7b2dbf8367fe198c23b5b"
  },
  {
    "question": {
      "type": "ConditionalModule",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\n\r\nName: is CamelCase name of class\r\nOutputVariable: variable name if any to write to. Replace dot(.) with underscore(_)\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\nName cannot be: \n\r\nYou MUST respond in JSON, scheme:\r\n{Name:string, Implementation:string, Using:string[], OutputVariable:string}\r\n\r\nBe Concise",
      "question": "if %result% is \"Y\", %isValid% is true",
      "assistant": null,
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Name\": \"ResultValidation\",\n  \"Implementation\": \"public static bool Process(string result, bool isValid)\\n{\\n    if (result == \\\"Y\\\")\\n    {\\n        isValid = true;\\n    }\\n    return isValid;\\n}\",\n  \"Using\": [],\n  \"OutputVariable\": \"isValid\"\n}"
    },
    "answer": "{\n  \"Name\": \"ResultValidation\",\n  \"Implementation\": \"public static bool Process(string result, bool isValid)\\n{\\n    if (result == \\\"Y\\\")\\n    {\\n        isValid = true;\\n    }\\n    return isValid;\\n}\",\n  \"Using\": [],\n  \"OutputVariable\": \"isValid\"\n}",
    "hash": "1a39e9e9ac470f24d78c963b0e81ee104107c01cca91fc60be3a165a761a4151"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "update table fine_tuning where id=%item.id%, set isValid=%isValid%, processed=now",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"UpdateFineTuningTable\",\n\"StepDescription\":\"Update the 'fine_tuning' table in the database where the 'id' is equal to the value of 'item.id'. Set the 'isValid' field to the value of 'isValid' and the 'processed' field to the current timestamp.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"UpdateFineTuningTable\",\n\"StepDescription\":\"Update the 'fine_tuning' table in the database where the 'id' is equal to the value of 'item.id'. Set the 'isValid' field to the value of 'isValid' and the 'processed' field to the current timestamp.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}",
    "hash": "4ce522be66e706fea70d969f2dfcb49ff1a45ed4ad39d015a0970983fb269e36"
  },
  {
    "question": {
      "type": "PLang.Modules.DbModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: update table fine_tuning where id=%item.id%, set isValid=%isValid%, processed=now",
      "assistant": "\r\n## functions available defined in csharp ##\r\nGetDb()\nExecute(String sql)\nBeginTransaction()\nEndTransaction()\nSelect(String sql, Dictionary`2? Parameters)\nUpdate(String sql, Dictionary`2? Parameters)\nInsert(String sql, Dictionary`2? Parameters, String? Output)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nCreate SQL statement that works with sqlite.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the user is doing insert and wants the id output, make sure to include the select id after insert in the same sql statement\r\n\r\n## table & views in db start ##\r\nnull\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Update\",\n    \"Inputs\": {\n      \"sql\": \"update table fine_tuning set isValid=@isValid, processed=datetime('now') where id=@id\",\n      \"Parameters\": {\n        \"@id\": \"%item.id%\",\n        \"@isValid\": \"%isValid%\"\n      }\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Update\",\n    \"Inputs\": {\n      \"sql\": \"update table fine_tuning set isValid=@isValid, processed=datetime('now') where id=@id\",\n      \"Parameters\": {\n        \"@id\": \"%item.id%\",\n        \"@isValid\": \"%isValid%\"\n      }\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "2b8c20be3a2a7f26a2425ce93efe6d49f69eff9615e001350f1503d8b190a849"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "select id from fine_tuning where hash=%item.hash%, write to %id%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"SelectIdFromDatabase\",\n\"StepDescription\":\"Select the 'id' from the 'fine_tuning' table in the database where the 'hash' column matches the value of the variable '%item.hash%'. The result is then written to the variable '%id%'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"SelectIdFromDatabase\",\n\"StepDescription\":\"Select the 'id' from the 'fine_tuning' table in the database where the 'hash' column matches the value of the variable '%item.hash%'. The result is then written to the variable '%id%'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}",
    "hash": "36bbc20d8bb2501b3c8a8a85916424f7ca819f07bda13d61123eb0cfce9d7390"
  },
  {
    "question": {
      "type": "PLang.Modules.DbModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: select id from fine_tuning where hash=%item.hash%, write to %id%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nGetDb()\nExecute(String sql)\nBeginTransaction()\nEndTransaction()\nSelect(String sql, Dictionary`2? Parameters)\nUpdate(String sql, Dictionary`2? Parameters)\nInsert(String sql, Dictionary`2? Parameters, String? Output)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nCreate SQL statement that works with sqlite.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the user is doing insert and wants the id output, make sure to include the select id after insert in the same sql statement\r\n\r\n## table & views in db start ##\r\nnull\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Select\",\n    \"Inputs\": {\n      \"sql\": \"select id from fine_tuning where hash=@hash\",\n      \"Parameters\": {\n        \"@hash\": \"%item.hash%\"\n      }\n    },\n    \"Outputs\": {\n      \"DataTable\": \"%id%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Select\",\n    \"Inputs\": {\n      \"sql\": \"select id from fine_tuning where hash=@hash\",\n      \"Parameters\": {\n        \"@hash\": \"%item.hash%\"\n      }\n    },\n    \"Outputs\": {\n      \"DataTable\": \"%id%\"\n    }\n  }\n}",
    "hash": "45a59173d50838c4ae2d5b16dd4fe29f796d6a2a4a0a0adb3f22c5ccdffd2abe"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "if %id% is empty then",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CheckIfIdIsEmpty\",\n\"StepDescription\":\"Check if the variable 'id' is empty\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ConditionalModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CheckIfIdIsEmpty\",\n\"StepDescription\":\"Check if the variable 'id' is empty\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"ConditionalModule\"\n]\n}",
    "hash": "d2ba4867f24b13f29f0f29b190a03d0bd322c839878472de8efafe2bc62d42b8"
  },
  {
    "question": {
      "type": "ConditionalModule",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\n\r\nName: is CamelCase name of class\r\nOutputVariable: variable name if any to write to. Replace dot(.) with underscore(_)\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\nName cannot be: \n\r\nYou MUST respond in JSON, scheme:\r\n{Name:string, Implementation:string, Using:string[], OutputVariable:string}\r\n\r\nBe Concise",
      "question": "if %id% is empty then",
      "assistant": null,
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Name\": \"CheckIfIdIsEmpty\",\n  \"Implementation\": \"public static bool Process(string id)\\n{\\n    return string.IsNullOrEmpty(id);\\n}\",\n  \"Using\": [\"System\"],\n  \"OutputVariable\": \"id\"\n}"
    },
    "answer": "{\n  \"Name\": \"CheckIfIdIsEmpty\",\n  \"Implementation\": \"public static bool Process(string id)\\n{\\n    return string.IsNullOrEmpty(id);\\n}\",\n  \"Using\": [\"System\"],\n  \"OutputVariable\": \"id\"\n}",
    "hash": "fffe5e7652aab6a33bb07b017b468ffbcd6d679b4c9d31f61e44b3be4b6e5591"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "insert into table fine_tuning, system=%item.question.system%, assistant=%item.question.assistant%,\n        user=%item.question.question%, answer=%item.question.RawResponse%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"InsertIntoDatabase\",\n\"StepDescription\":\"Insert data into the 'fine_tuning' table in the database. The data to be inserted includes the system, assistant, user, and answer fields, which are obtained from the 'item.question' object.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"InsertIntoDatabase\",\n\"StepDescription\":\"Insert data into the 'fine_tuning' table in the database. The data to be inserted includes the system, assistant, user, and answer fields, which are obtained from the 'item.question' object.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}",
    "hash": "7d05bd52feaaa46bcf56b781f132a0fbafffc4fb567c929518501db71fef62d3"
  },
  {
    "question": {
      "type": "PLang.Modules.DbModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: insert into table fine_tuning, system=%item.question.system%, assistant=%item.question.assistant%,\n        user=%item.question.question%, answer=%item.question.RawResponse%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nGetDb()\nExecute(String sql)\nBeginTransaction()\nEndTransaction()\nSelect(String sql, Dictionary`2? Parameters)\nUpdate(String sql, Dictionary`2? Parameters)\nInsert(String sql, Dictionary`2? Parameters, String? Output)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nCreate SQL statement that works with sqlite.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the user is doing insert and wants the id output, make sure to include the select id after insert in the same sql statement\r\n\r\n## table & views in db start ##\r\nnull\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Insert\",\n    \"Inputs\": {\n      \"sql\": \"insert into table fine_tuning (system, assistant, user, answer) values (@system, @assistant, @user, @answer)\",\n      \"Parameters\": {\n        \"@system\": \"%item.question.system%\",\n        \"@assistant\": \"%item.question.assistant%\",\n        \"@user\": \"%item.question.question%\",\n        \"@answer\": \"%item.question.RawResponse%\"\n      }\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Insert\",\n    \"Inputs\": {\n      \"sql\": \"insert into table fine_tuning (system, assistant, user, answer) values (@system, @assistant, @user, @answer)\",\n      \"Parameters\": {\n        \"@system\": \"%item.question.system%\",\n        \"@assistant\": \"%item.question.assistant%\",\n        \"@user\": \"%item.question.question%\",\n        \"@answer\": \"%item.question.RawResponse%\"\n      }\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "1e03961a75b2646a6774af43c12b172411da48c633e19231e55fea47d30c8e84"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "create table fine_tuning,\n    columns id(primary), hash(text, not null, unique), system(text, not null), assistant(text, not null), user(text, not null), answer(text, not null), \n        created(datetime, not null, default now), isValid(bool, null, default null), processed(datetime, null), category(enum, 'training'|'test|bad', null)",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"CreateDatabaseTable\",\n\"StepDescription\":\"Create a new table named 'fine_tuning' in the database with the following columns: 'id' (primary key), 'hash' (text, not null, unique), 'system' (text, not null), 'assistant' (text, not null), 'user' (text, not null), 'answer' (text, not null), 'created' (datetime, not null, default now), 'isValid' (bool, null, default null), 'processed' (datetime, null), and 'category' (enum, 'training'|'test|bad', null).\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"CreateDatabaseTable\",\n\"StepDescription\":\"Create a new table named 'fine_tuning' in the database with the following columns: 'id' (primary key), 'hash' (text, not null, unique), 'system' (text, not null), 'assistant' (text, not null), 'user' (text, not null), 'answer' (text, not null), 'created' (datetime, not null, default now), 'isValid' (bool, null, default null), 'processed' (datetime, null), and 'category' (enum, 'training'|'test|bad', null).\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}",
    "hash": "e092cae40621d3f77d0fcfddc95cd57d77cb466b89f608a0bd750eb2ee9ea642"
  },
  {
    "question": {
      "type": "PLang.Modules.DbModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: create table fine_tuning,\n    columns id(primary), hash(text, not null, unique), system(text, not null), assistant(text, not null), user(text, not null), answer(text, not null), \n        created(datetime, not null, default now), isValid(bool, null, default null), processed(datetime, null), category(enum, 'training'|'test|bad', null)",
      "assistant": "\r\n## functions available defined in csharp ##\r\nGetDb()\nExecute(String sql)\nBeginTransaction()\nEndTransaction()\nSelect(String sql, Dictionary`2? Parameters)\nUpdate(String sql, Dictionary`2? Parameters)\nInsert(String sql, Dictionary`2? Parameters, String? Output)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nCreate SQL statement that works with sqlite.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the user is doing insert and wants the id output, make sure to include the select id after insert in the same sql statement\r\n\r\n## table & views in db start ##\r\nnull\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Execute\",\n    \"Inputs\": {\n      \"sql\": \"CREATE TABLE fine_tuning (id INTEGER PRIMARY KEY, hash TEXT NOT NULL UNIQUE, system TEXT NOT NULL, assistant TEXT NOT NULL, user TEXT NOT NULL, answer TEXT NOT NULL, created DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, isValid BOOLEAN, processed DATETIME, category TEXT CHECK(category IN ('training', 'test', 'bad')))\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Execute\",\n    \"Inputs\": {\n      \"sql\": \"CREATE TABLE fine_tuning (id INTEGER PRIMARY KEY, hash TEXT NOT NULL UNIQUE, system TEXT NOT NULL, assistant TEXT NOT NULL, user TEXT NOT NULL, answer TEXT NOT NULL, created DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, isValid BOOLEAN, processed DATETIME, category TEXT CHECK(category IN ('training', 'test', 'bad')))\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "a89919d14dd5fd0da0885c55b1210d8d8e739816cf7266e239f795a3e147772b"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'go through each %files%, call !ProcessFile' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'go through each %item% call !ProcessQuestion' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'insert into table fine_tuning, system=%item.question.system%, assistant=%item.question.assistant%,\n        user=%item.question.question%, answer=%item.question.RawResponse%' had exception\r\n ---> System.InvalidCastException: Invalid cast from 'System.String' to 'System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.\r\n   at System.Convert.DefaultToType(IConvertible value, Type targetType, IFormatProvider provider)\r\n   at PLang.Modules.BaseProgram.GetMethodAndParameters(GenericFunction function) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 277\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 93\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 175\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There was an error while trying to convert a string to a dictionary. This is likely due to incorrect data type usage.\",\n\"howToFix\": \"Please check your code where you are trying to convert a string to a dictionary. Make sure that the string is in a correct format that can be converted to a dictionary. If the string is not in the correct format, you may need to modify the string or use a different method to convert it to a dictionary.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There was an error while trying to convert a string to a dictionary. This is likely due to incorrect data type usage.\",\n\"howToFix\": \"Please check your code where you are trying to convert a string to a dictionary. Make sure that the string is in a correct format that can be converted to a dictionary. If the string is not in the correct format, you may need to modify the string or use a different method to convert it to a dictionary.\"\n}",
    "hash": "5a5aeed2c8282dad352cf6304bb71e5a8a0674546aa5e9f967d25e17e46bd7f6"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'go through each %files%, call !ProcessFile' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'go through each %item% call !ProcessQuestion' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'select id from fine_tuning where hash=%item.hash%, write to %id%' had exception\r\n ---> System.AggregateException: One or more errors occurred. (unknown error\r\nInsufficient parameters supplied to the command)\r\n ---> code = Unknown (-1), message = System.Data.SQLite.SQLiteException (0x80004005): unknown error\r\nInsufficient parameters supplied to the command\r\n   at System.Data.SQLite.SQLiteStatement.BindParameter(Int32 index, SQLiteParameter param)\r\n   at System.Data.SQLite.SQLiteStatement.BindParameters()\r\n   at System.Data.SQLite.SQLiteCommand.BuildNextCommand()\r\n   at System.Data.SQLite.SQLiteCommand.GetStatement(Int32 index)\r\n   at System.Data.SQLite.SQLiteDataReader.NextResult()\r\n   at System.Data.SQLite.SQLiteDataReader..ctor(SQLiteCommand cmd, CommandBehavior behave)\r\n   at System.Data.SQLite.SQLiteCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SQLite.SQLiteCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418\r\n   at PLang.Modules.DbModule.Program.Select(String sql, Dictionary`2 Parameters)\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run()\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce)\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath)\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath)\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath)\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters)\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters)\r\n   at PLang.Modules.LoopModule.Program.Run()\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce)\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath)\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath)\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath)\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters)\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters)\r\n   at PLang.Modules.LoopModule.Program.Run()\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce)\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath)\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath)\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath)\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames)\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun)",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred while processing your files. It seems there are insufficient parameters supplied to the command in the database query.\",\n\"howToFix\": \"Please check your database query command and ensure that all required parameters are provided. If you are using variables in your query, make sure they are defined and have valid values.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred while processing your files. It seems there are insufficient parameters supplied to the command in the database query.\",\n\"howToFix\": \"Please check your database query command and ensure that all required parameters are provided. If you are using variables in your query, make sure they are defined and have valid values.\"\n}",
    "hash": "25c06613fcf0e43d43b613e3d55661ef5800167e37559278cb6e3d7ecc6a3075"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'go through each %files%, call !ProcessFile' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'go through each %item% call !ProcessQuestion' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'select id from fine_tuning where hash=%item.hash%, write to %id%' had exception\r\n ---> System.AggregateException: One or more errors occurred. (unknown error\r\nInsufficient parameters supplied to the command)\r\n ---> code = Unknown (-1), message = System.Data.SQLite.SQLiteException (0x80004005): unknown error\r\nInsufficient parameters supplied to the command\r\n   at System.Data.SQLite.SQLiteStatement.BindParameter(Int32 index, SQLiteParameter param)\r\n   at System.Data.SQLite.SQLiteStatement.BindParameters()\r\n   at System.Data.SQLite.SQLiteCommand.BuildNextCommand()\r\n   at System.Data.SQLite.SQLiteCommand.GetStatement(Int32 index)\r\n   at System.Data.SQLite.SQLiteDataReader.NextResult()\r\n   at System.Data.SQLite.SQLiteDataReader..ctor(SQLiteCommand cmd, CommandBehavior behave)\r\n   at System.Data.SQLite.SQLiteCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SQLite.SQLiteCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418\r\n   at PLang.Modules.DbModule.Program.Select(String sql, Dictionary`2 Parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\DbModule\\Program.cs:line 86\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 175\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred while processing your request. The system encountered an issue with insufficient parameters supplied to the command.\",\n\"howToFix\": \"Please check the command you are trying to execute. Make sure that all required parameters are provided and are in the correct format. If the problem persists, consider seeking help from a technical expert.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred while processing your request. The system encountered an issue with insufficient parameters supplied to the command.\",\n\"howToFix\": \"Please check the command you are trying to execute. Make sure that all required parameters are provided and are in the correct format. If the problem persists, consider seeking help from a technical expert.\"\n}",
    "hash": "2c7a2fa6439a0aa02ef5a55b60fbbeedf10ec25210cfa3dcb856c10c45eb9abe"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'read all questions.json in path ../ and subfolders, into %files%' had exception\r\n ---> System.ArgumentException: Object of type 'System.String' cannot be converted to type 'System.Boolean'.\r\n   at System.RuntimeType.CheckValue(Object& value, ParameterCopyBackAction& copyBack, Binder binder, CultureInfo culture, BindingFlags invokeAttr)\r\n   at System.Reflection.MethodBase.CheckArguments(Span`1 copyOfParameters, IntPtr* byrefParameters, Span`1 shouldCopyBack, ReadOnlySpan`1 parameters, RuntimeType[] sigTypes, Binder binder, CultureInfo culture, BindingFlags invokeAttr)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 101\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 175\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There's an issue with the type of data you're trying to process. The system is unable to convert a text string into a boolean value.\",\n\"howToFix\": \"Check the data you're trying to process. If you're expecting a boolean value (true or false), make sure the data you're providing matches this type. If the data is supposed to be a string, you may need to adjust the way your program is processing it.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There's an issue with the type of data you're trying to process. The system is unable to convert a text string into a boolean value.\",\n\"howToFix\": \"Check the data you're trying to process. If you're expecting a boolean value (true or false), make sure the data you're providing matches this type. If the data is supposed to be a string, you may need to adjust the way your program is processing it.\"\n}",
    "hash": "9958f6963cb06d90ff31182fc0e49915ad136c216c5b9414058064073d800755"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'go through each %files%, call !ProcessFile' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'go through each %item% call !ProcessQuestion' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'insert into table fine_tuning, system=%item.question.system%, assistant=%item.question.assistant%,\n        user=%item.question.question%, answer=%item.question.RawResponse%' had exception\r\n ---> System.AggregateException: One or more errors occurred. (SQL logic error\r\nnear \"table\": syntax error)\r\n ---> code = Error (1), message = System.Data.SQLite.SQLiteException (0x800007BF): SQL logic error\r\nnear \"table\": syntax error\r\n   at System.Data.SQLite.SQLite3.Prepare(SQLiteConnection cnn, String strSql, SQLiteStatement previous, UInt32 timeoutMS, String& strRemain)\r\n   at System.Data.SQLite.SQLiteCommand.BuildNextCommand()\r\n   at System.Data.SQLite.SQLiteCommand.GetStatement(Int32 index)\r\n   at System.Data.SQLite.SQLiteDataReader.NextResult()\r\n   at System.Data.SQLite.SQLiteDataReader..ctor(SQLiteCommand cmd, CommandBehavior behave)\r\n   at System.Data.SQLite.SQLiteCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SQLite.SQLiteCommand.ExecuteNonQuery(CommandBehavior behavior)\r\n   at System.Data.SQLite.SQLiteCommand.ExecuteNonQuery()\r\n   at System.Data.Common.DbCommand.ExecuteNonQueryAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at Dapper.SqlMapper.ExecuteImplAsync(IDbConnection cnn, CommandDefinition command, Object param) in /_/Dapper/SqlMapper.Async.cs:line 646\r\n   at PLang.Modules.DbModule.Program.Insert(String sql, Dictionary`2 Parameters, String Output) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\DbModule\\Program.cs:line 105\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 175\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There is a syntax error in your SQL command near 'table'.\",\n\"howToFix\": \"Please review your SQL command and correct the syntax. Make sure that the table name and the column names are correct and the command follows the correct SQL syntax.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There is a syntax error in your SQL command near 'table'.\",\n\"howToFix\": \"Please review your SQL command and correct the syntax. Make sure that the table name and the column names are correct and the command follows the correct SQL syntax.\"\n}",
    "hash": "1d9b7ea35b230021da1b2ebbee1bf01937c32e607b7ed1251127d89a415cd24d"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "insert into fine_tuning, system=%item.question.system%, assistant=%item.question.assistant%,\n        user=%item.question.question%, answer=%item.question.RawResponse%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"InsertIntoDatabase\",\n\"StepDescription\":\"Insert data into the 'fine_tuning' table in the database. The data to be inserted includes 'system', 'assistant', 'user', and 'answer' fields, which are obtained from the 'item.question' object.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"InsertIntoDatabase\",\n\"StepDescription\":\"Insert data into the 'fine_tuning' table in the database. The data to be inserted includes 'system', 'assistant', 'user', and 'answer' fields, which are obtained from the 'item.question' object.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}",
    "hash": "5e43d165720fc640325979bb84da214568dec58f4be6ac1160593d608585a1f0"
  },
  {
    "question": {
      "type": "PLang.Modules.DbModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: insert into fine_tuning, system=%item.question.system%, assistant=%item.question.assistant%,\n        user=%item.question.question%, answer=%item.question.RawResponse%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nGetDb()\nExecute(String sql)\nBeginTransaction()\nEndTransaction()\nSelect(String sql, Dictionary`2? Parameters)\nUpdate(String sql, Dictionary`2? Parameters)\nInsert(String sql, Dictionary`2? Parameters, String? Output)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nCreate SQL statement that works with sqlite.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the user is doing insert and wants the id output, make sure to include the select id after insert in the same sql statement\r\n\r\n## table & views in db start ##\r\n[{\"name\":\"fine_tuning\"}]\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Insert\",\n    \"Inputs\": {\n      \"sql\": \"insert into fine_tuning (system, assistant, user, answer) values (@system, @assistant, @user, @answer)\",\n      \"Parameters\": {\n        \"@system\": \"%item.question.system%\",\n        \"@assistant\": \"%item.question.assistant%\",\n        \"@user\": \"%item.question.question%\",\n        \"@answer\": \"%item.question.RawResponse%\"\n      }\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Insert\",\n    \"Inputs\": {\n      \"sql\": \"insert into fine_tuning (system, assistant, user, answer) values (@system, @assistant, @user, @answer)\",\n      \"Parameters\": {\n        \"@system\": \"%item.question.system%\",\n        \"@assistant\": \"%item.question.assistant%\",\n        \"@user\": \"%item.question.question%\",\n        \"@answer\": \"%item.question.RawResponse%\"\n      }\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "81074a0def6a3e1b13feed61cbce4dd814794f4e9c530ac6bd7e6acb3c1902d9"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'go through each %files%, call !ProcessFile' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'go through each %item% call !ProcessQuestion' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'insert into fine_tuning, system=%item.question.system%, assistant=%item.question.assistant%,\n        user=%item.question.question%, answer=%item.question.RawResponse%' had exception\r\n ---> System.AggregateException: One or more errors occurred. (constraint failed\r\nNOT NULL constraint failed: fine_tuning.hash)\r\n ---> code = Constraint (19), message = System.Data.SQLite.SQLiteException (0x800027AF): constraint failed\r\nNOT NULL constraint failed: fine_tuning.hash\r\n   at System.Data.SQLite.SQLite3.Reset(SQLiteStatement stmt)\r\n   at System.Data.SQLite.SQLite3.Step(SQLiteStatement stmt)\r\n   at System.Data.SQLite.SQLiteDataReader.NextResult()\r\n   at System.Data.SQLite.SQLiteDataReader..ctor(SQLiteCommand cmd, CommandBehavior behave)\r\n   at System.Data.SQLite.SQLiteCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SQLite.SQLiteCommand.ExecuteNonQuery(CommandBehavior behavior)\r\n   at System.Data.SQLite.SQLiteCommand.ExecuteNonQuery()\r\n   at System.Data.Common.DbCommand.ExecuteNonQueryAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at Dapper.SqlMapper.ExecuteImplAsync(IDbConnection cnn, CommandDefinition command, Object param) in /_/Dapper/SqlMapper.Async.cs:line 646\r\n   at PLang.Modules.DbModule.Program.Insert(String sql, Dictionary`2 Parameters, String Output) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\DbModule\\Program.cs:line 105\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 175\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred while processing your request. The system failed to insert data into the 'fine_tuning' table due to a NOT NULL constraint on the 'hash' field.\",\n\"howToFix\": \"Please ensure that the 'hash' field in the 'fine_tuning' table is not null before attempting to insert data. You may need to review your data source or adjust your insert statement to include a value for the 'hash' field.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred while processing your request. The system failed to insert data into the 'fine_tuning' table due to a NOT NULL constraint on the 'hash' field.\",\n\"howToFix\": \"Please ensure that the 'hash' field in the 'fine_tuning' table is not null before attempting to insert data. You may need to review your data source or adjust your insert statement to include a value for the 'hash' field.\"\n}",
    "hash": "d07fbb6cc7de3fa9e9dfb198423e907e864dbd46d85ada2f53bd890b2377088d"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "insert into fine_tuning, system=%item.question.system%, assistant=%item.question.assistant%,\n        user=%item.question.question%, answer=%item.question.RawResponse%, hash=%item.hash%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"InsertIntoDatabase\",\n\"StepDescription\":\"Insert into the 'fine_tuning' table in the database. The fields to be inserted are 'system', 'assistant', 'user', 'answer', and 'hash'. The corresponding values are %item.question.system%, %item.question.assistant%, %item.question.question%, %item.question.RawResponse%, and %item.hash% respectively.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"InsertIntoDatabase\",\n\"StepDescription\":\"Insert into the 'fine_tuning' table in the database. The fields to be inserted are 'system', 'assistant', 'user', 'answer', and 'hash'. The corresponding values are %item.question.system%, %item.question.assistant%, %item.question.question%, %item.question.RawResponse%, and %item.hash% respectively.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}",
    "hash": "ceeba4d821cb209b64a8772b370a70cbd64afdc3ea5fa030154c530e8208ae41"
  },
  {
    "question": {
      "type": "PLang.Modules.DbModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: insert into fine_tuning, system=%item.question.system%, assistant=%item.question.assistant%,\n        user=%item.question.question%, answer=%item.question.RawResponse%, hash=%item.hash%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nGetDb()\nExecute(String sql)\nBeginTransaction()\nEndTransaction()\nSelect(String sql, Dictionary`2? Parameters)\nUpdate(String sql, Dictionary`2? Parameters)\nInsert(String sql, Dictionary`2? Parameters, String? Output)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nCreate SQL statement that works with sqlite.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the user is doing insert and wants the id output, make sure to include the select id after insert in the same sql statement\r\n\r\n## table & views in db start ##\r\n[{\"name\":\"fine_tuning\"}]\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Insert\",\n    \"Inputs\": {\n      \"sql\": \"insert into fine_tuning (system, assistant, user, answer, hash) values (@system, @assistant, @user, @answer, @hash)\",\n      \"Parameters\": {\n        \"@system\": \"%item.question.system%\",\n        \"@assistant\": \"%item.question.assistant%\",\n        \"@user\": \"%item.question.question%\",\n        \"@answer\": \"%item.question.RawResponse%\",\n        \"@hash\": \"%item.hash%\"\n      },\n      \"Output\": \"\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Insert\",\n    \"Inputs\": {\n      \"sql\": \"insert into fine_tuning (system, assistant, user, answer, hash) values (@system, @assistant, @user, @answer, @hash)\",\n      \"Parameters\": {\n        \"@system\": \"%item.question.system%\",\n        \"@assistant\": \"%item.question.assistant%\",\n        \"@user\": \"%item.question.question%\",\n        \"@answer\": \"%item.question.RawResponse%\",\n        \"@hash\": \"%item.hash%\"\n      },\n      \"Output\": \"\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "362ff4bdcdff25c00b8d59dac3c22f4bdd0e8ed4a80882d0954aab0aa7913b61"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'go through each %files%, call !ProcessFile' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'go through each %item% call !ProcessQuestion' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'insert into fine_tuning, system=%item.question.system%, assistant=%item.question.assistant%,\n        user=%item.question.question%, answer=%item.question.RawResponse%, hash=%item.hash%' had exception\r\n ---> System.AggregateException: One or more errors occurred. (constraint failed\r\nUNIQUE constraint failed: fine_tuning.hash)\r\n ---> code = Constraint (19), message = System.Data.SQLite.SQLiteException (0x800027AF): constraint failed\r\nUNIQUE constraint failed: fine_tuning.hash\r\n   at System.Data.SQLite.SQLite3.Reset(SQLiteStatement stmt)\r\n   at System.Data.SQLite.SQLite3.Step(SQLiteStatement stmt)\r\n   at System.Data.SQLite.SQLiteDataReader.NextResult()\r\n   at System.Data.SQLite.SQLiteDataReader..ctor(SQLiteCommand cmd, CommandBehavior behave)\r\n   at System.Data.SQLite.SQLiteCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SQLite.SQLiteCommand.ExecuteNonQuery(CommandBehavior behavior)\r\n   at System.Data.SQLite.SQLiteCommand.ExecuteNonQuery()\r\n   at System.Data.Common.DbCommand.ExecuteNonQueryAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at Dapper.SqlMapper.ExecuteImplAsync(IDbConnection cnn, CommandDefinition command, Object param) in /_/Dapper/SqlMapper.Async.cs:line 646\r\n   at PLang.Modules.DbModule.Program.Insert(String sql, Dictionary`2 Parameters, String Output) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\DbModule\\Program.cs:line 105\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 175\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred due to a unique constraint violation in the 'fine_tuning' database. The 'hash' value you're trying to insert already exists in the database.\",\n\"howToFix\": \"Ensure that the 'hash' value you're trying to insert is unique. If you're running a loop, make sure each iteration generates a unique 'hash' value. If the 'hash' value is not supposed to be unique, you may need to adjust the database schema.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred due to a unique constraint violation in the 'fine_tuning' database. The 'hash' value you're trying to insert already exists in the database.\",\n\"howToFix\": \"Ensure that the 'hash' value you're trying to insert is unique. If you're running a loop, make sure each iteration generates a unique 'hash' value. If the 'hash' value is not supposed to be unique, you may need to adjust the database schema.\"\n}",
    "hash": "0241a647e80063cbf52ab8448ad90c221935f1cdc65b73149735a3fb8ec62116"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "insert into fine_tuning, system=%item.question.system%, assistant=%item.question.assistant%,\n        user=%item.question.question%, answer=%item.question.RawResponse%, hash=%item.hash%, type=%item.question.type%",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"InsertIntoFineTuning\",\n\"StepDescription\":\"Insert into the 'fine_tuning' table the values of system, assistant, user, answer, hash, and type from the 'item.question' object.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"InsertIntoFineTuning\",\n\"StepDescription\":\"Insert into the 'fine_tuning' table the values of system, assistant, user, answer, hash, and type from the 'item.question' object.\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}",
    "hash": "af00823e8d508823f51bfa724e5216acecccaa32c058b82825ef7bd6ba9dcb17"
  },
  {
    "question": {
      "type": "PLang.Modules.DbModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: insert into fine_tuning, system=%item.question.system%, assistant=%item.question.assistant%,\n        user=%item.question.question%, answer=%item.question.RawResponse%, hash=%item.hash%, type=%item.question.type%",
      "assistant": "\r\n## functions available defined in csharp ##\r\nGetDb()\nExecute(String sql)\nBeginTransaction()\nEndTransaction()\nSelect(String sql, Dictionary`2? Parameters)\nUpdate(String sql, Dictionary`2? Parameters)\nInsert(String sql, Dictionary`2? Parameters, String? Output)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nCreate SQL statement that works with sqlite.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the user is doing insert and wants the id output, make sure to include the select id after insert in the same sql statement\r\n\r\n## table & views in db start ##\r\n[{\"name\":\"fine_tuning\"}]\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Insert\",\n    \"Inputs\": {\n      \"sql\": \"insert into fine_tuning (system, assistant, user, answer, hash, type) values (@system, @assistant, @user, @answer, @hash, @type)\",\n      \"Parameters\": {\n        \"@system\": \"%item.question.system%\",\n        \"@assistant\": \"%item.question.assistant%\",\n        \"@user\": \"%item.question.question%\",\n        \"@answer\": \"%item.question.RawResponse%\",\n        \"@hash\": \"%item.hash%\",\n        \"@type\": \"%item.question.type%\"\n      },\n      \"Output\": \"SELECT last_insert_rowid()\"\n    },\n    \"Outputs\": {\n      \"Int32\": \"%last_insert_id%\"\n    }\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Insert\",\n    \"Inputs\": {\n      \"sql\": \"insert into fine_tuning (system, assistant, user, answer, hash, type) values (@system, @assistant, @user, @answer, @hash, @type)\",\n      \"Parameters\": {\n        \"@system\": \"%item.question.system%\",\n        \"@assistant\": \"%item.question.assistant%\",\n        \"@user\": \"%item.question.question%\",\n        \"@answer\": \"%item.question.RawResponse%\",\n        \"@hash\": \"%item.hash%\",\n        \"@type\": \"%item.question.type%\"\n      },\n      \"Output\": \"SELECT last_insert_rowid()\"\n    },\n    \"Outputs\": {\n      \"Int32\": \"%last_insert_id%\"\n    }\n  }\n}",
    "hash": "12944e190271f565b5fad33a9b2dc71b6385147c40d8ec720f1245ddf0e38734"
  },
  {
    "question": {
      "type": "ModuleDecider",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise\r\n",
      "question": "add column type(string, not null) to fine_tuning",
      "assistant": "This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Native module for handling HTML)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"StepName\":\"AddColumnToDatabase\",\n\"StepDescription\":\"Add a new column of type string and not null to the 'fine_tuning' table in the database.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}"
    },
    "answer": "{\n\"StepName\":\"AddColumnToDatabase\",\n\"StepDescription\":\"Add a new column of type string and not null to the 'fine_tuning' table in the database.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"DbModule\"\n]\n}",
    "hash": "67601a54c568d4a7b2206d0ad9136d838979424cf28a70ee653637cc0953a2a3"
  },
  {
    "question": {
      "type": "PLang.Modules.DbModule",
      "system": "\r\n\t\t\tParse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nInputs: are parameters that are required for the function and %variables% needed\r\nOutputs: Dictionary<string, string> where key is type of return, value is variable name with %, if function is not void. Use best matching defined variable, override the variable if needed\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\n\n\nYou MUST respond in JSON, scheme\r\n \"Action\": {\r\n  \"FunctionName\": \"String\",\r\n  \"Inputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  },\r\n  \"Outputs\": {\r\n    \"key\": \"String\",\r\n    \"value\": \"Object\"\r\n  }\r\n}",
      "question": "command: add column type(string, not null) to fine_tuning",
      "assistant": "\r\n## functions available defined in csharp ##\r\nGetDb()\nExecute(String sql)\nBeginTransaction()\nEndTransaction()\nSelect(String sql, Dictionary`2? Parameters)\nUpdate(String sql, Dictionary`2? Parameters)\nInsert(String sql, Dictionary`2? Parameters, String? Output)\n\r\n## functions available ends ##\r\n## defined variables ##\r\n{}\r\n## defined variables ##\nCreate SQL statement that works with sqlite.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the user is doing insert and wants the id output, make sure to include the select id after insert in the same sql statement\r\n\r\n## table & views in db start ##\r\n[{\"name\":\"fine_tuning\"}]\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Action\": {\n    \"FunctionName\": \"Execute\",\n    \"Inputs\": {\n      \"sql\": \"ALTER TABLE fine_tuning ADD COLUMN type TEXT NOT NULL\"\n    },\n    \"Outputs\": {}\n  }\n}"
    },
    "answer": "{\n  \"Action\": {\n    \"FunctionName\": \"Execute\",\n    \"Inputs\": {\n      \"sql\": \"ALTER TABLE fine_tuning ADD COLUMN type TEXT NOT NULL\"\n    },\n    \"Outputs\": {}\n  }\n}",
    "hash": "18f4e1ac0fc82b0c7168e9dab8cce7c6262293a04bea6acc4102d5834dc9888b"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'add column type(string, not null) to fine_tuning' had exception\r\n ---> System.AggregateException: One or more errors occurred. (SQL logic error\r\nCannot add a NOT NULL column with default value NULL)\r\n ---> code = Error (1), message = System.Data.SQLite.SQLiteException (0x800007BF): SQL logic error\r\nCannot add a NOT NULL column with default value NULL\r\n   at System.Data.SQLite.SQLite3.Reset(SQLiteStatement stmt)\r\n   at System.Data.SQLite.SQLite3.Step(SQLiteStatement stmt)\r\n   at System.Data.SQLite.SQLiteDataReader.NextResult()\r\n   at System.Data.SQLite.SQLiteDataReader..ctor(SQLiteCommand cmd, CommandBehavior behave)\r\n   at System.Data.SQLite.SQLiteCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SQLite.SQLiteCommand.ExecuteNonQuery(CommandBehavior behavior)\r\n   at System.Data.SQLite.SQLiteCommand.ExecuteNonQuery()\r\n   at System.Data.Common.DbCommand.ExecuteNonQueryAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at Dapper.SqlMapper.ExecuteImplAsync(IDbConnection cnn, CommandDefinition command, Object param) in /_/Dapper/SqlMapper.Async.cs:line 646\r\n   at PLang.Modules.DbModule.Program.Execute(String sql) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\DbModule\\Program.cs:line 32\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.Engine.RunSetup() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 132\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 89",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There was an error while trying to add a new column to the 'fine_tuning' table. The new column cannot be set to 'NOT NULL' with a default value of 'NULL'.\",\n\"howToFix\": \"You are trying to add a new column that is 'NOT NULL' but with a default value of 'NULL'. This is not allowed. You should either allow the new column to accept 'NULL' values or set a different default value that is not 'NULL'.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There was an error while trying to add a new column to the 'fine_tuning' table. The new column cannot be set to 'NOT NULL' with a default value of 'NULL'.\",\n\"howToFix\": \"You are trying to add a new column that is 'NOT NULL' but with a default value of 'NULL'. This is not allowed. You should either allow the new column to accept 'NULL' values or set a different default value that is not 'NULL'.\"\n}",
    "hash": "17fce9b41210294e5413616ffb4b6c70304afa35549a1557f63615dc6bd4943c"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "PLang.Exceptions.RuntimeStepException: Step 'go through each %files%, call !ProcessFile' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'go through each %item% call !ProcessQuestion' had exception\r\n ---> PLang.Exceptions.RuntimeStepException: Step 'insert into fine_tuning, system=%item.question.system%, assistant=%item.question.assistant%,\n        user=%item.question.question%, answer=%item.question.RawResponse%, hash=%item.hash%, type=%item.question.type%' had exception\r\n ---> System.AggregateException: One or more errors occurred. (Sequence contains no elements)\r\n ---> System.InvalidOperationException: Sequence contains no elements\r\n   at System.Linq.ThrowHelper.ThrowNoElementsException()\r\n   at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source)\r\n   at Dapper.SqlMapper.ThrowZeroRows(Row row) in /_/Dapper/SqlMapper.cs:line 1167\r\n   at Dapper.SqlMapper.QueryRowAsync[T](IDbConnection cnn, Row row, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 487\r\n   at PLang.Modules.DbModule.Program.Insert(String sql, Dictionary`2 Parameters, String Output) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\DbModule\\Program.cs:line 111\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Modules.BaseProgram.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseProgram.cs:line 126\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.PseudoRuntime.RunGoal(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 88\r\n   at PLang.Runtime.PseudoRuntime.Run(Dictionary`2 context, String appPath, String appName, String goalName, Dictionary`2 parameters) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\PseudoRuntime.cs:line 15\r\n   at PLang.Modules.LoopModule.Program.Run() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\LoopModule\\Program.cs:line 41\r\n   at PLang.Runtime.Engine.ProcessPrFile(Goal goal, GoalStep goalStep, String goalPath, Int32 stepIdx, Boolean runOnce) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 294\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 220\r\n   --- End of inner exception stack trace ---\r\n   at PLang.Runtime.Engine.RunGoal(Goal goal, String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 229\r\n   at PLang.Runtime.Engine.RunGoal(String goalPath) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 194\r\n   at PLang.Runtime.Engine.RunStart(List`1 goalNames) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 175\r\n   at PLang.Runtime.Engine.Run(List`1 goalsToRun) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Runtime\\Engine.cs:line 90",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred while processing your data. The sequence of data you're trying to process doesn't contain any elements.\",\n\"howToFix\": \"Please ensure that the sequence of data you're trying to process is not empty. Check your data source and make sure it's providing the expected data.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred while processing your data. The sequence of data you're trying to process doesn't contain any elements.\",\n\"howToFix\": \"Please ensure that the sequence of data you're trying to process is not empty. Check your data source and make sure it's providing the expected data.\"\n}",
    "hash": "f2e9658b3f3ba13fb7f0f770eec924e0b083df288500a476d1bbbfce0951fe24"
  }
]
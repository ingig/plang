{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"read file ../HelloWorld/.build/cache/questions.json into %questions%"},{"role":"assistant","content":"{\n\"StepName\":\"ReadFile\",\n\"StepDescription\":\"Read the file located at '../HelloWorld/.build/cache/questions.json' and store its content into the variable '%questions%'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"go through each %questions% call !ProcessQuestion"},{"role":"assistant","content":"{\n\"StepName\":\"ProcessQuestions\",\n\"StepDescription\":\"Iterate through each item in the 'questions' variable and call the 'ProcessQuestion' function for each item.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"set '{\"messages\": [{\"system\":\"%item.question.system%\", \"assistant\":\"%item.question.assistant%\", \"user\":\"%item.question.question%, assistant:%item.question.RawResponse%\"}]}'\n    into %data%"},{"role":"assistant","content":"{\n\"StepName\":\"SetData\",\n\"StepDescription\":\"Set the 'messages' object, which contains 'system', 'assistant', and 'user' properties, into the variable %data%\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"create folder 'training'"},{"role":"assistant","content":"{\n\"StepName\":\"CreateFolder\",\n\"StepDescription\":\"Create a new folder named 'training'\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"append to file 'training/%item.question.type%.jsonl'"},{"role":"assistant","content":"{\n\"StepName\":\"AppendToFile\",\n\"StepDescription\":\"Append data to the file named 'training/%item.question.type%.jsonl'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"append to file 'training/%item.question.type%.jsonl', %data%"},{"role":"assistant","content":"{\n\"StepName\":\"AppendToFile\",\n\"StepDescription\":\"Append the data stored in the variable %data% to the file named 'training/%item.question.type%.jsonl'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"set '{\"messages\": [{\"system\":\"%item.question.system.JsonSafe()%\", \"assistant\":\"%item.question.assistant.JsonSafe()%\", \"user\":\"%item.question.question.JsonSafe()%, assistant:{\n\"StepName\":\"SetData\",\n\"StepDescription\":\"Set the 'messages' object, which contains 'system', 'assistant', and 'user' properties, into the variable %data%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}\"}]}'\n    into %data%"},{"role":"assistant","content":"{\n\"StepName\":\"SetData\",\n\"StepDescription\":\"Set the 'messages' object, which contains 'system', 'assistant', and 'user' properties, into the variable %data%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"set {\"messages\":\n         [{\"system\":\"%item.question.system.JsonSafe()%\", \n            \"assistant\":\"%item.question.assistant.JsonSafe()%\", \n            \"user\":\"%item.question.question.JsonSafe()%, \n            assistant:{\n\"StepName\":\"SetAndWriteData\",\n\"StepDescription\":\"Set a dictionary with keys 'system', 'assistant', 'user', and 'assistant' with their respective values from 'item.question'. Then, write this dictionary into the variable 'data'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\",\n    \"OutputModule\"\n]\n}\"}]\n        }\n    write into %data%"},{"role":"assistant","content":"{\n\"StepName\":\"SetAndWriteData\",\n\"StepDescription\":\"Set a dictionary with keys 'system', 'assistant', 'user', and 'assistant' with their respective values from 'item.question'. Then, write this dictionary into the variable 'data'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\",\n    \"OutputModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"append to file 'training/%item.question.type%.jsonl', %data%, seperate by new line"},{"role":"assistant","content":"{\n\"StepName\":\"AppendToFile\",\n\"StepDescription\":\"Append the data stored in the variable %data% to the file named 'training/%item.question.type%.jsonl', each data entry should be separated by a new line.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"set {\"messages\":\n         [{\"system\":\"%item.question.system.JsonSafe().Replace(\"\\n\", \"\").Replace(\"\\t\", \"\") %\", \n            \"assistant\":\"%item.question.assistant.JsonSafe()%\", \n            \"user\":\"%item.question.question.JsonSafe()%, \n            assistant:{\n\"StepName\":\"SetAndWriteData\",\n\"StepDescription\":\"Set a dictionary with keys 'system', 'assistant', 'user', and 'assistant' with their respective values from 'item.question'. Then, write this dictionary into the variable 'data'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}\"}]\n        }\n    write into %data%"},{"role":"assistant","content":"{\n\"StepName\":\"SetAndWriteData\",\n\"StepDescription\":\"Set a dictionary with keys 'system', 'assistant', 'user', and 'assistant' with their respective values from 'item.question'. Then, write this dictionary into the variable 'data'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"read all questions.json in path ../ and subfolders, into %questions%"},{"role":"assistant","content":"{\n\"StepName\":\"ReadQuestions\",\n\"StepDescription\":\"Read all questions.json files from the specified path and its subfolders and store the data into the variable %questions%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"read all questions.json in path ../ and subfolders, into %files%"},{"role":"assistant","content":"{\n\"StepName\":\"ReadQuestions\",\n\"StepDescription\":\"Read all files named 'questions.json' located in the path '../' and its subfolders, and store the content into the variable '%files%'\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"go through each %files%, call !ProcessFile"},{"role":"assistant","content":"{\n\"StepName\":\"ProcessFiles\",\n\"StepDescription\":\"Iterate through each file in the 'files' variable and call the 'ProcessFile' function for each one.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"go through each %item% call !ProcessQuestion"},{"role":"assistant","content":"{\n\"StepName\":\"LoopThroughItems\",\n\"StepDescription\":\"Iterate through each item and call the function 'ProcessQuestion' for each item.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LoopModule\",\n\t\"CallGoalModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"read file training/LoopModule.jsonl, into %json%"},{"role":"assistant","content":"{\n\"StepName\":\"ReadFile\",\n\"StepDescription\":\"Read the file located at 'training/LoopModule.jsonl' and store its content into the variable %json%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"post https://api.openai.com/v1/files,"},{"role":"assistant","content":"{\n\"StepName\":\"PostRequest\",\n\"StepDescription\":\"Make a POST request to the URL https://api.openai.com/v1/files\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HttpModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\" \\\n    \\-F file=\"%json\"\n    bearer %Settings.OpenAi%\n    write to %result%"},{"role":"assistant","content":"{\n\"StepName\":\"PostToOpenAI\",\n\"StepDescription\":\"Make a POST request to the OpenAI API at 'https://api.openai.com/v1/files' with the purpose set to 'fine-tune' and the file set to the value of the variable 'json'. The bearer token for authentication is retrieved from 'Settings.OpenAi'. The response from the API is stored in the variable 'result'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HttpModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"write %result% to training/LoopModuleResult.json"},{"role":"assistant","content":"{\n\"StepName\":\"WriteToFile\",\n\"StepDescription\":\"Write the content of the variable %result% to a file named LoopModuleResult.json located in the training directory\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"read file training/LoopModule.jsonl, write into %json%"},{"role":"assistant","content":"{\n\"StepName\":\"ReadFile\",\n\"StepDescription\":\"Read the file located at 'training/LoopModule.jsonl' and store its content into the variable %json%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"FileModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\" \\\n    \\-F file=\"%json.JsonSafe()%\"\n    bearer %Settings.OpenAi%\n    write to %result%"},{"role":"assistant","content":"{\n\"StepName\":\"PostFileToOpenAI\",\n\"StepDescription\":\"Make a POST request to the OpenAI API at 'https://api.openai.com/v1/files' with the purpose set to 'fine-tune' and the file set to the safe JSON content. The request should be authorized using the bearer token from the settings. The response should be written to the 'result' variable.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HttpModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"post https://api.openai.com/v1/files,\n    \\-F purpose=\"fine-tune\"\n    \\-F file=\"%json.JsonSafe()%\"\n    bearer %Settings.OpenAi%\n    multipart\n    write to %result%"},{"role":"assistant","content":"{\n\"StepName\":\"PostFileToOpenAI\",\n\"StepDescription\":\"Make a POST request to the OpenAI API at 'https://api.openai.com/v1/files' with the purpose set to 'fine-tune' and the file set to the JSON content. The request should be authenticated using a bearer token from the settings. The request should be sent as multipart and the response should be stored in the 'result' variable.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"HttpModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Start webserver, write to Body, Header, Cookie)\n, TerminalModule(Terminal/Console access to run external applications)\n, SeleniumModule(Run a browser instance, browse a website, input values and extract content)\n, ScheduleModule(Sleep and time delay. Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Send and recieve private messages using Nostr protocol)\n, LoopModule(While, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Set & Get local and static variables. Bind events to variable.)\n, LlmModule(Ask LLM a question and recieve and answer)\n, ListDictionaryModule(Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Make Http request)\n, HtmlModule(Module for handling HTML content)\n, FileModule(Handle file system access)\n, EnvironmentSettingsModule(Various settings for the program, such as culture, date & number formatting)\n, DbModule(Database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generate c# code from user description. Only use if no other module is found)\n, CallGoalModule(Call another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Use blockchain, create wallet, account info, transfer money, sign message, verify signature)\n\r\n## list ends ##"},{"role":"user","content":"set {\"messages\":\n         [{\"role\":\"system\", \"content\":\"%item.question.system.JsonSafe()%\", \n            \"role\":\"assistant\", \"content\":\"%item.question.assistant.JsonSafe()%\", \n            \"role\":\"user\", \"content\":\"%item.question.question.JsonSafe()%\", \n            \"role\":\"assistant\", content:\"{\n\"StepName\":\"SetAndWriteData\",\n\"StepDescription\":\"Set a dictionary with keys as 'messages' and values as an array of dictionaries. Each dictionary in the array represents a message with keys as 'role' and 'content' and their respective values. Then, write this data into a variable named 'data'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}\"}\n        ]\n        }\n    write into %data%"},{"role":"assistant","content":"{\n\"StepName\":\"SetAndWriteData\",\n\"StepDescription\":\"Set a dictionary with keys as 'messages' and values as an array of dictionaries. Each dictionary in the array represents a message with keys as 'role' and 'content' and their respective values. Then, write this data into a variable named 'data'.\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Starts a webserver, writes to Body, Header, Cookie)\n, TerminalModule(Provides terminal/console access to run external applications)\n, SeleniumModule(Runs a browser instance, browses a website, inputs values and extracts content)\n, ScheduleModule(Manages sleep and time delay. Includes Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Sends and receives private messages using Nostr protocol)\n, LoopModule(Manages while, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Sets & Gets local and static variables. Binds events to variable)\n, LlmModule(Ask LLM a question and receive an answer)\n, ListDictionaryModule(Adds, updates, deletes and retrieves variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Makes Http request)\n, HtmlModule(Native module for handling HTML content)\n, FileModule(Handles file system access)\n, EnvironmentSettingsModule(Manages various settings for the program, such as culture, date & number formatting)\n, DbModule(Handles database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypts, decrypts and hashes & verify using bcrypt, compute Sha256Hash, generates & validates Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generates c# code from user description. Only use if no other module is found)\n, CallGoalModule(Calls another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Uses blockchain, creates wallet, account info, transfers money, signs message, verifies signature)\n\r\n## list ends ##"},{"role":"user","content":"set var %text% to \"Hello plang\""},{"role":"assistant","content":"{\n\"StepName\":\"SetVariable\",\n\"StepDescription\":\"Set the variable %text% to the string 'Hello plang'\",\n\"WaitForReply\":false,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"LocalOrGlobalVariableModule\"\n]\n}"}]}
{"messages":[{"role":"system","content":"You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForReply: Indicates if code should NOT wait, default is true\r\nErrorHandler: How to handle errors, default is {false, []}\r\nRetryHandler: If should retry the step if there is error, default is {0, 50}\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\r\nStepName:string,\r\nStepDescription:string,\r\nWaitForReply:bool = true,\r\nErrorHandler : {\r\n\tIgnoreErrors:bool = false,\r\n\tExcept:string[] = null\r\n}\r\nRetryHandler : {\r\n\tRetryCount:number = 0\r\n\tRetryDelay:number = 50\r\n}\r\nModules:[\r\n\tstring,\r\n]\r\n}\r\nBe Concise"},{"role":"assistant","content":"This is a list of modules you can choose from\r\n## list starts ##\r\nWindowAppModule(Native module for managing window applications)\n, WebserverModule(Starts a webserver, writes to Body, Header, Cookie)\n, TerminalModule(Provides terminal/console access to run external applications)\n, SeleniumModule(Runs a browser instance, browses a website, inputs values and extracts content)\n, ScheduleModule(Manages sleep and time delay. Includes Cron scheduler)\n, PythonModule(Runs python scripts. Parameters can be passed, parameterNames should be equal length as parameterValues. Parameter example name=%name%)\n, OutputModule(Outputs and writes out, to the UI a text or a variable)\n, MessageModule(Sends and receives private messages using Nostr protocol)\n, LoopModule(Manages while, for, foreach, loops through a list)\n, LocalOrGlobalVariableModule(Sets & Gets local and static variables. Binds events to variable)\n, LlmModule(Ask LLM a question and receive an answer)\n, ListDictionaryModule(Adds, updates, deletes and retrieves variables to and from a list or dictionary. It can be local variable or static/global)\n, HttpModule(Makes Http request)\n, HtmlModule(Native module for handling HTML content)\n, FileModule(Handles file system access)\n, EnvironmentSettingsModule(Manages various settings for the program, such as culture, date & number formatting)\n, DbModule(Handles database access, select, insert, update, delete and execute raw sql. Handles transactions)\n, CryptographicModule(Encrypts, decrypts and hashes & verify using bcrypt, compute Sha256Hash, generates & validates Bearer token)\n, ConditionalModule(Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.)\n, CodeModule(Generates c# code from user description. Only use if no other module is found)\n, CallGoalModule(Calls another Goal, when ! is prefixed, e.g. !RenameFile)\n, BlockchainModule(Uses blockchain, creates wallet, account info, transfers money, signs message, verifies signature)\n\r\n## list ends ##"},{"role":"user","content":"write out %text%"},{"role":"assistant","content":"{\n\"StepName\":\"WriteOutText\",\n\"StepDescription\":\"Write out the value of the variable %text%\",\n\"WaitForReply\":true,\n\"ErrorHandler\" : {\n\t\"IgnoreErrors\":false,\n\t\"Except\":null\n},\n\"RetryHandler\" : {\n\t\"RetryCount\":0,\n\t\"RetryDelay\":50\n},\n\"Modules\":[\n\t\"OutputModule\"\n]\n}"}]}

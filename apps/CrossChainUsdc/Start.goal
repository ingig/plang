Start
- set chain as Arbitrum Goerli
- [blockchain] Call `approve` on %fromAddress%. 
    Params: 0xeb08f243e5d3fcff26a9e38ae5520a669f4019d0, %amount%
- [blockchain] Execute `depositForBurn` on 0xeb08f243e5d3fcff26a9e38ae5520a669f4019d0. 
    abi: [{"constant":false,"inputs":[{"name":"amount","type":"uint256"},{"name":"destinationDomain","type":"uint32"},{"name":"mintRecipient","type":"bytes32"},{"name":"burnToken","type":"address"}],"name":"depositForBurn","outputs":[{"name":"_nonce","type":"uint64"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]
    Params: %amount%, 1, %destinationAddress%, 0x5425890298aed601595a70ab815c96711a31bc65
- [blockchain] list `MessageSent` event on 0xeb08f243e5d3fcff26a9e38ae5520a669f4019d0
    abi: [{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"MessageSent","type":"event"}]
    call !CheckStatus, write to %event%


CheckStatus
- hash %event.messageBytes%, write to %hash%
- GET https://iris-api-sandbox.circle.com/attestations/%hash%, write %response%
- if %response.status == "complete" then
    - [blockchain] Call `receiveMessage` on 0xa9fb1b3009dcb79e2fe346c16a604b8fa8ae0a79 with %event.receivingMessageBytes%,  %event.signature%.
- if %response.status != "complete" then
    - sleep for 5 sec
    - Call !CheckStatus
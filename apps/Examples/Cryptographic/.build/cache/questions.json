[
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "set var %text% to 'Hello PLang world'",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SetVariable\",\n\"StepDescription\": \"Set the variable 'text' to the string 'Hello PLang world'\",\n\"Modules\": [\"PLang.Modules.LocalOrGlobalVariableModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"SetVariable\",\n\"StepDescription\": \"Set the variable 'text' to the string 'Hello PLang world'\",\n\"Modules\": [\"PLang.Modules.LocalOrGlobalVariableModule\"],\n\"WaitForExecution\": true}",
    "hash": "a76444827d947dc619dd8cfe79474e9474d777ebcd738e078a8dfa4341a7aba0",
    "Created": "2023-10-04T15:19:12.1426075Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: set var %text% to 'Hello PLang world'",
      "assistant": "## functions available defined in csharp ##\r\nvoid OnCreateVariableListener(String key, String goalName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)  // goalName should be prefix with !, it can whole word only but can contain dot(.). \nvoid OnChangeVariableListener(String key, String goalName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)  // goalName should be prefix with !, it can whole word only but can contain dot(.). \nvoid OnRemoveVariableListener(String key, String goalName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)  // goalName should be prefix with !, it can whole word only but can contain dot(.). \nvoid OnCreateStaticVariableListener(String key, String goalName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)  // goalName should be prefix with !, it can whole word only but can contain dot(.). \nvoid OnChangeStaticVariableListener(String key, String goalName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)  // goalName should be prefix with !, it can whole word only but can contain dot(.). \nvoid OnRemoveStaticVariableListener(String key, String goalName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)  // goalName should be prefix with !, it can whole word only but can contain dot(.). \nvoid SetVariable(String key, Object value)  // Set local variable.. \nObject GetVariable(String key) \nvoid SetStaticVariable(String key, Object value) \nObject GetStaticVariable(String key) \nvoid RemoveVariable(String key) \nvoid RemoveStaticVariable(String key) \n\r\n## functions available ends ##\r\n## defined variables ##\r\ntext\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"SetVariable\", \n\"Parameters\": [{\"Type\": \"String\", \n\"Name\": \"key\", \n\"Value\": \"%text%\"}, \n{\"Type\": \"Object\", \n\"Name\": \"value\", \n\"Value\": \"Hello PLang world\"}]}"
    },
    "answer": "{\"FunctionName\": \"SetVariable\", \n\"Parameters\": [{\"Type\": \"String\", \n\"Name\": \"key\", \n\"Value\": \"%text%\"}, \n{\"Type\": \"Object\", \n\"Name\": \"value\", \n\"Value\": \"Hello PLang world\"}]}",
    "hash": "c1aa0d52944715f0164e76ca6a1fc103626833ffb716c8cf6fa6519b3678828d",
    "Created": "2023-10-04T15:19:17.3334482Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "encrypt %text%, write to %encryptedText%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"EncryptText\",\n\"StepDescription\": \"Encrypt the content of the variable %text% and store the result in the variable %encryptedText%\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"EncryptText\",\n\"StepDescription\": \"Encrypt the content of the variable %text% and store the result in the variable %encryptedText%\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true}",
    "hash": "f9163fc4230e5046e3c614b358fd666d26bfb578b534df829060009e874df1b6",
    "Created": "2023-10-04T15:19:24.568419Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: encrypt %text%, write to %encryptedText%",
      "assistant": "## functions available defined in csharp ##\r\nString Encrypt(Object content) \nObject Decrypt(String content) \nString HashInput(String input, Boolean? useSalt = True, String? salt, String? hashAlgorithm = keccak256)  // Used for hashing, by default it uses salt. Only provide salt if user provides it in his statement. hashAlgorithm: keccak256 | sha256. \nBoolean VerifyHashedValues(String password, String passwordHash, String? hashAlgorithm = keccak256, Boolean? useSalt = True) \nvoid SetCurrentBearerToken(String name) \nString GetBearerSecret() \nBoolean ValidateBearerToken(String token, String? issuer = PLangRuntime, String? audience = user) \nString GenerateBearerToken(String uniqueString, String? issuer = PLangRuntime, String? audience = user, Int32? expireTimeInSeconds = 604800) \n\r\n## functions available ends ##\r\n## defined variables ##\r\ntext, encryptedText\r\n## defined variables ##\nBearer token names are: Default",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Encrypt\",\n\"Parameters\": [{\"Type\": \"Object\",\n\"Name\": \"content\",\n\"Value\": \"%text%\"}],\n\"ReturnValue\": {\"Type\": \"String\",\n\"VariableName\": \"encryptedText\"}}"
    },
    "answer": "{\"FunctionName\": \"Encrypt\",\n\"Parameters\": [{\"Type\": \"Object\",\n\"Name\": \"content\",\n\"Value\": \"%text%\"}],\n\"ReturnValue\": {\"Type\": \"String\",\n\"VariableName\": \"encryptedText\"}}",
    "hash": "780f1ad9582ca41d76a402420f650b931bec1a14dc47f08a20d441465aa2ec9a",
    "Created": "2023-10-04T15:19:50.9740186Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "write out %encryptedText%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"WriteOutEncryptedText\",\n\"StepDescription\": \"This step involves writing out the value of the variable %encryptedText%.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"WriteOutEncryptedText\",\n\"StepDescription\": \"This step involves writing out the value of the variable %encryptedText%.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true}",
    "hash": "b6bd6db463ff2a52a4dbdfdf15879ccd167c11d0a6b5a88334c080b67d72d5c3",
    "Created": "2023-10-04T15:19:56.1535516Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: write out %encryptedText%",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##\r\n## defined variables ##\r\nencryptedText\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"FunctionName\": \"Write\",\n\"Parameters\": [\n    {\n    \"Type\": \"string\",\n    \"Name\": \"text\",\n    \"Value\": \"%encryptedText%\"\n    }\n],\n\"ReturnValue\": null\n}"
    },
    "answer": "{\n\"FunctionName\": \"Write\",\n\"Parameters\": [\n    {\n    \"Type\": \"string\",\n    \"Name\": \"text\",\n    \"Value\": \"%encryptedText%\"\n    }\n],\n\"ReturnValue\": null\n}",
    "hash": "1697d7d74a6a8f9836a752812c2f5d806a24d4f0a75afaac80e80958e3d68a62",
    "Created": "2023-10-04T15:20:01.9929726Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "decrypt %encryptedText%, write to %decryptedText%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"DecryptText\",\n\"StepDescription\": \"Decrypt the text stored in the variable 'encryptedText' and store the result in the variable 'decryptedText'\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 500}}"
    },
    "answer": "{\"StepName\": \"DecryptText\",\n\"StepDescription\": \"Decrypt the text stored in the variable 'encryptedText' and store the result in the variable 'decryptedText'\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 500}}",
    "hash": "90c41e41eeb3c1a7575499feab9cfe79baa95348a0e2ea5072abba6c8c641f25",
    "Created": "2023-10-04T15:20:09.5761494Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: decrypt %encryptedText%, write to %decryptedText%",
      "assistant": "## functions available defined in csharp ##\r\nString Encrypt(Object content) \nObject Decrypt(String content) \nString HashInput(String input, Boolean? useSalt = True, String? salt, String? hashAlgorithm = keccak256)  // Used for hashing, by default it uses salt. Only provide salt if user provides it in his statement. hashAlgorithm: keccak256 | sha256. \nBoolean VerifyHashedValues(String password, String passwordHash, String? hashAlgorithm = keccak256, Boolean? useSalt = True) \nvoid SetCurrentBearerToken(String name) \nString GetBearerSecret() \nBoolean ValidateBearerToken(String token, String? issuer = PLangRuntime, String? audience = user) \nString GenerateBearerToken(String uniqueString, String? issuer = PLangRuntime, String? audience = user, Int32? expireTimeInSeconds = 604800) \n\r\n## functions available ends ##\r\n## defined variables ##\r\nencryptedText, decryptedText\r\n## defined variables ##\nBearer token names are: Default",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Decrypt\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"content\",\n\"Value\": \"%encryptedText%\"}],\n\"ReturnValue\": {\"Type\": \"Object\",\n\"VariableName\": \"decryptedText\"}}"
    },
    "answer": "{\"FunctionName\": \"Decrypt\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"content\",\n\"Value\": \"%encryptedText%\"}],\n\"ReturnValue\": {\"Type\": \"Object\",\n\"VariableName\": \"decryptedText\"}}",
    "hash": "595dd213f19b7fb61e6aaa3d0b5670ba7d6130e036b23465e750b54952ee1508",
    "Created": "2023-10-04T15:20:15.4056952Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "write out %decryptedText%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"WriteOutDecryptedText\",\n\"StepDescription\": \"This step involves outputting the value of the variable 'decryptedText' to the user interface.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"ExternalServiceHandler\": null,\n\"CachingHandler\": null,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"WriteOutDecryptedText\",\n\"StepDescription\": \"This step involves outputting the value of the variable 'decryptedText' to the user interface.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"ExternalServiceHandler\": null,\n\"CachingHandler\": null,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": null}",
    "hash": "4d21f84cd4f4140b5c649b2c0a2248a0d8389d42c238c9f211dc9bfc4db9f2a2",
    "Created": "2023-10-04T15:20:24.5629954Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: write out %decryptedText%",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##\r\n## defined variables ##\r\ndecryptedText\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"text\",\n\"Value\": \"%decryptedText%\"}]}"
    },
    "answer": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"text\",\n\"Value\": \"%decryptedText%\"}]}",
    "hash": "a7b1826ca225c46e022b5e2564539428c29e344232206e30554253ec18e896c5",
    "Created": "2023-10-04T15:20:28.0652551Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "set var %password% as 'MySuperPassword123.'",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SetPassword\",\n\"StepDescription\": \"Set the variable 'password' with the value 'MySuperPassword123.'\",\n\"Modules\": [\"PLang.Modules.LocalOrGlobalVariableModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}"
    },
    "answer": "{\"StepName\": \"SetPassword\",\n\"StepDescription\": \"Set the variable 'password' with the value 'MySuperPassword123.'\",\n\"Modules\": [\"PLang.Modules.LocalOrGlobalVariableModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}",
    "hash": "f8a49aa4343bb83c300e772a0310120f622bdad4775960b8085ec4cc432f89ea",
    "Created": "2023-10-04T15:24:08.0301217Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: set var %password% as 'MySuperPassword123.'",
      "assistant": "## functions available defined in csharp ##\r\nvoid OnCreateVariableListener(String key, String goalName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)  // goalName should be prefix with !, it can whole word only but can contain dot(.). \nvoid OnChangeVariableListener(String key, String goalName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)  // goalName should be prefix with !, it can whole word only but can contain dot(.). \nvoid OnRemoveVariableListener(String key, String goalName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)  // goalName should be prefix with !, it can whole word only but can contain dot(.). \nvoid OnCreateStaticVariableListener(String key, String goalName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)  // goalName should be prefix with !, it can whole word only but can contain dot(.). \nvoid OnChangeStaticVariableListener(String key, String goalName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)  // goalName should be prefix with !, it can whole word only but can contain dot(.). \nvoid OnRemoveStaticVariableListener(String key, String goalName, Dictionary`2 parameters, Boolean? waitForResponse = True, Int32? delayWhenNotWaitingInMilliseconds = 50)  // goalName should be prefix with !, it can whole word only but can contain dot(.). \nvoid SetVariable(String key, Object value)  // Set local variable.. \nObject GetVariable(String key) \nvoid SetStaticVariable(String key, Object value) \nObject GetStaticVariable(String key) \nvoid RemoveVariable(String key) \nvoid RemoveStaticVariable(String key) \n\r\n## functions available ends ##\r\n## defined variables ##\r\npassword\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"SetVariable\", \n\"Parameters\": [{\"Type\": \"String\", \n\"Name\": \"key\", \n\"Value\": \"password\"}, \n{\"Type\": \"Object\", \n\"Name\": \"value\", \n\"Value\": \"MySuperPassword123.\"}]}"
    },
    "answer": "{\"FunctionName\": \"SetVariable\", \n\"Parameters\": [{\"Type\": \"String\", \n\"Name\": \"key\", \n\"Value\": \"password\"}, \n{\"Type\": \"Object\", \n\"Name\": \"value\", \n\"Value\": \"MySuperPassword123.\"}]}",
    "hash": "1bc44d17f6a025353c65fcf5071c09a2a234185f8771b734a8e0b4147e1ac74f",
    "Created": "2023-10-04T15:24:14.531094Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "hash %password%, write to %hashedPassword%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"HashPassword\",\n\"StepDescription\": \"Hash the value stored in the variable 'password' and store the result in the variable 'hashedPassword'\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}"
    },
    "answer": "{\"StepName\": \"HashPassword\",\n\"StepDescription\": \"Hash the value stored in the variable 'password' and store the result in the variable 'hashedPassword'\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}",
    "hash": "4f9cf7376b2b865fb6c932ffe88298efb77dbed411ecdddf9dc702d11f552c3f",
    "Created": "2023-10-04T15:24:23.2167319Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: hash %password%, write to %hashedPassword%",
      "assistant": "## functions available defined in csharp ##\r\nString Encrypt(Object content) \nObject Decrypt(String content) \nString HashInput(String input, Boolean? useSalt = True, String? salt, String? hashAlgorithm = keccak256)  // Used for hashing, by default it uses salt. Only provide salt if user provides it in his statement. hashAlgorithm: keccak256 | sha256. \nBoolean VerifyHashedValues(String password, String passwordHash, String? hashAlgorithm = keccak256, Boolean? useSalt = True) \nvoid SetCurrentBearerToken(String name) \nString GetBearerSecret() \nBoolean ValidateBearerToken(String token, String? issuer = PLangRuntime, String? audience = user) \nString GenerateBearerToken(String uniqueString, String? issuer = PLangRuntime, String? audience = user, Int32? expireTimeInSeconds = 604800) \n\r\n## functions available ends ##\r\n## defined variables ##\r\npassword, hashedPassword\r\n## defined variables ##\nBearer token names are: Default",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"FunctionName\": \"HashInput\",\n\"Parameters\": [\n    {\n        \"Type\": \"string\",\n        \"Name\": \"input\",\n        \"Value\": \"%password%\"\n    },\n    {\n        \"Type\": \"Boolean\",\n        \"Name\": \"useSalt\",\n        \"Value\": true\n    }\n],\n\"ReturnValue\": {\n    \"Type\": \"string\",\n    \"VariableName\": \"hashedPassword\"\n}\n}"
    },
    "answer": "{\n\"FunctionName\": \"HashInput\",\n\"Parameters\": [\n    {\n        \"Type\": \"string\",\n        \"Name\": \"input\",\n        \"Value\": \"%password%\"\n    },\n    {\n        \"Type\": \"Boolean\",\n        \"Name\": \"useSalt\",\n        \"Value\": true\n    }\n],\n\"ReturnValue\": {\n    \"Type\": \"string\",\n    \"VariableName\": \"hashedPassword\"\n}\n}",
    "hash": "a137cc540c95e5c7d375f6df9c1cf1c27f3fc71a76943d9f61648ee0d81e4bdb",
    "Created": "2023-10-04T15:24:33.2159961Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "validate hashed password, 'MySuperPassword123.' to %hashedPassword%, write to %isValid%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"ValidateHashedPassword\",\n\"StepDescription\": \"This step involves validating a hashed password. The plain text password 'MySuperPassword123.' is compared with the hashed password stored in the variable %hashedPassword%. The result of the validation is stored in the variable %isValid%.\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}"
    },
    "answer": "{\"StepName\": \"ValidateHashedPassword\",\n\"StepDescription\": \"This step involves validating a hashed password. The plain text password 'MySuperPassword123.' is compared with the hashed password stored in the variable %hashedPassword%. The result of the validation is stored in the variable %isValid%.\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}",
    "hash": "b1449aee81044e1a5756cab4dfe8c7f39c6c133689a751162a9756235516dc43",
    "Created": "2023-10-04T15:24:44.3759115Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: validate hashed password, 'MySuperPassword123.' to %hashedPassword%, write to %isValid%",
      "assistant": "## functions available defined in csharp ##\r\nString Encrypt(Object content) \nObject Decrypt(String content) \nString HashInput(String input, Boolean? useSalt = True, String? salt, String? hashAlgorithm = keccak256)  // Used for hashing, by default it uses salt. Only provide salt if user provides it in his statement. hashAlgorithm: keccak256 | sha256. \nBoolean VerifyHashedValues(String password, String passwordHash, String? hashAlgorithm = keccak256, Boolean? useSalt = True) \nvoid SetCurrentBearerToken(String name) \nString GetBearerSecret() \nBoolean ValidateBearerToken(String token, String? issuer = PLangRuntime, String? audience = user) \nString GenerateBearerToken(String uniqueString, String? issuer = PLangRuntime, String? audience = user, Int32? expireTimeInSeconds = 604800) \n\r\n## functions available ends ##\r\n## defined variables ##\r\nhashedPassword, isValid\r\n## defined variables ##\nBearer token names are: Default",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"VerifyHashedValues\",\n\"Parameters\": [\n    {\"Type\": \"String\", \"Name\": \"password\", \"Value\": \"MySuperPassword123.\"},\n    {\"Type\": \"String\", \"Name\": \"passwordHash\", \"Value\": \"%hashedPassword%\"},\n    {\"Type\": \"String\", \"Name\": \"hashAlgorithm\", \"Value\": \"keccak256\"},\n    {\"Type\": \"Boolean\", \"Name\": \"useSalt\", \"Value\": true}\n],\n\"ReturnValue\": {\"Type\": \"Boolean\", \"VariableName\": \"isValid\"}}"
    },
    "answer": "{\"FunctionName\": \"VerifyHashedValues\",\n\"Parameters\": [\n    {\"Type\": \"String\", \"Name\": \"password\", \"Value\": \"MySuperPassword123.\"},\n    {\"Type\": \"String\", \"Name\": \"passwordHash\", \"Value\": \"%hashedPassword%\"},\n    {\"Type\": \"String\", \"Name\": \"hashAlgorithm\", \"Value\": \"keccak256\"},\n    {\"Type\": \"Boolean\", \"Name\": \"useSalt\", \"Value\": true}\n],\n\"ReturnValue\": {\"Type\": \"Boolean\", \"VariableName\": \"isValid\"}}",
    "hash": "f27ca248856a2ced5c580bb0b6d5e1f70ba548e7ee146d49fd81005e8cf56dfe",
    "Created": "2023-10-04T15:24:56.1371679Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "if %isValid%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CheckIsValid\",\n\"StepDescription\": \"Check if the variable 'isValid' is true or false\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}"
    },
    "answer": "{\"StepName\": \"CheckIsValid\",\n\"StepDescription\": \"Check if the variable 'isValid' is true or false\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}",
    "hash": "710b53a517856354b5de5a6d77bbc44b6453b2c32855f929d980a9cced00842a",
    "Created": "2023-10-04T15:25:05.9971204Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\nALWAYS use long or long? instead of int or int?\r\nName: is CamelCase name of class\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\n\r\n\r\nBe Concise\n\nYou MUST respond in JSON, scheme:\r\n {\"Name\": string,\n\"Implementation\": string,\n\"Using\": string[],\n\"Assemblies\": string[]}",
      "question": "command: if %isValid%",
      "assistant": "## defined variables ##\r\nisValid\r\n## defined variables ##\nName cannot be: \n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Name\": \"IsValidCheck\",\n  \"Implementation\": \"public static class IsValidCheck\\n{\\n    public static bool Process(long? isValid)\\n    {\\n        if (isValid != null)\\n        {\\n            return true;\\n        }\\n        return false;\\n    }\\n}\",\n  \"Using\": [\"System\"],\n  \"Assemblies\": []\n}"
    },
    "answer": "{\n  \"Name\": \"IsValidCheck\",\n  \"Implementation\": \"public static class IsValidCheck\\n{\\n    public static bool Process(long? isValid)\\n    {\\n        if (isValid != null)\\n        {\\n            return true;\\n        }\\n        return false;\\n    }\\n}\",\n  \"Using\": [\"System\"],\n  \"Assemblies\": []\n}",
    "hash": "636fb0278aae531b6e016e0d550b2059026cf6978ff73c070b4a8a6b558c51ef",
    "Created": "2023-10-04T15:25:12.9563309Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "write out 'hash is valid'",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"OutputHashValidation\",\n\"StepDescription\": \"Write out the string 'hash is valid' to the user interface.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"OutputHashValidation\",\n\"StepDescription\": \"Write out the string 'hash is valid' to the user interface.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true}",
    "hash": "be2f7c2f1f0a332e3b445057a1ad590549e0a19e7d03295ae890ba2b656867b4",
    "Created": "2023-10-04T15:25:18.8335028Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: write out 'hash is valid'",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"text\",\n\"Value\": \"hash is valid\"}]}"
    },
    "answer": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"text\",\n\"Value\": \"hash is valid\"}]}",
    "hash": "fc77fe205514e8cf3b56a52e21640e032e3716fcdf48a225c706d64dc3790b2c",
    "Created": "2023-10-04T15:25:23.2465711Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "hash  %password%, write to %hashedPassword%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"HashPassword\",\n\"StepDescription\": \"Hash the value stored in the variable 'password' and store the result in the variable 'hashedPassword'\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}"
    },
    "answer": "{\"StepName\": \"HashPassword\",\n\"StepDescription\": \"Hash the value stored in the variable 'password' and store the result in the variable 'hashedPassword'\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}",
    "hash": "055ff131c81dea2cbca20baf104e01fa831857becb9b4bce9e0760bc1aa45a79",
    "Created": "2023-10-04T15:28:18.6692196Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: hash  %password%, write to %hashedPassword%",
      "assistant": "## functions available defined in csharp ##\r\nString Encrypt(Object content) \nObject Decrypt(String content) \nString HashInput(String input, Boolean? useSalt = True, String? salt, String? hashAlgorithm = keccak256)  // Used for hashing, by default it uses salt. Only provide salt if user provides it in his statement. hashAlgorithm: keccak256 | sha256 | bcrypt(when salt). \nBoolean VerifyHashedValues(String password, String passwordHash, String? hashAlgorithm = keccak256, Boolean? useSalt = True)  // Used to verify hash, by default it uses salt. hashAlgorithm: keccak256 | sha256 | bcrypt(when salt). \nvoid SetCurrentBearerToken(String name) \nString GetBearerSecret() \nBoolean ValidateBearerToken(String token, String? issuer = PLangRuntime, String? audience = user) \nString GenerateBearerToken(String uniqueString, String? issuer = PLangRuntime, String? audience = user, Int32? expireTimeInSeconds = 604800) \n\r\n## functions available ends ##\r\n## defined variables ##\r\npassword, hashedPassword\r\n## defined variables ##\nBearer token names are: Default",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"HashInput\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"input\",\n\"Value\": \"%password%\"},\n{\"Type\": \"Boolean\",\n\"Name\": \"useSalt\",\n\"Value\": true}],\n\"ReturnValue\": {\"Type\": \"String\",\n\"VariableName\": \"hashedPassword\"}}"
    },
    "answer": "{\"FunctionName\": \"HashInput\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"input\",\n\"Value\": \"%password%\"},\n{\"Type\": \"Boolean\",\n\"Name\": \"useSalt\",\n\"Value\": true}],\n\"ReturnValue\": {\"Type\": \"String\",\n\"VariableName\": \"hashedPassword\"}}",
    "hash": "865c13b9297ab2ba2f43d4fe3f6833d90864be7d2329185baafc3f4f6c17d307",
    "Created": "2023-10-04T15:28:25.776771Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "validate  hashed password, 'MySuperPassword123.' to %hashedPassword%, write to %isValid%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"ValidateHashedPassword\",\n\"StepDescription\": \"This step is to validate a hashed password. The plain text password 'MySuperPassword123.' is compared with the hashed password stored in the variable %hashedPassword%. The result of the validation is stored in the variable %isValid%.\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}"
    },
    "answer": "{\"StepName\": \"ValidateHashedPassword\",\n\"StepDescription\": \"This step is to validate a hashed password. The plain text password 'MySuperPassword123.' is compared with the hashed password stored in the variable %hashedPassword%. The result of the validation is stored in the variable %isValid%.\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}",
    "hash": "7cbbe00325771ffc05d31a6498f529466e6a016179b8e6ce4b181fe493fcdd17",
    "Created": "2023-10-04T15:28:42.1223892Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: validate  hashed password, 'MySuperPassword123.' to %hashedPassword%, write to %isValid%",
      "assistant": "## functions available defined in csharp ##\r\nString Encrypt(Object content) \nObject Decrypt(String content) \nString HashInput(String input, Boolean? useSalt = True, String? salt, String? hashAlgorithm = keccak256)  // Used for hashing, by default it uses salt. Only provide salt if user provides it in his statement. hashAlgorithm: keccak256 | sha256 | bcrypt(when salt). \nBoolean VerifyHashedValues(String password, String passwordHash, String? hashAlgorithm = keccak256, Boolean? useSalt = True)  // Used to verify hash, by default it uses salt. hashAlgorithm: keccak256 | sha256 | bcrypt(when salt). \nvoid SetCurrentBearerToken(String name) \nString GetBearerSecret() \nBoolean ValidateBearerToken(String token, String? issuer = PLangRuntime, String? audience = user) \nString GenerateBearerToken(String uniqueString, String? issuer = PLangRuntime, String? audience = user, Int32? expireTimeInSeconds = 604800) \n\r\n## functions available ends ##\r\n## defined variables ##\r\nhashedPassword, isValid\r\n## defined variables ##\nBearer token names are: Default",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"VerifyHashedValues\",\n\"Parameters\": [\n    {\"Type\": \"String\", \"Name\": \"password\", \"Value\": \"MySuperPassword123.\"},\n    {\"Type\": \"String\", \"Name\": \"passwordHash\", \"Value\": \"%hashedPassword%\"},\n    {\"Type\": \"String\", \"Name\": \"hashAlgorithm\", \"Value\": \"keccak256\"},\n    {\"Type\": \"Boolean\", \"Name\": \"useSalt\", \"Value\": true}\n],\n\"ReturnValue\": {\"Type\": \"Boolean\", \"VariableName\": \"isValid\"}}"
    },
    "answer": "{\"FunctionName\": \"VerifyHashedValues\",\n\"Parameters\": [\n    {\"Type\": \"String\", \"Name\": \"password\", \"Value\": \"MySuperPassword123.\"},\n    {\"Type\": \"String\", \"Name\": \"passwordHash\", \"Value\": \"%hashedPassword%\"},\n    {\"Type\": \"String\", \"Name\": \"hashAlgorithm\", \"Value\": \"keccak256\"},\n    {\"Type\": \"Boolean\", \"Name\": \"useSalt\", \"Value\": true}\n],\n\"ReturnValue\": {\"Type\": \"Boolean\", \"VariableName\": \"isValid\"}}",
    "hash": "aabf53723903b37cc35f573a0681402155d4a8211d8eea84c544504fb339cde7",
    "Created": "2023-10-04T15:28:56.3661376Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "get bearer secret, write to %bearerSecret%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"GetBearerSecret\",\n\"StepDescription\": \"This step involves retrieving the bearer secret and storing it in the variable %bearerSecret%\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\", \"PLang.Modules.LocalOrGlobalVariableModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 500}}"
    },
    "answer": "{\"StepName\": \"GetBearerSecret\",\n\"StepDescription\": \"This step involves retrieving the bearer secret and storing it in the variable %bearerSecret%\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\", \"PLang.Modules.LocalOrGlobalVariableModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 500}}",
    "hash": "f843d1fe439a810c666fc57bac60f14c200e5de57a4afd8ae71a705e1deb19e2",
    "Created": "2023-10-04T15:31:46.5592816Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: get bearer secret, write to %bearerSecret%",
      "assistant": "## functions available defined in csharp ##\r\nString Encrypt(Object content) \nObject Decrypt(String content) \nString HashInput(String input, Boolean? useSalt = True, String? salt, String? hashAlgorithm = keccak256)  // Used for hashing, by default it uses salt. Only provide salt if user provides it in his statement. hashAlgorithm: keccak256 | sha256 | bcrypt(when salt). \nBoolean VerifyHashedValues(String password, String passwordHash, String? hashAlgorithm = keccak256, Boolean? useSalt = True)  // Used to verify hash, by default it uses salt. hashAlgorithm: keccak256 | sha256 | bcrypt(when salt). \nvoid SetCurrentBearerToken(String name) \nString GetBearerSecret() \nBoolean ValidateBearerToken(String token, String? issuer = PLangRuntime, String? audience = user) \nString GenerateBearerToken(String uniqueString, String? issuer = PLangRuntime, String? audience = user, Int32? expireTimeInSeconds = 604800) \n\r\n## functions available ends ##\r\n## defined variables ##\r\nbearerSecret\r\n## defined variables ##\nBearer token names are: Default",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"GetBearerSecret\",\n\"Parameters\": [],\n\"ReturnValue\": {\"Type\": \"string\",\n\"VariableName\": \"bearerSecret\"}}"
    },
    "answer": "{\"FunctionName\": \"GetBearerSecret\",\n\"Parameters\": [],\n\"ReturnValue\": {\"Type\": \"string\",\n\"VariableName\": \"bearerSecret\"}}",
    "hash": "c030e15eaa9fd8bfb2efeedab4442f5650f0ea638e4080f2e774637c4b114f62",
    "Created": "2023-10-04T15:31:49.994901Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "create bearer, test@example.org, write to %bearer%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CreateBearerToken\",\n\"StepDescription\": \"Create a bearer token using the email 'test@example.org' and store the result in the variable %bearer%\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 500}}"
    },
    "answer": "{\"StepName\": \"CreateBearerToken\",\n\"StepDescription\": \"Create a bearer token using the email 'test@example.org' and store the result in the variable %bearer%\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 500}}",
    "hash": "a1d866b7168c38a554e7a1a4d0a6bebef57d4be919e2e5e680fa9a7eaaddb424",
    "Created": "2023-10-04T15:31:57.5442253Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: create bearer, test@example.org, write to %bearer%",
      "assistant": "## functions available defined in csharp ##\r\nString Encrypt(Object content) \nObject Decrypt(String content) \nString HashInput(String input, Boolean? useSalt = True, String? salt, String? hashAlgorithm = keccak256)  // Used for hashing, by default it uses salt. Only provide salt if user provides it in his statement. hashAlgorithm: keccak256 | sha256 | bcrypt(when salt). \nBoolean VerifyHashedValues(String password, String passwordHash, String? hashAlgorithm = keccak256, Boolean? useSalt = True)  // Used to verify hash, by default it uses salt. hashAlgorithm: keccak256 | sha256 | bcrypt(when salt). \nvoid SetCurrentBearerToken(String name) \nString GetBearerSecret() \nBoolean ValidateBearerToken(String token, String? issuer = PLangRuntime, String? audience = user) \nString GenerateBearerToken(String uniqueString, String? issuer = PLangRuntime, String? audience = user, Int32? expireTimeInSeconds = 604800) \n\r\n## functions available ends ##\r\n## defined variables ##\r\nbearer\r\n## defined variables ##\nBearer token names are: Default",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"GenerateBearerToken\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"uniqueString\",\n\"Value\": \"test@example.org\"},\n{\"Type\": \"string\",\n\"Name\": \"issuer\",\n\"Value\": \"PLangRuntime\"},\n{\"Type\": \"string\",\n\"Name\": \"audience\",\n\"Value\": \"user\"},\n{\"Type\": \"int\",\n\"Name\": \"expireTimeInSeconds\",\n\"Value\": 604800}],\n\"ReturnValue\": {\"Type\": \"string\",\n\"VariableName\": \"bearer\"}}"
    },
    "answer": "{\"FunctionName\": \"GenerateBearerToken\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"uniqueString\",\n\"Value\": \"test@example.org\"},\n{\"Type\": \"string\",\n\"Name\": \"issuer\",\n\"Value\": \"PLangRuntime\"},\n{\"Type\": \"string\",\n\"Name\": \"audience\",\n\"Value\": \"user\"},\n{\"Type\": \"int\",\n\"Name\": \"expireTimeInSeconds\",\n\"Value\": 604800}],\n\"ReturnValue\": {\"Type\": \"string\",\n\"VariableName\": \"bearer\"}}",
    "hash": "6cfa3bce9b3bba388de9a61fa2f5e3bb66c60bb05419c5419341de18ac84db8a",
    "Created": "2023-10-04T15:32:07.0928229Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "validate bearer token %bearer%, write to %isValidBearer%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"ValidateBearerToken\",\n\"StepDescription\": \"This step involves validating a bearer token. The bearer token is stored in the variable %bearer%. The result of the validation is written to the variable %isValidBearer%.\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 500}}"
    },
    "answer": "{\"StepName\": \"ValidateBearerToken\",\n\"StepDescription\": \"This step involves validating a bearer token. The bearer token is stored in the variable %bearer%. The result of the validation is written to the variable %isValidBearer%.\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 500}}",
    "hash": "388a1c466741a783869aecf724e249d61d5f9a883b53539b02f31e32e08080d2",
    "Created": "2023-10-04T15:32:15.4280087Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: validate bearer token %bearer%, write to %isValidBearer%",
      "assistant": "## functions available defined in csharp ##\r\nString Encrypt(Object content) \nObject Decrypt(String content) \nString HashInput(String input, Boolean? useSalt = True, String? salt, String? hashAlgorithm = keccak256)  // Used for hashing, by default it uses salt. Only provide salt if user provides it in his statement. hashAlgorithm: keccak256 | sha256 | bcrypt(when salt). \nBoolean VerifyHashedValues(String password, String passwordHash, String? hashAlgorithm = keccak256, Boolean? useSalt = True)  // Used to verify hash, by default it uses salt. hashAlgorithm: keccak256 | sha256 | bcrypt(when salt). \nvoid SetCurrentBearerToken(String name) \nString GetBearerSecret() \nBoolean ValidateBearerToken(String token, String? issuer = PLangRuntime, String? audience = user) \nString GenerateBearerToken(String uniqueString, String? issuer = PLangRuntime, String? audience = user, Int32? expireTimeInSeconds = 604800) \n\r\n## functions available ends ##\r\n## defined variables ##\r\nbearer, isValidBearer\r\n## defined variables ##\nBearer token names are: Default",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"ValidateBearerToken\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"token\",\n\"Value\": \"%bearer%\"},\n{\"Type\": \"String\",\n\"Name\": \"issuer\",\n\"Value\": \"PLangRuntime\"},\n{\"Type\": \"String\",\n\"Name\": \"audience\",\n\"Value\": \"user\"}],\n\"ReturnValue\": {\"Type\": \"Boolean\",\n\"VariableName\": \"isValidBearer\"}}"
    },
    "answer": "{\"FunctionName\": \"ValidateBearerToken\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"token\",\n\"Value\": \"%bearer%\"},\n{\"Type\": \"String\",\n\"Name\": \"issuer\",\n\"Value\": \"PLangRuntime\"},\n{\"Type\": \"String\",\n\"Name\": \"audience\",\n\"Value\": \"user\"}],\n\"ReturnValue\": {\"Type\": \"Boolean\",\n\"VariableName\": \"isValidBearer\"}}",
    "hash": "0dd781ac821506fd3b7dddee68a47751be58b8b26b30d53713ed7e003198c24c",
    "Created": "2023-10-04T15:32:24.2042899Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "create bearer, test@example.org, write to %bearer%, expires in 5 minutes",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CreateBearerToken\",\n\"StepDescription\": \"Create a bearer token for the email 'test@example.org', store the token in the variable %bearer%, and set the token to expire in 5 minutes.\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": {\"TimeInMilliseconds\": 300000,\n\"CacheKey\": \"bearer\",\n\"CachingType\": 1},\n\"ErrorHandler\": {\"IgnoreErrors\": false}}"
    },
    "answer": "{\"StepName\": \"CreateBearerToken\",\n\"StepDescription\": \"Create a bearer token for the email 'test@example.org', store the token in the variable %bearer%, and set the token to expire in 5 minutes.\",\n\"Modules\": [\"PLang.Modules.CryptographicModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": {\"TimeInMilliseconds\": 300000,\n\"CacheKey\": \"bearer\",\n\"CachingType\": 1},\n\"ErrorHandler\": {\"IgnoreErrors\": false}}",
    "hash": "ee2e4c779d5af93a2ca2726652c73ee7f4f63cb2375e7b3e7ba381768d38a724",
    "Created": "2023-10-04T15:33:13.8343896Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: create bearer, test@example.org, write to %bearer%, expires in 5 minutes",
      "assistant": "## functions available defined in csharp ##\r\nString Encrypt(Object content) \nObject Decrypt(String content) \nString HashInput(String input, Boolean? useSalt = True, String? salt, String? hashAlgorithm = keccak256)  // Used for hashing, by default it uses salt. Only provide salt if user provides it in his statement. hashAlgorithm: keccak256 | sha256 | bcrypt(when salt). \nBoolean VerifyHashedValues(String password, String passwordHash, String? hashAlgorithm = keccak256, Boolean? useSalt = True)  // Used to verify hash, by default it uses salt. hashAlgorithm: keccak256 | sha256 | bcrypt(when salt). \nvoid SetCurrentBearerToken(String name) \nString GetBearerSecret() \nBoolean ValidateBearerToken(String token, String? issuer = PLangRuntime, String? audience = user) \nString GenerateBearerToken(String uniqueString, String? issuer = PLangRuntime, String? audience = user, Int32? expireTimeInSeconds = 604800) \n\r\n## functions available ends ##\r\n## defined variables ##\r\nbearer\r\n## defined variables ##\nBearer token names are: Default",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"GenerateBearerToken\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"uniqueString\",\n\"Value\": \"test@example.org\"},\n{\"Type\": \"string\",\n\"Name\": \"issuer\",\n\"Value\": \"PLangRuntime\"},\n{\"Type\": \"string\",\n\"Name\": \"audience\",\n\"Value\": \"user\"},\n{\"Type\": \"int\",\n\"Name\": \"expireTimeInSeconds\",\n\"Value\": 300}],\n\"ReturnValue\": {\"Type\": \"string\",\n\"VariableName\": \"bearer\"}}"
    },
    "answer": "{\"FunctionName\": \"GenerateBearerToken\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"uniqueString\",\n\"Value\": \"test@example.org\"},\n{\"Type\": \"string\",\n\"Name\": \"issuer\",\n\"Value\": \"PLangRuntime\"},\n{\"Type\": \"string\",\n\"Name\": \"audience\",\n\"Value\": \"user\"},\n{\"Type\": \"int\",\n\"Name\": \"expireTimeInSeconds\",\n\"Value\": 300}],\n\"ReturnValue\": {\"Type\": \"string\",\n\"VariableName\": \"bearer\"}}",
    "hash": "22bf2c03cb7f2944fbe0a4ca292882f0bb3b558451647a0a76deb2e0f1729bf3",
    "Created": "2023-10-04T15:33:22.4768982Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "if %isValidBearer% then",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CheckValidBearer\",\n\"StepDescription\": \"This step checks if the variable 'isValidBearer' is true.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}"
    },
    "answer": "{\"StepName\": \"CheckValidBearer\",\n\"StepDescription\": \"This step checks if the variable 'isValidBearer' is true.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}",
    "hash": "525fb063508e4cddb3418c9d98b031cfa6a1a20798a103e1a436624c76e882ac",
    "Created": "2023-10-04T15:33:31.3359388Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\nALWAYS use long or long? instead of int or int?\r\nName: is CamelCase name of class\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\n\r\n\r\nBe Concise\n\nYou MUST respond in JSON, scheme:\r\n {\"Name\": string,\n\"Implementation\": string,\n\"Using\": string[],\n\"Assemblies\": string[]}",
      "question": "command: if %isValidBearer% then",
      "assistant": "## defined variables ##\r\nisValidBearer\r\n## defined variables ##\nName cannot be: IsValidCheck\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"Name\": \"IsValidCheck\",\n\"Implementation\": \"public static class IsValidCheck\\n{\\npublic static bool Process(bool isValidBearer)\\n{\\nif(isValidBearer)\\n{\\nreturn true;\\n}\\nelse\\n{\\nreturn false;\\n}\\n}\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": []}"
    },
    "answer": "{\"Name\": \"IsValidCheck\",\n\"Implementation\": \"public static class IsValidCheck\\n{\\npublic static bool Process(bool isValidBearer)\\n{\\nif(isValidBearer)\\n{\\nreturn true;\\n}\\nelse\\n{\\nreturn false;\\n}\\n}\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": []}",
    "hash": "605579985fe4e6c935c924e0cdd176eac9d9e5ceb6d52471721cbaed73ddd472",
    "Created": "2023-10-04T15:33:37.6295528Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "write out 'bearer is valid'",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"OutputBearerIsValid\",\n\"StepDescription\": \"Write out the string 'bearer is valid' to the user interface.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"OutputBearerIsValid\",\n\"StepDescription\": \"Write out the string 'bearer is valid' to the user interface.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true}",
    "hash": "7a72a8fb88ff9e16ef978c5259e37b9387154b9d8b89e17c6988497c4c67427d",
    "Created": "2023-10-04T15:33:43.5592544Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: write out 'bearer is valid'",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"text\",\n\"Value\": \"bearer is valid\"}],\n\"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"text\",\n\"Value\": \"bearer is valid\"}],\n\"ReturnValue\": null}",
    "hash": "a8ce0d408b2db670559bf03b8009805af88f7986f460b0d721c5b54960cf5a15",
    "Created": "2023-10-04T15:33:47.4072997Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "if %isValid% (bool)",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CheckIsValid\",\n\"StepDescription\": \"Check if the variable 'isValid' is true or false\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}"
    },
    "answer": "{\"StepName\": \"CheckIsValid\",\n\"StepDescription\": \"Check if the variable 'isValid' is true or false\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}",
    "hash": "9109883b0d6d809fd95249b4e3bcb1610003ba8d67a35e0e7f029b2ea0e46aee",
    "Created": "2023-10-04T15:34:42.7999372Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\nALWAYS use long or long? instead of int or int?\r\nName: is CamelCase name of class\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\n\r\n\r\nBe Concise\n\nYou MUST respond in JSON, scheme:\r\n {\"Name\": string,\n\"Implementation\": string,\n\"Using\": string[],\n\"Assemblies\": string[]}",
      "question": "command: if %isValid% (bool)",
      "assistant": "## defined variables ##\r\nisValid\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n  \"Name\": \"IsValidProcessor\",\n  \"Implementation\": \"public static class IsValidProcessor\\n{\\n    public static bool Process(bool isValid)\\n    {\\n        return isValid;\\n    }\\n}\",\n  \"Using\": [\"System\"],\n  \"Assemblies\": []\n}"
    },
    "answer": "{\n  \"Name\": \"IsValidProcessor\",\n  \"Implementation\": \"public static class IsValidProcessor\\n{\\n    public static bool Process(bool isValid)\\n    {\\n        return isValid;\\n    }\\n}\",\n  \"Using\": [\"System\"],\n  \"Assemblies\": []\n}",
    "hash": "a2c3a6b8338a144b59bb7af970cd424effe7d9ca5daba8864d0edd07c6df937e",
    "Created": "2023-10-04T15:34:48.7680207Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\nExternalServiceHandler : !GoalName? / http://example.org/api/run.goal | file.txt | https://docs.api.is/doc.html .startCssSelector .endCssSelect\r\nRead the description of each module, then determine which module to use\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\"?: string,\n\"StepDescription\"?: string,\n\"Modules\"?: string[],\n\"WaitForExecution\": boolean,\n\"ExternalServiceHandler\": {\"GoalName\": string,\n\"Uri\": string,\n\"StartCssSelector\": string,\n\"EndCssSelector\": string},\n\"CachingHandler\": {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\": {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\": {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "if %isValid% then",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CheckIsValid\",\n\"StepDescription\": \"Check if the variable 'isValid' is true\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}"
    },
    "answer": "{\"StepName\": \"CheckIsValid\",\n\"StepDescription\": \"Check if the variable 'isValid' is true\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": {\"IgnoreErrors\": false},\n\"RetryHandler\": {\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": 0}}",
    "hash": "167f7ddb0ebd7595ef1103b8f4153e5853df4f35fa14469bfd2608a2f16ec0c0",
    "Created": "2023-10-04T15:43:43.7909382Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\nALWAYS use long or long? instead of int or int?\r\nName: is CamelCase name of class\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\n\r\n\r\nBe Concise\n\nYou MUST respond in JSON, scheme:\r\n {\"Name\": string,\n\"Implementation\": string,\n\"Using\": string[],\n\"Assemblies\": string[]}",
      "question": "command: if %isValid% then",
      "assistant": "## defined variables ##\r\nisValid(Boolean), \r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"Name\": \"IsValidCheck\",\n\"Implementation\": \"public static class IsValidCheck\\n{\\npublic static bool Process(bool isValid)\\n{\\nif(isValid)\\n{\\nreturn true;\\n}\\nelse\\n{\\nreturn false;\\n}\\n}\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": [\"System.Runtime\"]}"
    },
    "answer": "{\"Name\": \"IsValidCheck\",\n\"Implementation\": \"public static class IsValidCheck\\n{\\npublic static bool Process(bool isValid)\\n{\\nif(isValid)\\n{\\nreturn true;\\n}\\nelse\\n{\\nreturn false;\\n}\\n}\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": [\"System.Runtime\"]}",
    "hash": "b1fdb5347fe4e63021ed085ca37e2b5796aadacd5844a688ac392e2794dd6696",
    "Created": "2023-10-04T15:48:35.3573545Z"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {\"name\":\"value\"}) into type 'System.Collections.Generic.List`1[PLang.Modules.BaseBuilder+Parameter]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.\r\nPath 'Parameters.isValidBearer', line 8, position 20.\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(JsonObjectContract contract, JsonProperty containerProperty, JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ObjectConstructor`1 creator, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at PLang.Building.StepBuilder.StepHasBeenBuild(GoalStep step, Int32 stepIndex, List`1 excludeModules) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\StepBuilder.cs:line 147\r\n   at PLang.Building.StepBuilder.BuildStep(Goal goal, Int32 stepIndex, List`1 excludeModules, Int32 errorCount) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\StepBuilder.cs:line 52",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There's an issue with the format of your JSON data. It seems like the system is expecting a JSON array but received a JSON object instead.\",\n\"howToFix\": \"You can fix this by either changing your JSON data to a JSON array format like [1,2,3] or modify the deserialized type in your code to match the JSON object. You can also add JsonObjectAttribute to the type to force it to deserialize from a JSON object.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There's an issue with the format of your JSON data. It seems like the system is expecting a JSON array but received a JSON object instead.\",\n\"howToFix\": \"You can fix this by either changing your JSON data to a JSON array format like [1,2,3] or modify the deserialized type in your code to match the JSON object. You can also add JsonObjectAttribute to the type to force it to deserialize from a JSON object.\"\n}",
    "hash": "44d0389410135907ab445bebc878745f4647ef1c6debb7e039d28c81fa72bef0",
    "Created": "2023-10-04T15:48:45.7016473Z"
  }
]
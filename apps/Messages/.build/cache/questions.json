[
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "listen for messages, call !WriteContent",
      "assistant": "This is a list of modules you can choose from\r\n## modules starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"ListenAndWriteContent\",\n\"StepDescription\": \"Listen for incoming messages and then call the function WriteContent\",\n\"Modules\": [\"PLang.Modules.MessageModule\", \"PLang.Modules.CallGoalModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"ListenAndWriteContent\",\n\"StepDescription\": \"Listen for incoming messages and then call the function WriteContent\",\n\"Modules\": [\"PLang.Modules.MessageModule\", \"PLang.Modules.CallGoalModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "a6f28de51291ab5c27b7f1f73f9484dbbc731f931c757fd10c17a5f6f62167dd",
    "Created": "2023-09-11T10:43:21.3959612Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: listen for messages, call !WriteContent",
      "assistant": "## functions available defined in csharp ##\r\nString GetPublicKey() \nvoid Listen(String variableName, String goalName, String? appName, Nullable`1? listenFromDateTime) \nvoid SendPrivateMessageToMyself(String content) \nvoid SendPrivateMessage(String content, String npubReceiverPublicKey) \nvoid GetPrivateMessage() \n\r\n## functions available ends ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Listen\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"variableName\",\n\"Value\": \"messages\"},\n{\"Type\": \"String\",\n\"Name\": \"goalName\",\n\"Value\": \"!WriteContent\"},\n{\"Type\": \"String\",\n\"Name\": \"appName\",\n\"Value\": \"\"},\n{\"Type\": \"Nullable`1\",\n\"Name\": \"listenFromDateTime\",\n\"Value\": \"\"}],\n\"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Listen\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"variableName\",\n\"Value\": \"messages\"},\n{\"Type\": \"String\",\n\"Name\": \"goalName\",\n\"Value\": \"!WriteContent\"},\n{\"Type\": \"String\",\n\"Name\": \"appName\",\n\"Value\": \"\"},\n{\"Type\": \"Nullable`1\",\n\"Name\": \"listenFromDateTime\",\n\"Value\": \"\"}],\n\"ReturnValue\": null}",
    "hash": "c983adebb79217b926d633fb4bf99f9b2220cefb60b61f9fe431af6b05ca8519",
    "Created": "2023-09-11T10:43:29.794798Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "get my public key for messages write to %publicKey%",
      "assistant": "This is a list of modules you can choose from\r\n## modules starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"GetPublicKey\",\n\"StepDescription\": \"Retrieve the public key for messages and store it in the variable %publicKey%\",\n\"Modules\": [\"PLang.Modules.BlockchainModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"GetPublicKey\",\n\"StepDescription\": \"Retrieve the public key for messages and store it in the variable %publicKey%\",\n\"Modules\": [\"PLang.Modules.BlockchainModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "e64cc063956e8abc74147abf30bb7c2ad1101c32f7ccee998d41b7735c1bf392",
    "Created": "2023-09-11T10:43:36.1333776Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: get my public key for messages write to %publicKey%",
      "assistant": "## functions available defined in csharp ##\r\nRpcServer GetRpcServers() \nSetCurrentRpcServer(String nameOrUrl) \nGetCurrentRpcServer() \nWallet GetWallets() \nSetCurrentWallet(String walletName) \nWallet GetOrCreateWallet() \nvoid SetAddress(String address) \nString GetAddress() \nString SignMessage(String message) \nBoolean VerifySignature(String message, String signature, String expectedAddress) \nBigInteger GetBalanceInWei(String address) \nDecimal GetBalance(String address) \nUInt32 GetDecimal(String contractAddress) \nTransactionReceipt Transfer(String to, Decimal amount, Nullable`1? gasPriceWei, Nullable`1? gas, Nullable`1? nonce) \nString SendTransaction(String contractAddress, String abi, Object[] args) \nTransactionReceipt SendTransactionAndWaitForReceiptAsync(String contractAddress, String abi, Object[] args) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%publicKey%\r\n## defined variables ##\nFollowing RPC servers are available: [{\"Name\":\"Mumbai - Polygon testnet\",\"Url\":\"https://polygon-mumbai-bor.publicnode.com\",\"IsTestNet\":true,\"IsDefault\":true},{\"Name\":\"Polygon mainnet\",\"Url\":\"https://polygon.llamarpc.com\",\"IsTestNet\":false,\"IsDefault\":false},{\"Name\":\"Ethereum mainnet\",\"Url\":\"https://eth.llamarpc.com\",\"IsTestNet\":false,\"IsDefault\":false},{\"Name\":\"Ethereum testnet (Goerli)\",\"Url\":\"https://ethereum-goerli.publicnode.com\",\"IsTestNet\":true,\"IsDefault\":false},{\"Name\":\"Binance mainnet\",\"Url\":\"https://binance.llamarpc.com\",\"IsTestNet\":false,\"IsDefault\":false},{\"Name\":\"Binance testnet\",\"Url\":\"https://endpoints.omniatech.io/v1/bsc/testnet/public\",\"IsTestNet\":true,\"IsDefault\":false},{\"Name\":\"Arbitrum One mainnet\",\"Url\":\"https://arbitrum.llamarpc.com\",\"IsTestNet\":false,\"IsDefault\":false},{\"Name\":\"Arbitrum Goerli testnet\",\"Url\":\"https://endpoints.omniatech.io/v1/arbitrum/goerli/public\",\"IsTestNet\":true,\"IsDefault\":false},{\"Name\":\"Optimism (OP) mainnet\",\"Url\":\"https://optimism.drpc.org\",\"IsTestNet\":false,\"IsDefault\":false},{\"Name\":\"Optimism (OP) Goerli testnet\",\"Url\":\"https://endpoints.omniatech.io/v1/op/goerli/public\",\"IsTestNet\":true,\"IsDefault\":false},{\"Name\":\"Avalanche C-Chain mainnet\",\"Url\":\"https://avalanche.public-rpc.com\",\"IsTestNet\":false,\"IsDefault\":false},{\"Name\":\"Avalanche Fuji testnet\",\"Url\":\"https://ava-testnet.public.blastapi.io/ext/bc/C/rpc\",\"IsTestNet\":true,\"IsDefault\":false},{\"Name\":\"Gnosis mainnet\",\"Url\":\"https://rpc.gnosischain.com\",\"IsTestNet\":false,\"IsDefault\":false},{\"Name\":\"Gnosis Chiado Testnet\",\"Url\":\"https://rpc.chiadochain.net\",\"IsTestNet\":true,\"IsDefault\":false}].\r\nFollowing are wallets with addresses:[{\"IsDefault\":false,\"IsArchived\":false,\"Addresses\":[\"0x112ac08DB6b96e259f00BF0400D8045Fb5a0F921\",\"0x5DEe804A80D37D1e32bFC0FB8BBCf420ee9CB418\",\"0x44Ef414Fb95ae324f2e926Fe19a97ef5c563a06f\",\"0x397b5d50D59B3C01286B6A785bbb8D3219904d6c\",\"0xAa11E5c76bFdba59DC3C8bd6E9E06260b979f535\",\"0x4f3C16C63B3E6A79dc9BEFDF3c788eD19A8634D8\",\"0xa9b4eB193D52C3EA07ac24a6AbA6E62016a24C14\",\"0xAE0BD432c85ebb75277A10E08A4BB8634A05CC14\",\"0x063035cEfDA75D2610a54e972beea2D60A7bF95A\",\"0x331ec7bd8713888233cfA8b4C03c448Ecc468Cb7\",\"0x64Ef6A44ef5e9066631fAC52174590A63982C6ab\",\"0x83be6941F093e38499c561DFA03d7c3446DF7404\",\"0xeB18ac90e21F6A290Ac87dfF0Ced31Ebf1043783\",\"0x6Dca35746b6e4768b8e1d912cc0813B20662BE4C\",\"0x0bA3dB9F61b766Da819221D132A9243E10247210\",\"0x30467aF2E930AF821D41913a7B5f62B459a55afD\",\"0xae6bd6DC80eF23CA2F836a8207E6101F07529c3c\",\"0x572B9321253D80254112E6DBFA93032A9906242d\",\"0xAC4B733cDCcE9AF7dcE0eDD6C56Eb8f9a43e3589\",\"0xe36C7F9a6Ffb169d5F458F6eCF3855C890998c2a\"],\"Name\":\"Default\",\"Seed\":\"\"}]\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"GetAddress\", \"Parameters\": [], \"ReturnValue\": {\"Type\": \"String\", \"VariableName\": \"publicKey\"}}"
    },
    "answer": "{\"FunctionName\": \"GetAddress\", \"Parameters\": [], \"ReturnValue\": {\"Type\": \"String\", \"VariableName\": \"publicKey\"}}",
    "hash": "3c718e512add416c611d3626e63192460b0de25e211e7a21f653ca1456e70e31",
    "Created": "2023-09-11T10:43:39.8371113Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "write out %publicKey%",
      "assistant": "This is a list of modules you can choose from\r\n## modules starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"WriteOutPublicKey\",\n\"StepDescription\": \"Output the value of the variable 'publicKey' to the user interface.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"WriteOutPublicKey\",\n\"StepDescription\": \"Output the value of the variable 'publicKey' to the user interface.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "2e4474203f52ca2b3b1117ac705c0e227658519d641cc96ba9bfdaec89eaad84",
    "Created": "2023-09-11T10:43:45.7361766Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: write out %publicKey%",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%publicKey%\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"text\",\n\"Value\": \"%publicKey%\"}],\n\"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"text\",\n\"Value\": \"%publicKey%\"}],\n\"ReturnValue\": null}",
    "hash": "bd3cff72d6d95dbc1fe50d455827fd5f58995b0e1d96a5adfeb6086f12140f0d",
    "Created": "2023-09-11T10:43:50.0352316Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "send private message to me\n    content: Hi, how are you? %Now%",
      "assistant": "This is a list of modules you can choose from\r\n## modules starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SendMessage\",\n\"StepDescription\": \"Send a private message with the content 'Hi, how are you?' along with the current date and time.\",\n\"Modules\": [\"PLang.Modules.MessageModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"SendMessage\",\n\"StepDescription\": \"Send a private message with the content 'Hi, how are you?' along with the current date and time.\",\n\"Modules\": [\"PLang.Modules.MessageModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "f504ef6f79ac96d70a9a494c37f8e647e012e207b73031ad5e787c6595fe8e50",
    "Created": "2023-09-11T10:43:56.6139906Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: send private message to me\n    content: Hi, how are you? %Now%",
      "assistant": "## functions available defined in csharp ##\r\nString GetPublicKey() \nvoid Listen(String variableName, String goalName, String? appName, Nullable`1? listenFromDateTime) \nvoid SendPrivateMessageToMyself(String content) \nvoid SendPrivateMessage(String content, String npubReceiverPublicKey) \nvoid GetPrivateMessage() \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%Now%\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"SendPrivateMessageToMyself\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"content\",\n\"Value\": \"Hi, how are you? %Now%\"}],\n\"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"SendPrivateMessageToMyself\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"content\",\n\"Value\": \"Hi, how are you? %Now%\"}],\n\"ReturnValue\": null}",
    "hash": "96113558e1e0984f79301b48b69609dd9f95acc1f9e2a550d2d10e08e83821ea",
    "Created": "2023-09-11T10:44:00.4231912Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "console read",
      "assistant": "This is a list of modules you can choose from\r\n## modules starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"ConsoleRead\",\n\"StepDescription\": \"Read input from the console\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"ConsoleRead\",\n\"StepDescription\": \"Read input from the console\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "80263a9d42cad2c697c06819aa2c21edb7778eee1da61c09326240566c3df04f",
    "Created": "2023-09-11T10:44:06.0393294Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: console read",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"N/A\", \"Parameters\": [], \"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"N/A\", \"Parameters\": [], \"ReturnValue\": null}",
    "hash": "dd41f69c1366cceb5a163d41f9274fef98c88bf0dcebd83be26c8026f76de335",
    "Created": "2023-09-11T10:44:08.4754912Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "console read",
      "assistant": "This is a list of modules you can choose from\r\n## modules starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"ReadConsole\",\n\"StepDescription\": \"Read input from the console\",\n\"Modules\": [\"PLang.Modules.TerminalModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"ReadConsole\",\n\"StepDescription\": \"Read input from the console\",\n\"Modules\": [\"PLang.Modules.TerminalModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "cc152fa6e4efe80a830d81b5b782aceab7732737b104a39e7c676613005153ff",
    "Created": "2023-09-11T10:44:14.2406314Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: console read",
      "assistant": "## functions available defined in csharp ##\r\nvoid Read(String variableName) \nDictionary`2 RunTerminal(String appExecutableName, List`1? parameters, String? dataOutputVariable, String? errorDebugInfoOutputVariable) \n\r\n## functions available ends ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Read\", \"Parameters\": [{\"Type\": \"String\", \"Name\": \"variableName\", \"Value\": \"\"}], \"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Read\", \"Parameters\": [{\"Type\": \"String\", \"Name\": \"variableName\", \"Value\": \"\"}], \"ReturnValue\": null}",
    "hash": "5248a9f16610c03fe69809cc3243972d4c9f9c7905355d29605a028a00f40192",
    "Created": "2023-09-11T10:44:18.1706197Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "Write out %messages%",
      "assistant": "This is a list of modules you can choose from\r\n## modules starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"WriteOutMessages\",\n\"StepDescription\": \"Write out the content of the variable 'messages' to the user interface.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"WriteOutMessages\",\n\"StepDescription\": \"Write out the content of the variable 'messages' to the user interface.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "b672b4e8853fd8294b19a6dede59d8d833437072115de0adbb1f32bc91ce007c",
    "Created": "2023-09-11T10:44:23.8103371Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: Write out %messages%",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%messages%\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Write\", \n\"Parameters\": [{\"Type\": \"String\", \n\"Name\": \"text\", \n\"Value\": \"%messages%\"}], \n\"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Write\", \n\"Parameters\": [{\"Type\": \"String\", \n\"Name\": \"text\", \n\"Value\": \"%messages%\"}], \n\"ReturnValue\": null}",
    "hash": "2aced0ec770097fbba3e0c40db47beb3c6588e68b16e670fed466eccd986b8a6",
    "Created": "2023-09-11T10:44:27.694961Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "[message] get my public key for messages write to %publicKey%",
      "assistant": "This is a list of modules you can choose from\r\n## modules starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"GetPublicKey\",\n\"StepDescription\": \"Retrieve the public key for messages and store it in the variable %publicKey%\",\n\"Modules\": [\"PLang.Modules.BlockchainModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"GetPublicKey\",\n\"StepDescription\": \"Retrieve the public key for messages and store it in the variable %publicKey%\",\n\"Modules\": [\"PLang.Modules.BlockchainModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "1e9b85e571c5f5bd1f937250a9ecd06c8280d455b24fd7119b8520d76cf6b8d5",
    "Created": "2023-09-11T10:47:37.9333346Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: [message] get my public key for messages write to %publicKey%",
      "assistant": "## functions available defined in csharp ##\r\nRpcServer GetRpcServers() \nSetCurrentRpcServer(String nameOrUrl) \nGetCurrentRpcServer() \nWallet GetWallets() \nSetCurrentWallet(String walletName) \nWallet GetOrCreateWallet() \nvoid SetAddress(String address) \nString GetAddress() \nString SignMessage(String message) \nBoolean VerifySignature(String message, String signature, String expectedAddress) \nBigInteger GetBalanceInWei(String address) \nDecimal GetBalance(String address) \nUInt32 GetDecimal(String contractAddress) \nTransactionReceipt Transfer(String to, Decimal amount, Nullable`1? gasPriceWei, Nullable`1? gas, Nullable`1? nonce) \nString SendTransaction(String contractAddress, String abi, Object[] args) \nTransactionReceipt SendTransactionAndWaitForReceiptAsync(String contractAddress, String abi, Object[] args) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%publicKey%\r\n## defined variables ##\nFollowing RPC servers are available: [{\"Name\":\"Mumbai - Polygon testnet\",\"Url\":\"https://polygon-mumbai-bor.publicnode.com\",\"IsTestNet\":true,\"IsDefault\":true},{\"Name\":\"Polygon mainnet\",\"Url\":\"https://polygon.llamarpc.com\",\"IsTestNet\":false,\"IsDefault\":false},{\"Name\":\"Ethereum mainnet\",\"Url\":\"https://eth.llamarpc.com\",\"IsTestNet\":false,\"IsDefault\":false},{\"Name\":\"Ethereum testnet (Goerli)\",\"Url\":\"https://ethereum-goerli.publicnode.com\",\"IsTestNet\":true,\"IsDefault\":false},{\"Name\":\"Binance mainnet\",\"Url\":\"https://binance.llamarpc.com\",\"IsTestNet\":false,\"IsDefault\":false},{\"Name\":\"Binance testnet\",\"Url\":\"https://endpoints.omniatech.io/v1/bsc/testnet/public\",\"IsTestNet\":true,\"IsDefault\":false},{\"Name\":\"Arbitrum One mainnet\",\"Url\":\"https://arbitrum.llamarpc.com\",\"IsTestNet\":false,\"IsDefault\":false},{\"Name\":\"Arbitrum Goerli testnet\",\"Url\":\"https://endpoints.omniatech.io/v1/arbitrum/goerli/public\",\"IsTestNet\":true,\"IsDefault\":false},{\"Name\":\"Optimism (OP) mainnet\",\"Url\":\"https://optimism.drpc.org\",\"IsTestNet\":false,\"IsDefault\":false},{\"Name\":\"Optimism (OP) Goerli testnet\",\"Url\":\"https://endpoints.omniatech.io/v1/op/goerli/public\",\"IsTestNet\":true,\"IsDefault\":false},{\"Name\":\"Avalanche C-Chain mainnet\",\"Url\":\"https://avalanche.public-rpc.com\",\"IsTestNet\":false,\"IsDefault\":false},{\"Name\":\"Avalanche Fuji testnet\",\"Url\":\"https://ava-testnet.public.blastapi.io/ext/bc/C/rpc\",\"IsTestNet\":true,\"IsDefault\":false},{\"Name\":\"Gnosis mainnet\",\"Url\":\"https://rpc.gnosischain.com\",\"IsTestNet\":false,\"IsDefault\":false},{\"Name\":\"Gnosis Chiado Testnet\",\"Url\":\"https://rpc.chiadochain.net\",\"IsTestNet\":true,\"IsDefault\":false}].\r\nFollowing are wallets with addresses:[{\"IsDefault\":false,\"IsArchived\":false,\"Addresses\":[\"0x112ac08DB6b96e259f00BF0400D8045Fb5a0F921\",\"0x5DEe804A80D37D1e32bFC0FB8BBCf420ee9CB418\",\"0x44Ef414Fb95ae324f2e926Fe19a97ef5c563a06f\",\"0x397b5d50D59B3C01286B6A785bbb8D3219904d6c\",\"0xAa11E5c76bFdba59DC3C8bd6E9E06260b979f535\",\"0x4f3C16C63B3E6A79dc9BEFDF3c788eD19A8634D8\",\"0xa9b4eB193D52C3EA07ac24a6AbA6E62016a24C14\",\"0xAE0BD432c85ebb75277A10E08A4BB8634A05CC14\",\"0x063035cEfDA75D2610a54e972beea2D60A7bF95A\",\"0x331ec7bd8713888233cfA8b4C03c448Ecc468Cb7\",\"0x64Ef6A44ef5e9066631fAC52174590A63982C6ab\",\"0x83be6941F093e38499c561DFA03d7c3446DF7404\",\"0xeB18ac90e21F6A290Ac87dfF0Ced31Ebf1043783\",\"0x6Dca35746b6e4768b8e1d912cc0813B20662BE4C\",\"0x0bA3dB9F61b766Da819221D132A9243E10247210\",\"0x30467aF2E930AF821D41913a7B5f62B459a55afD\",\"0xae6bd6DC80eF23CA2F836a8207E6101F07529c3c\",\"0x572B9321253D80254112E6DBFA93032A9906242d\",\"0xAC4B733cDCcE9AF7dcE0eDD6C56Eb8f9a43e3589\",\"0xe36C7F9a6Ffb169d5F458F6eCF3855C890998c2a\"],\"Name\":\"Default\",\"Seed\":\"\"}]\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"GetAddress\", \"Parameters\": [], \"ReturnValue\": {\"Type\": \"String\", \"VariableName\": \"publicKey\"}}"
    },
    "answer": "{\"FunctionName\": \"GetAddress\", \"Parameters\": [], \"ReturnValue\": {\"Type\": \"String\", \"VariableName\": \"publicKey\"}}",
    "hash": "5a21c18050c076124410bbab2015ce23e907682054cf4c6282969614888a17d7",
    "Created": "2023-09-11T10:47:42.3109894Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nRead the description of each module, then determine which module to use\r\nUser would like to use PLang.Modules.MessageModule\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "[message] get my public key for messages write it to %publicKey%",
      "assistant": "This is a list of modules you can choose from\r\n## modules starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules ends ##\r\n\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"GetPublicKey\",\n\"StepDescription\": \"Retrieve the public key for messages and store it in the variable 'publicKey'\",\n\"Modules\": [\"PLang.Modules.MessageModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"GetPublicKey\",\n\"StepDescription\": \"Retrieve the public key for messages and store it in the variable 'publicKey'\",\n\"Modules\": [\"PLang.Modules.MessageModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "49914cf20a9f49e2c2aaa668b57825eaa2eae2f4c2f2a0cbd3f2c72a81f2f9a0",
    "Created": "2023-09-11T11:03:43.1403163Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: [message] get my public key for messages write it to %publicKey%",
      "assistant": "## functions available defined in csharp ##\r\nString GetPublicKey() \nvoid Listen(String variableName, String goalName, String? appName, Nullable`1? listenFromDateTime) \nvoid SendPrivateMessageToMyself(String content) \nvoid SendPrivateMessage(String content, String npubReceiverPublicKey) \nvoid GetPrivateMessage() \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%publicKey%\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"GetPublicKey\",\n\"Parameters\": [],\n\"ReturnValue\": {\"Type\": \"String\",\n\"VariableName\": \"publicKey\"}}"
    },
    "answer": "{\"FunctionName\": \"GetPublicKey\",\n\"Parameters\": [],\n\"ReturnValue\": {\"Type\": \"String\",\n\"VariableName\": \"publicKey\"}}",
    "hash": "6e578f0c387f99c1ff1b0556b7f967199804a84a89123d8544e699fcffdf33eb",
    "Created": "2023-09-11T11:03:47.634864Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\nUser wants to use PLang.Modules.MessageModule\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32},\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "[message] get my public key for messages write to %publicKey%\n    cache for 5 minutes",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"GetPublicKey\",\n\"StepDescription\": \"Retrieve the public key for messages and store it in the variable %publicKey%\",\n\"Modules\": [\"PLang.Modules.MessageModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": {\"TimeInMilliseconds\": 300000,\n\"CacheKey\": \"publicKey\",\n\"CachingType\": 0},\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"GetPublicKey\",\n\"StepDescription\": \"Retrieve the public key for messages and store it in the variable %publicKey%\",\n\"Modules\": [\"PLang.Modules.MessageModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": {\"TimeInMilliseconds\": 300000,\n\"CacheKey\": \"publicKey\",\n\"CachingType\": 0},\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "e620356f9ffc8193757d00ed5147b952bd3dc5d9b55b0228971219e803f2a146",
    "Created": "2023-09-11T12:42:06.5274933Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: [message] get my public key for messages write to %publicKey%\n    cache for 5 minutes",
      "assistant": "## functions available defined in csharp ##\r\nString GetPublicKey() \nvoid Listen(String variableName, String goalName, String? appName, Nullable`1? listenFromDateTime) \nvoid SendPrivateMessageToMyself(String content) \nvoid SendPrivateMessage(String content, String npubReceiverPublicKey) \nvoid GetPrivateMessage() \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%publicKey%\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"GetPublicKey\",\n\"Parameters\": [],\n\"ReturnValue\": {\"Type\": \"String\",\n\"VariableName\": \"publicKey\"}}"
    },
    "answer": "{\"FunctionName\": \"GetPublicKey\",\n\"Parameters\": [],\n\"ReturnValue\": {\"Type\": \"String\",\n\"VariableName\": \"publicKey\"}}",
    "hash": "6423bdecdefdbe1e58cf31c694c3ff30146ebdcb7d4ada65169da79cea7b488b",
    "Created": "2023-09-11T12:42:10.0702318Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32},\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "send private message to me\n    content: Hi, how are you? %Now%\n    retry 3 times, 1 sec between\n    call !SendError on exception",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SendPrivateMessage\",\n\"StepDescription\": \"Send a private message with the content 'Hi, how are you? %Now%' to the user. If the message fails to send, retry 3 times with a 1 second delay between each attempt. If an exception occurs, call the function 'SendError'.\",\n\"Modules\": [\"PLang.Modules.MessageModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": {\"IgnoreErrors\": false, \"Except\": [\"!SendError\"]},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 1000}}"
    },
    "answer": "{\"StepName\": \"SendPrivateMessage\",\n\"StepDescription\": \"Send a private message with the content 'Hi, how are you? %Now%' to the user. If the message fails to send, retry 3 times with a 1 second delay between each attempt. If an exception occurs, call the function 'SendError'.\",\n\"Modules\": [\"PLang.Modules.MessageModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": {\"IgnoreErrors\": false, \"Except\": [\"!SendError\"]},\n\"RetryHandler\": {\"RetryCount\": 3, \"RetryDelayInMilliseconds\": 1000}}",
    "hash": "4162a7bb219f04c8e3fef3d0bc484602dd0b742dd6a65e8997ad8fa2ea5ec49a",
    "Created": "2023-09-11T12:42:26.6183461Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: send private message to me\n    content: Hi, how are you? %Now%\n    retry 3 times, 1 sec between\n    call !SendError on exception",
      "assistant": "## functions available defined in csharp ##\r\nString GetPublicKey() \nvoid Listen(String variableName, String goalName, String? appName, Nullable`1? listenFromDateTime) \nvoid SendPrivateMessageToMyself(String content) \nvoid SendPrivateMessage(String content, String npubReceiverPublicKey) \nvoid GetPrivateMessage() \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%Now%\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"SendPrivateMessageToMyself\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"content\",\n\"Value\": \"Hi, how are you? %Now%\"}],\n\"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"SendPrivateMessageToMyself\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"content\",\n\"Value\": \"Hi, how are you? %Now%\"}],\n\"ReturnValue\": null}",
    "hash": "c4bfbfe35d014ce15f41f449aefe13af3280be9e723a370df322ad6dd8e3411c",
    "Created": "2023-09-11T12:42:32.7206783Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\nUser wants to use PLang.Modules.MessageModule\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32},\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "[message] get my public key for messages write to %publicKey%\n    cache for 5 minutes from now",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"GetPublicKey\",\n\"StepDescription\": \"Retrieve the public key for messages and store it in the variable %publicKey%\",\n\"Modules\": [\"PLang.Modules.MessageModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": {\"TimeInMilliseconds\": 300000,\n\"CacheKey\": \"publicKey\",\n\"CachingType\": 1},\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"GetPublicKey\",\n\"StepDescription\": \"Retrieve the public key for messages and store it in the variable %publicKey%\",\n\"Modules\": [\"PLang.Modules.MessageModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": {\"TimeInMilliseconds\": 300000,\n\"CacheKey\": \"publicKey\",\n\"CachingType\": 1},\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "3b096138e59fc40a7fced310eac21aafb12b7fde63a8c23d197d32867a6f72e2",
    "Created": "2023-09-11T12:45:30.4466121Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: [message] get my public key for messages write to %publicKey%\n    cache for 5 minutes from now",
      "assistant": "## functions available defined in csharp ##\r\nString GetPublicKey() \nvoid Listen(String variableName, String goalName, String? appName, Nullable`1? listenFromDateTime) \nvoid SendPrivateMessageToMyself(String content) \nvoid SendPrivateMessage(String content, String npubReceiverPublicKey) \nvoid GetPrivateMessage() \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%publicKey%\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"GetPublicKey\",\n\"Parameters\": [],\n\"ReturnValue\": {\"Type\": \"String\",\n\"VariableName\": \"publicKey\"}}"
    },
    "answer": "{\"FunctionName\": \"GetPublicKey\",\n\"Parameters\": [],\n\"ReturnValue\": {\"Type\": \"String\",\n\"VariableName\": \"publicKey\"}}",
    "hash": "71c0d22ee7cbb939d35e25ed5f9575cf0c6812462ab599053920f5304634f21e",
    "Created": "2023-09-11T12:45:34.0359993Z"
  }
]
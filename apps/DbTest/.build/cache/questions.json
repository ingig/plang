[
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32},\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "create table comments, columns id, text, created(datetime, now)",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CreateCommentsTable\",\n\"StepDescription\": \"Create a new table named 'comments' with columns 'id', 'text', and 'created'. The 'created' column should be of type datetime and default to the current time.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"CreateCommentsTable\",\n\"StepDescription\": \"Create a new table named 'comments' with columns 'id', 'text', and 'created'. The 'created' column should be of type datetime and default to the current time.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "8acc18ff6ff224ef07749438a4d572016759dab05e3f1f851448a927027308b6",
    "Created": "2023-09-14T10:30:02.6690093Z"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "System.AggregateException: One or more errors occurred. (Following databases are supported: . Type in what database you would like to use?)\r\n ---> PLang.Exceptions.AskUser.AskUserDatabaseType: Following databases are supported: . Type in what database you would like to use?\r\n   at PLang.Modules.DbModule.ModuleSettings.CreateDataSource() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\DbModule\\ModuleSettings.cs:line 55\r\n   at PLang.Modules.DbModule.ModuleSettings.GetCurrentDatasource() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\DbModule\\ModuleSettings.cs:line 149\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n   at PLang.Utils.Instance.<>c__DisplayClass3_0.<RegisterForPLang>b__9(IServiceFactory factory) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Utils\\Container.cs:line 183\r\n   at DynamicMethod(Object[], Scope)\r\n   at LightInject.PerContainerLifetime.GetInstance(GetInstanceDelegate createInstance, Scope scope, Object[] arguments)\r\n   at DynamicMethod(Object[], Scope)\r\n   at LightInject.ServiceContainer.GetInstance(Type serviceType)\r\n   at PLang.Modules.BuilderFactory.Create(String builderName) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BuilderFactory.cs:line 37\r\n   at PLang.Building.InstructionBuilder.BuildInstruction(StepBuilder stepBuilder, Goal goal, GoalStep step, String module, Int32 stepIndex, List`1 excludeModules, Int32 errorCount) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\InstructionBuilder.cs:line 47\r\n   at PLang.Building.StepBuilder.BuildStep(Goal goal, Int32 stepIndex, List`1 excludeModules, Int32 errorCount) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\StepBuilder.cs:line 102",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There was an error because the system couldn't identify the type of database you want to use.\",\n\"howToFix\": \"Please specify the type of database you want to use. Make sure it is one of the supported databases.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There was an error because the system couldn't identify the type of database you want to use.\",\n\"howToFix\": \"Please specify the type of database you want to use. Make sure it is one of the supported databases.\"\n}",
    "hash": "26643b6cfe7d79ca23ee23cedb14373b5c1fd21423979f95fc5fcb6cbac1d116",
    "Created": "2023-09-14T09:49:02.3686703Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32},\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "insert into comments %text%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"InsertIntoComments\",\n\"StepDescription\": \"Insert the value of variable %text% into the comments table in the database.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"InsertIntoComments\",\n\"StepDescription\": \"Insert the value of variable %text% into the comments table in the database.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "d3685e1e9332f73ca9f43256cd2d1cd060b4d5f51a00f9498a247176af67c0a5",
    "Created": "2023-09-14T09:50:03.1933465Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32},\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "select everything from comments",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SelectAllFromComments\",\n\"StepDescription\": \"This step involves selecting all data from the 'comments' table in the database.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"SelectAllFromComments\",\n\"StepDescription\": \"This step involves selecting all data from the 'comments' table in the database.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "6933732ceb8f2f73b8fe6b9b926f05888c5ecefa2ad70bf52053bc7891a08012",
    "Created": "2023-09-14T09:49:15.8491498Z"
  },
  {
    "question": {
      "type": "DbModule",
      "system": "",
      "question": "\r\nGive me sql statement to list all the tables and views in my database  on System.Data.SQLite.SQLiteConnection.\r\nGive me sql statement on how to get all column names and type in a table, table name should be @TableName, database name is @Database\r\nGive your response in JSON, scheme\r\n{\"SelectTablesAndViewsInMyDatabaseSqlStatement\": String,\n\"SelectColumnsFromTablesSqlStatement\": String}\r\n\r\nBe concise",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"SelectTablesAndViewsInMyDatabaseSqlStatement\": \"SELECT name FROM sqlite_master WHERE type IN ('table','view');\",\n\"SelectColumnsFromTablesSqlStatement\": \"PRAGMA table_info(@TableName);\"\n}"
    },
    "answer": "{\n\"SelectTablesAndViewsInMyDatabaseSqlStatement\": \"SELECT name FROM sqlite_master WHERE type IN ('table','view');\",\n\"SelectColumnsFromTablesSqlStatement\": \"PRAGMA table_info(@TableName);\"\n}",
    "hash": "1f813bebac15ba9adea9ad5b3c2ecdbe001c8eebdd2103b990ea0effae595f96",
    "Created": "2023-09-14T10:32:05.2135626Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: create table comments, columns id, text, created(datetime, now)",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\nCreate SQL statement that works with System.Data.SQLite.SQLiteConnection.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the statement is to create a table, the id (primary key) and foreign keys MUST be bigInt/long, unless user specifically defines otherwise. \r\n\r\n## table & views in db start ##\r\nnull\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Execute\",\n\"Parameters\": [\n    {\"Type\": \"String\",\n    \"Name\": \"sql\",\n    \"Value\": \"CREATE TABLE comments (id INTEGER PRIMARY KEY, text TEXT, created DATETIME DEFAULT CURRENT_TIMESTAMP)\"}\n],\n\"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Execute\",\n\"Parameters\": [\n    {\"Type\": \"String\",\n    \"Name\": \"sql\",\n    \"Value\": \"CREATE TABLE comments (id INTEGER PRIMARY KEY, text TEXT, created DATETIME DEFAULT CURRENT_TIMESTAMP)\"}\n],\n\"ReturnValue\": null}",
    "hash": "a1e99fb64940d54d06a95cc7181c65d95a862e10aecc52558a7a14bc06cd7bae",
    "Created": "2023-09-14T10:32:59.0241771Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: insert into comments %text%",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%text%\r\n## defined variables ##\nCreate SQL statement that works with System.Data.SQLite.SQLiteConnection.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the statement is to create a table, the id (primary key) and foreign keys MUST be bigInt/long, unless user specifically defines otherwise. \r\n\r\n## table & views in db start ##\r\nnull\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Insert\", \n\"Parameters\": [\n    {\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"insert into comments values (@text)\"},\n    {\"Type\": \"Dictionary`2\", \"Name\": \"Parameters\", \"Value\": \"{\\\"@text\\\": \\\"%text%\\\"}\"}\n], \n\"ReturnValue\": {\"Type\": \"Int32\", \"VariableName\": \"rowsAffected\"}}"
    },
    "answer": "{\"FunctionName\": \"Insert\", \n\"Parameters\": [\n    {\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"insert into comments values (@text)\"},\n    {\"Type\": \"Dictionary`2\", \"Name\": \"Parameters\", \"Value\": \"{\\\"@text\\\": \\\"%text%\\\"}\"}\n], \n\"ReturnValue\": {\"Type\": \"Int32\", \"VariableName\": \"rowsAffected\"}}",
    "hash": "3d1c430b85504f083c365f0b407dfe55cf0ef5ad20fd77740f589329e89c89c8",
    "Created": "2023-09-14T10:33:08.7699839Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: select everything from comments",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\nCreate SQL statement that works with System.Data.SQLite.SQLiteConnection.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the statement is to create a table, the id (primary key) and foreign keys MUST be bigInt/long, unless user specifically defines otherwise. \r\n\r\n## table & views in db start ##\r\nnull\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Select\", \n\"Parameters\": [{\"Type\": \"String\", \n\"Name\": \"sql\", \n\"Value\": \"SELECT * FROM comments\"}], \n\"ReturnValue\": {\"Type\": \"Object\", \n\"VariableName\": \"result\"}}"
    },
    "answer": "{\"FunctionName\": \"Select\", \n\"Parameters\": [{\"Type\": \"String\", \n\"Name\": \"sql\", \n\"Value\": \"SELECT * FROM comments\"}], \n\"ReturnValue\": {\"Type\": \"Object\", \n\"VariableName\": \"result\"}}",
    "hash": "0c5c05116f9d7d301d1ae980a699c3b39d64e46e85c3994fc674cf274ab676e6",
    "Created": "2023-09-14T10:33:17.2482208Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32},\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "insert into comments text=%text%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"InsertComment\",\n\"StepDescription\": \"Insert the provided text into the comments section of the database.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"InsertComment\",\n\"StepDescription\": \"Insert the provided text into the comments section of the database.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "096b90a1847763c763d4cfb00dd7c8cb2695b2590d06feeba9614fdc22026ad1",
    "Created": "2023-09-15T16:36:02.9997036Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: insert into comments text=%text%",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%text%\r\n## defined variables ##\nCreate SQL statement that works with System.Data.SQLite.SQLiteConnection.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the statement is to create a table, the id (primary key) and foreign keys MUST be bigInt/long, unless user specifically defines otherwise. \r\n\r\n## table & views in db start ##\r\nnull\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Insert\", \n\"Parameters\": [\n    {\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"insert into comments text=@text\"},\n    {\"Type\": \"Dictionary`2\", \"Name\": \"Parameters\", \"Value\": \"{\\\"@text\\\": \\\"%text%\\\"}\"}\n], \n\"ReturnValue\": {\"Type\": \"Int32\", \"VariableName\": \"rowsAffected\"}}"
    },
    "answer": "{\"FunctionName\": \"Insert\", \n\"Parameters\": [\n    {\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"insert into comments text=@text\"},\n    {\"Type\": \"Dictionary`2\", \"Name\": \"Parameters\", \"Value\": \"{\\\"@text\\\": \\\"%text%\\\"}\"}\n], \n\"ReturnValue\": {\"Type\": \"Int32\", \"VariableName\": \"rowsAffected\"}}",
    "hash": "22ef654530b555aba96cac6a3cd7c2f7698f22961e12d3e4dacdf42137e63cd7",
    "Created": "2023-09-15T16:36:11.3735116Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32},\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "insert into comments tbl, text=%text%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"InsertIntoCommentsTable\",\n\"StepDescription\": \"Insert the value of variable %text% into the comments table in the database.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"InsertIntoCommentsTable\",\n\"StepDescription\": \"Insert the value of variable %text% into the comments table in the database.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "b44d8bd1c42717a958bc6432c4dd5360c4b8bae86368a4ba8801fbe1d5753fdf",
    "Created": "2023-09-17T13:29:37.5905889Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"tableNames\": String[],\n\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": ReturnValue = null}",
      "question": "command: insert into comments tbl, text=%text%",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%text%\r\n## defined variables ##\nCreate SQL statement that works with System.Data.SQLite.SQLiteConnection.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\ntableNames: is the tables in the sql statement.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the statement is to create a table, the id (primary key) and foreign keys MUST be bigInt/long, unless user specifically defines otherwise. \r\n\r\n## table & views in db start ##\r\nnull\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"tableNames\": [\"comments\"],\n\"FunctionName\": \"Insert\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"sql\",\n\"Value\": \"insert into comments (text) values (@text)\"},\n{\"Type\": \"Dictionary`2\",\n\"Name\": \"Parameters\",\n\"Value\": \"{\\\"@text\\\": \\\"%text%\\\"}\"}],\n\"ReturnValue\": null}"
    },
    "answer": "{\"tableNames\": [\"comments\"],\n\"FunctionName\": \"Insert\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"sql\",\n\"Value\": \"insert into comments (text) values (@text)\"},\n{\"Type\": \"Dictionary`2\",\n\"Name\": \"Parameters\",\n\"Value\": \"{\\\"@text\\\": \\\"%text%\\\"}\"}],\n\"ReturnValue\": null}",
    "hash": "c027c9e6289a32dc0c0469612e6803ece97375ee905c8854abfdc1b94402d90d",
    "Created": "2023-09-17T13:29:46.4040562Z"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "System.AggregateException: One or more errors occurred. (The filename, directory name, or volume label syntax is incorrect. : 'C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLangExamples\\apps\\DbTest\\=C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLangExamples\\apps\\DbTest\\.db\\data.sqlite')\r\n ---> System.IO.IOException: The filename, directory name, or volume label syntax is incorrect. : 'C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLangExamples\\apps\\DbTest\\=C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLangExamples\\apps\\DbTest\\.db\\data.sqlite'\r\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)\r\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)\r\n   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)\r\n   at System.IO.Strategies.FileStreamHelpers.ChooseStrategyCore(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)\r\n   at System.IO.File.Create(String path)\r\n   at System.IO.Abstractions.FileWrapper.Create(String path)\r\n   at PLang.SafeFileSystem.PLangFile.Create(String path) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\SafeFileSystem\\PLangFile.cs:line 93\r\n   at PLang.Modules.DbModule.ModuleSettings.Test(Type dbType, String connectionString) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\DbModule\\ModuleSettings.cs:line 206\r\n   at PLang.Modules.DbModule.ModuleSettings.SetDatabaseConnectionString(String dataSourceName, String typeFullName, String regexToExtractDatabaseNameFromConnectionString, String databaseConnectionString, Boolean keepHistory, Boolean isDefault) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\DbModule\\ModuleSettings.cs:line 88\r\n   at PLang.Modules.DbModule.ModuleSettings.CreateDataSource() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\DbModule\\ModuleSettings.cs:line 46\r\n   at PLang.Modules.DbModule.ModuleSettings.GetCurrentDatasource() in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\DbModule\\ModuleSettings.cs:line 150\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n   at PLang.Utils.Instance.<>c__DisplayClass3_0.<RegisterForPLang>b__9(IServiceFactory factory) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Utils\\Container.cs:line 184\r\n   at DynamicMethod(Object[], Scope)\r\n   at LightInject.PerContainerLifetime.GetInstance(GetInstanceDelegate createInstance, Scope scope, Object[] arguments)\r\n   at DynamicMethod(Object[], Scope)\r\n   at LightInject.ServiceContainer.GetInstance(Type serviceType)\r\n   at PLang.Modules.BuilderFactory.Create(String builderName) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BuilderFactory.cs:line 37\r\n   at PLang.Building.InstructionBuilder.BuildInstruction(StepBuilder stepBuilder, Goal goal, GoalStep step, String module, Int32 stepIndex, List`1 excludeModules, Int32 errorCount) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\InstructionBuilder.cs:line 47\r\n   at PLang.Building.StepBuilder.BuildStep(Goal goal, Int32 stepIndex, List`1 excludeModules, Int32 errorCount) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\StepBuilder.cs:line 103",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"The filename, directory name, or volume label syntax is incorrect. The error occurred while trying to create a file at the specified path.\",\n\"howToFix\": \"Please check the file path 'C:\\\\Users\\\\Ingi Gauti\\\\source\\\\repos\\\\ingig\\\\PLangExamples\\\\apps\\\\DbTest\\\\=C:\\\\Users\\\\Ingi Gauti\\\\source\\\\repos\\\\ingig\\\\PLangExamples\\\\apps\\\\DbTest\\\\.db\\\\data.sqlite'. It seems to be incorrect or malformed. Make sure the path is correctly formatted and try again.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"The filename, directory name, or volume label syntax is incorrect. The error occurred while trying to create a file at the specified path.\",\n\"howToFix\": \"Please check the file path 'C:\\\\Users\\\\Ingi Gauti\\\\source\\\\repos\\\\ingig\\\\PLangExamples\\\\apps\\\\DbTest\\\\=C:\\\\Users\\\\Ingi Gauti\\\\source\\\\repos\\\\ingig\\\\PLangExamples\\\\apps\\\\DbTest\\\\.db\\\\data.sqlite'. It seems to be incorrect or malformed. Make sure the path is correctly formatted and try again.\"\n}",
    "hash": "7b2b1be95317ed55b3cc03e0ed4f6777477ea20a927a66fd8f5624b7b7d41ec8",
    "Created": "2023-09-17T13:37:15.1107926Z"
  },
  {
    "question": {
      "type": "DbModule",
      "system": "",
      "question": "\r\nGive me sql statement to list all the tables and views in my database data.sqlite on System.Data.SQLite.SQLiteConnection.\r\nGive me sql statement on how to get all column names and type in a table, table name should be @TableName, database name is @Database\r\nGive your response in JSON, scheme\r\n{\"SelectTablesAndViewsInMyDatabaseSqlStatement\": String,\n\"SelectColumnsFromTablesSqlStatement\": String}\r\n\r\nBe concise",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"SelectTablesAndViewsInMyDatabaseSqlStatement\": \"SELECT name FROM sqlite_master WHERE type IN ('table','view');\",\n\"SelectColumnsFromTablesSqlStatement\": \"PRAGMA table_info(@TableName);\"\n}"
    },
    "answer": "{\n\"SelectTablesAndViewsInMyDatabaseSqlStatement\": \"SELECT name FROM sqlite_master WHERE type IN ('table','view');\",\n\"SelectColumnsFromTablesSqlStatement\": \"PRAGMA table_info(@TableName);\"\n}",
    "hash": "fed2d6d0b38487b2a4cab8b681f89dfb9d91d56924bc0aa87d9ab8daf2467bed",
    "Created": "2023-09-17T13:39:40.6690877Z"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "System.AggregateException: One or more errors occurred. (The given key '__CurrentDataSourceName__' was not present in the dictionary.)\r\n ---> System.Collections.Generic.KeyNotFoundException: The given key '__CurrentDataSourceName__' was not present in the dictionary.\r\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\r\n   at PLang.Modules.DbModule.ModuleSettings.GetCurrentDatasource()\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n   at PLang.Utils.Instance.<>c__DisplayClass3_0.<RegisterForPLang>b__9(IServiceFactory factory)\r\n   at DynamicMethod(Object[], Scope)\r\n   at LightInject.PerContainerLifetime.GetInstance(GetInstanceDelegate createInstance, Scope scope, Object[] arguments)\r\n   at DynamicMethod(Object[], Scope)\r\n   at LightInject.ServiceContainer.GetInstance(Type serviceType)\r\n   at PLang.Modules.BuilderFactory.Create(String builderName)\r\n   at PLang.Building.InstructionBuilder.BuildInstruction(StepBuilder stepBuilder, Goal goal, GoalStep step, String module, Int32 stepIndex, List`1 excludeModules, Int32 errorCount)\r\n   at PLang.Building.StepBuilder.BuildStep(Goal goal, Int32 stepIndex, List`1 excludeModules, Int32 errorCount)",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"An error occurred because the system couldn't find the key '__CurrentDataSourceName__' in the dictionary.\",\n\"howToFix\": \"Please ensure that the key '__CurrentDataSourceName__' is correctly added to the dictionary. If you're unsure how to do this, you may need to consult the documentation or seek help from a developer.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"An error occurred because the system couldn't find the key '__CurrentDataSourceName__' in the dictionary.\",\n\"howToFix\": \"Please ensure that the key '__CurrentDataSourceName__' is correctly added to the dictionary. If you're unsure how to do this, you may need to consult the documentation or seek help from a developer.\"\n}",
    "hash": "2551183ec0169fdf3f992e4d59ec9fee4e15d5396e963e16687d060455fe847e",
    "Created": "2023-09-17T13:40:30.9602546Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\nValidate that the sql statement and parameters are valid. If they are not, then fix them\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: insert into comments tbl, text=%text%",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%text%\r\n## defined variables ##\nCreate SQL statement that works with System.Data.SQLite.SQLiteConnection.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\ntableNames: is the tables in the sql statement.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the statement is to create a table, the id (primary key) and foreign keys MUST be bigInt/long, unless user specifically defines otherwise. \r\n\r\n## table & views in db start ##\r\nnull\r\n## table & view in db end ##\r\n\n{\"tableNames\":[\"comments\"],\"FunctionName\":\"Insert\",\"Parameters\":[{\"Type\":\"String\",\"Name\":\"sql\",\"Value\":\"insert into comments (text) values (@text)\"},{\"Type\":\"Dictionary`2\",\"Name\":\"Parameters\",\"Value\":\"{\\\"@text\\\": \\\"%text%\\\"}\"}],\"ReturnValue\":null}\n\n\ncomments\nnull### table info ends ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Insert\", \"Parameters\": [{\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"insert into comments (text) values (@text)\"}, {\"Type\": \"Dictionary`2\", \"Name\": \"Parameters\", \"Value\": \"{\\\"@text\\\": \\\"%text%\\\"}\"}], \"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Insert\", \"Parameters\": [{\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"insert into comments (text) values (@text)\"}, {\"Type\": \"Dictionary`2\", \"Name\": \"Parameters\", \"Value\": \"{\\\"@text\\\": \\\"%text%\\\"}\"}], \"ReturnValue\": null}",
    "hash": "c71e2880bac5fe0b3e69892fd25250b090f7d5848703f622e218002eff8a6452",
    "Created": "2023-09-17T13:49:49.0452543Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: insert into comments tbl, text=%text%",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%text%\r\n## defined variables ##\nValidate that the sql statement and parameters are valid. If they are not, then fix themIn previous request you generated following scheme:{\"tableNames\":[\"comments\"],\"FunctionName\":\"Insert\",\"Parameters\":[{\"Type\":\"String\",\"Name\":\"sql\",\"Value\":\"insert into comments (text) values (@text)\"},{\"Type\":\"Dictionary`2\",\"Name\":\"Parameters\",\"Value\":\"{\\\"@text\\\": \\\"%text%\\\"}\"}],\"ReturnValue\":null}",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Insert\", \"Parameters\": [{\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"insert into comments (text) values (@text)\"}, {\"Type\": \"Dictionary`2\", \"Name\": \"Parameters\", \"Value\": \"{\\\"@text\\\": \\\"%text%\\\"}\"}], \"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Insert\", \"Parameters\": [{\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"insert into comments (text) values (@text)\"}, {\"Type\": \"Dictionary`2\", \"Name\": \"Parameters\", \"Value\": \"{\\\"@text\\\": \\\"%text%\\\"}\"}], \"ReturnValue\": null}",
    "hash": "ed046b38efc619bc7c6ad63934aa27eb445453299606d33fba94d627fbe2f7a0",
    "Created": "2023-09-17T14:04:05.71891Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32},\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "select all from comments",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SelectAllFromComments\",\n\"StepDescription\": \"This step involves executing a SQL query to select all records from the 'comments' table in the database.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"SelectAllFromComments\",\n\"StepDescription\": \"This step involves executing a SQL query to select all records from the 'comments' table in the database.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "753306553595550f654aa6eed672219a1fe476cd7f0ce41fa14792680a3acb54",
    "Created": "2023-09-17T14:04:42.558779Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"tableNames\": String[],\n\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": ReturnValue = null}",
      "question": "command: select all from comments",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\nCreate SQL statement that works with System.Data.SQLite.SQLiteConnection.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\ntableNames: is the tables in the sql statement.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the statement is to create a table, the id (primary key) and foreign keys MUST be bigInt/long, unless user specifically defines otherwise. \r\n\r\n## table & views in db start ##\r\nnull\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"tableNames\": [\"comments\"],\n\"FunctionName\": \"Select\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"sql\",\n\"Value\": \"SELECT * FROM comments\"}],\n\"ReturnValue\": null}"
    },
    "answer": "{\"tableNames\": [\"comments\"],\n\"FunctionName\": \"Select\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"sql\",\n\"Value\": \"SELECT * FROM comments\"}],\n\"ReturnValue\": null}",
    "hash": "b22f14bb59baa3d0d83fe2f3a27f6fec08c268f69707374d3412ff62e1caaea9",
    "Created": "2023-09-17T14:04:51.3971876Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: select all from comments",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\nValidate that the sql statement and parameters are valid. If they are not, then fix themIn previous request you generated following scheme:{\"tableNames\":[\"comments\"],\"FunctionName\":\"Select\",\"Parameters\":[{\"Type\":\"String\",\"Name\":\"sql\",\"Value\":\"SELECT * FROM comments\"}],\"ReturnValue\":null}",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Select\", \"Parameters\": [{\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"SELECT * FROM comments\"}], \"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Select\", \"Parameters\": [{\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"SELECT * FROM comments\"}], \"ReturnValue\": null}",
    "hash": "da1223f81ea7f859db4e903cda293063d2731bdc33a112051758f4fcb5b9315c",
    "Created": "2023-09-17T14:04:57.8575355Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32},\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "create tbl comments, columns id, text, created(datetime, now)",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CreateCommentsTable\",\n\"StepDescription\": \"Create a new table named 'comments' with columns 'id', 'text', and 'created'. The 'created' column should be of type datetime and default to the current time.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"CreateCommentsTable\",\n\"StepDescription\": \"Create a new table named 'comments' with columns 'id', 'text', and 'created'. The 'created' column should be of type datetime and default to the current time.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "a8e0113a339b5dd566470cefdfe2a519c32f8db6a570df9a80ecd2e853b0ae13",
    "Created": "2023-09-17T18:15:23.4761177Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"tableNames\": String[],\n\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": ReturnValue = null}",
      "question": "command: create tbl comments, columns id, text, created(datetime, now)",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\nCreate SQL statement that works with System.Data.SQLite.SQLiteConnection.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\ntableNames: is the tables in the sql statement.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the statement is to create a table, the id (primary key) and foreign keys MUST be bigInt/long, unless user specifically defines otherwise. \r\n\r\n## table & views in db start ##\r\n[{\"name\":\"comments\"}]\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"tableNames\": [\"comments\"],\n\"FunctionName\": \"Execute\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"sql\",\n\"Value\": \"CREATE TABLE comments (id INTEGER PRIMARY KEY, text TEXT, created DATETIME DEFAULT CURRENT_TIMESTAMP)\"}],\n\"ReturnValue\": null}"
    },
    "answer": "{\"tableNames\": [\"comments\"],\n\"FunctionName\": \"Execute\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"sql\",\n\"Value\": \"CREATE TABLE comments (id INTEGER PRIMARY KEY, text TEXT, created DATETIME DEFAULT CURRENT_TIMESTAMP)\"}],\n\"ReturnValue\": null}",
    "hash": "c06ba44a054e321a07146740cbb3f0466ec8bb7e1db9215392df8a01d6a2a8d9",
    "Created": "2023-09-17T18:16:19.4176503Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: create tbl comments, columns id, text, created(datetime, now)",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\nValidate that the sql statement and parameters are valid. If they are not, then fix themIn previous request you generated following scheme:{\"tableNames\":[\"comments\"],\"FunctionName\":\"Execute\",\"Parameters\":[{\"Type\":\"String\",\"Name\":\"sql\",\"Value\":\"CREATE TABLE comments (id INTEGER PRIMARY KEY, text TEXT, created DATETIME DEFAULT CURRENT_TIMESTAMP)\"}],\"ReturnValue\":null}### table info starts ### \ncomments\n[{\"cid\":0,\"name\":\"id\",\"type\":\"INTEGER\",\"notnull\":0,\"dflt_value\":null,\"pk\":1},{\"cid\":1,\"name\":\"text\",\"type\":\"TEXT\",\"notnull\":0,\"dflt_value\":null,\"pk\":0},{\"cid\":2,\"name\":\"created\",\"type\":\"DATETIME\",\"notnull\":0,\"dflt_value\":\"CURRENT_TIMESTAMP\",\"pk\":0}] ### table info ends ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Execute\", \"Parameters\": [{\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"CREATE TABLE comments (id INTEGER PRIMARY KEY, text TEXT, created DATETIME DEFAULT CURRENT_TIMESTAMP)\"}], \"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Execute\", \"Parameters\": [{\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"CREATE TABLE comments (id INTEGER PRIMARY KEY, text TEXT, created DATETIME DEFAULT CURRENT_TIMESTAMP)\"}], \"ReturnValue\": null}",
    "hash": "ea3bfca784f501844a35b908b29d2300986256ebdde09d88561c1aa3296164f4",
    "Created": "2023-09-17T18:16:24.0531761Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32},\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "insert into comments  table, text=%text%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"InsertIntoCommentsTable\",\n\"StepDescription\": \"Insert the value of variable %text% into the 'comments' table in the database.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"InsertIntoCommentsTable\",\n\"StepDescription\": \"Insert the value of variable %text% into the 'comments' table in the database.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "2405531cd17ecb78e9d81e83fb93f4858b71e9aa1608f1d40356d22eda60ffc4",
    "Created": "2023-09-17T18:19:23.4071903Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"tableNames\": String[],\n\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": ReturnValue = null}",
      "question": "command: insert into comments  table, text=%text%",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%text%\r\n## defined variables ##\nCreate SQL statement that works with System.Data.SQLite.SQLiteConnection.\r\nYou MUST provide Parameters in Inputs if SQL has @parameter.\r\ntableNames: is the tables in the sql statement.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the statement is to create a table, the id (primary key) and foreign keys MUST be bigInt/long, unless user specifically defines otherwise. \r\n\r\n## table & views in db start ##\r\n[{\"name\":\"comments\"}]\r\n## table & view in db end ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"tableNames\": [\"comments\"],\n\"FunctionName\": \"Insert\",\n\"Parameters\": [\n    {\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"INSERT INTO comments (text) VALUES (@text)\"},\n    {\"Type\": \"Dictionary`2\", \"Name\": \"Parameters\", \"Value\": \"{\\\"@text\\\": \\\"%text%\\\"}\"}\n],\n\"ReturnValue\": null}"
    },
    "answer": "{\"tableNames\": [\"comments\"],\n\"FunctionName\": \"Insert\",\n\"Parameters\": [\n    {\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"INSERT INTO comments (text) VALUES (@text)\"},\n    {\"Type\": \"Dictionary`2\", \"Name\": \"Parameters\", \"Value\": \"{\\\"@text\\\": \\\"%text%\\\"}\"}\n],\n\"ReturnValue\": null}",
    "hash": "bbb4c426058b4d340c25dc7f660e2428907a5ae9f3d5181491393a6115920f03",
    "Created": "2023-09-17T18:19:33.6851247Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\nid MUST ALWAYS be included in the Parameter list. The id will be provided by the system using Snowflake id\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: insert into comments  table, text=%text%",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%text%\r\n## defined variables ##\nValidate that the sql statement and parameters are valid. If they are not, then fix themIn previous request you generated following scheme:{\"tableNames\":[\"comments\"],\"FunctionName\":\"Insert\",\"Parameters\":[{\"Type\":\"String\",\"Name\":\"sql\",\"Value\":\"INSERT INTO comments (text) VALUES (@text)\"},{\"Type\":\"Dictionary`2\",\"Name\":\"Parameters\",\"Value\":\"{\\\"@text\\\": \\\"%text%\\\"}\"}],\"ReturnValue\":null}### table info starts ### \ncomments\n[{\"cid\":0,\"name\":\"id\",\"type\":\"INTEGER\",\"notnull\":0,\"dflt_value\":null,\"pk\":1},{\"cid\":1,\"name\":\"text\",\"type\":\"TEXT\",\"notnull\":0,\"dflt_value\":null,\"pk\":0},{\"cid\":2,\"name\":\"created\",\"type\":\"DATETIME\",\"notnull\":0,\"dflt_value\":\"CURRENT_TIMESTAMP\",\"pk\":0}] ### table info ends ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Insert\",\n\"Parameters\": [\n    {\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"INSERT INTO comments (text) VALUES (@text)\"},\n    {\"Type\": \"Dictionary`2\", \"Name\": \"Parameters\", \"Value\": \"{\\\"@text\\\": \\\"%text%\\\"}\"}\n],\n\"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Insert\",\n\"Parameters\": [\n    {\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"INSERT INTO comments (text) VALUES (@text)\"},\n    {\"Type\": \"Dictionary`2\", \"Name\": \"Parameters\", \"Value\": \"{\\\"@text\\\": \\\"%text%\\\"}\"}\n],\n\"ReturnValue\": null}",
    "hash": "35bda059e2a952b142c48d50a0d3b82cf289a67ed98e270685e2c65ee71faf04",
    "Created": "2023-09-17T18:19:46.0774718Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32},\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "insert into comments table set text=%text%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"InsertIntoCommentsTable\",\n\"StepDescription\": \"This step involves inserting a value into the 'text' column of the 'comments' table in the database. The value to be inserted is stored in the variable %text%.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"InsertIntoCommentsTable\",\n\"StepDescription\": \"This step involves inserting a value into the 'text' column of the 'comments' table in the database. The value to be inserted is stored in the variable %text%.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "27f5ea24eb1715d66dbaad3c135d8705e9d19a5e9d0f9dbe5599becc6d5337da",
    "Created": "2023-09-17T18:24:54.2773783Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"tableNames\": String[],\n\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": ReturnValue = null}",
      "question": "command: insert into comments table set text=%text%",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%text%\r\n## defined variables ##\nCreate SQL statement that works with System.Data.SQLite.SQLiteConnection.\r\nYou MUST provide Parameters if SQL has @parameter.\r\ntableNames: is the tables in the sql statement.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the statement is to create a table, the id (primary key) and foreign keys MUST be bigInt/long, unless user specifically defines otherwise. \r\n## table & views in db start ##\r\n[{\"name\":\"comments\"}]\r\n## table & view in db end ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"tableNames\": [\"comments\"],\n\"FunctionName\": \"Insert\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"sql\",\n\"Value\": \"insert into comments (text) values (@text)\"},\n{\"Type\": \"Dictionary`2\",\n\"Name\": \"Parameters\",\n\"Value\": \"{\\\"@text\\\": \\\"%text%\\\"}\"}],\n\"ReturnValue\": null}"
    },
    "answer": "{\"tableNames\": [\"comments\"],\n\"FunctionName\": \"Insert\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"sql\",\n\"Value\": \"insert into comments (text) values (@text)\"},\n{\"Type\": \"Dictionary`2\",\n\"Name\": \"Parameters\",\n\"Value\": \"{\\\"@text\\\": \\\"%text%\\\"}\"}],\n\"ReturnValue\": null}",
    "hash": "7264782151e1f9eded067679f04fd644ba33a855f6a6db19466a6fc55c80ac31",
    "Created": "2023-09-17T18:25:02.6708319Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\nAlter insert statement to include inserting of the id, as it will be provided by the system\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: insert into comments table set text=%text%, id=@id",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%text%\r\n## defined variables ##\nValidate that the sql statement and parameters are valid. If they are not, then fix themIn previous request you generated following scheme:{\"tableNames\":[\"comments\"],\"FunctionName\":\"Insert\",\"Parameters\":[{\"Type\":\"String\",\"Name\":\"sql\",\"Value\":\"insert into comments (text) values (@text)\"},{\"Type\":\"Dictionary`2\",\"Name\":\"Parameters\",\"Value\":\"{\\\"@text\\\": \\\"%text%\\\"}\"}],\"ReturnValue\":null}### table info starts ### \ncomments\n[{\"cid\":0,\"name\":\"id\",\"type\":\"INTEGER\",\"notnull\":0,\"dflt_value\":null,\"pk\":1},{\"cid\":1,\"name\":\"text\",\"type\":\"TEXT\",\"notnull\":0,\"dflt_value\":null,\"pk\":0},{\"cid\":2,\"name\":\"created\",\"type\":\"DATETIME\",\"notnull\":0,\"dflt_value\":\"CURRENT_TIMESTAMP\",\"pk\":0}] ### table info ends ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Insert\", \"Parameters\": [{\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"insert into comments (text, id) values (@text, @id)\"}, {\"Type\": \"Dictionary`2\", \"Name\": \"Parameters\", \"Value\": \"{\\\"@text\\\": \\\"%text%\\\", \\\"@id\\\": \\\"@id\\\"}\"}], \"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Insert\", \"Parameters\": [{\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"insert into comments (text, id) values (@text, @id)\"}, {\"Type\": \"Dictionary`2\", \"Name\": \"Parameters\", \"Value\": \"{\\\"@text\\\": \\\"%text%\\\", \\\"@id\\\": \\\"@id\\\"}\"}], \"ReturnValue\": null}",
    "hash": "11e123d8c398900ce141a0c0ed8ee99f7a871ad0911def4140e3ba8becbecd3f",
    "Created": "2023-09-17T18:28:45.0764417Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32},\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "select all from comments, write to %comments%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SelectComments\",\n\"StepDescription\": \"Select all records from the 'comments' table in the database and store the result in the 'comments' variable.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"SelectComments\",\n\"StepDescription\": \"Select all records from the 'comments' table in the database and store the result in the 'comments' variable.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "815c1ec37340e0f8168d4b11ef8af3afd158b2bcc0b236616e11584d13928e8a",
    "Created": "2023-09-17T18:37:07.0250786Z"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "Newtonsoft.Json.JsonSerializationException: Error converting value \"%comments%\" to type 'PLang.Modules.BaseBuilder+ReturnValue'. Path 'ReturnValue', line 6, position 27.\r\n ---> System.ArgumentException: Could not cast or convert from System.String to PLang.Modules.BaseBuilder+ReturnValue.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(JsonObjectContract contract, JsonProperty containerProperty, JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ObjectConstructor`1 creator, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type)\r\n   at PLang.Utils.Extractors.JsonExtractor.Extract(String content, Type responseType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Utils\\Extractors\\IContentExtractor.cs:line 100\r\n   at PLang.Services.LlmService.OpenAIService.Query(LlmQuestion question, Type responseType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Services\\LlmService\\OpenAIService.cs:line 100\r\n   at PLang.Modules.BaseBuilder.Build(GoalStep step, Type responseType) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseBuilder.cs:line 65\r\n   at PLang.Modules.BaseBuilder.Build[T](GoalStep step) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\BaseBuilder.cs:line 51\r\n   at PLang.Modules.DbModule.Builder.Build(GoalStep goalStep) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\DbModule\\Builder.cs:line 58\r\n   at PLang.Building.InstructionBuilder.BuildInstruction(StepBuilder stepBuilder, Goal goal, GoalStep step, String module, Int32 stepIndex, List`1 excludeModules, Int32 errorCount) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\InstructionBuilder.cs:line 52\r\n   at PLang.Building.StepBuilder.BuildStep(Goal goal, Int32 stepIndex, List`1 excludeModules, Int32 errorCount) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\StepBuilder.cs:line 103",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"There was an issue with converting a string value to a specific type. The system was unable to convert '%comments%' to 'PLang.Modules.BaseBuilder+ReturnValue'.\",\n\"howToFix\": \"Please ensure that the value you are trying to convert is compatible with the 'PLang.Modules.BaseBuilder+ReturnValue' type. If '%comments%' is a placeholder, replace it with a valid value of the expected type. If you are unsure about the valid values, please refer to the documentation or contact the developer.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"There was an issue with converting a string value to a specific type. The system was unable to convert '%comments%' to 'PLang.Modules.BaseBuilder+ReturnValue'.\",\n\"howToFix\": \"Please ensure that the value you are trying to convert is compatible with the 'PLang.Modules.BaseBuilder+ReturnValue' type. If '%comments%' is a placeholder, replace it with a valid value of the expected type. If you are unsure about the valid values, please refer to the documentation or contact the developer.\"\n}",
    "hash": "2eb68d4a2b0270a5631ae8a6eb52ee92be01e3b83bc38e6cfaf5c5f3d1e52ce8",
    "Created": "2023-09-17T18:37:17.0046005Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32},\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "write out %comments%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"WriteOutComments\",\n\"StepDescription\": \"This step involves writing out the value of the variable %comments%.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"WriteOutComments\",\n\"StepDescription\": \"This step involves writing out the value of the variable %comments%.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "04c851afadabc53ea5b5e84b90a697eacaf8ee2ae5316c61344ebca70c4bc42e",
    "Created": "2023-09-17T18:37:21.733273Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: write out %comments%",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%comments%\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"text\",\n\"Value\": \"%comments%\"}],\n\"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"text\",\n\"Value\": \"%comments%\"}],\n\"ReturnValue\": null}",
    "hash": "db55bdadba88434f416bbd6ddb7ef52b0b0c2df93e6caa6582b0b6fe310edfe9",
    "Created": "2023-09-17T18:37:25.6805125Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n,\n = null,\n = null}\r\nBe Concise\r\n",
      "question": "select all from comments, write to %comments%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"Modules\": [\"PLang.Modules.DbModule\", \"PLang.Modules.LocalOrGlobalVariableModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null,\n\"CachingHandler\": null}"
    },
    "answer": "{\"Modules\": [\"PLang.Modules.DbModule\", \"PLang.Modules.LocalOrGlobalVariableModule\"],\n\"WaitForExecution\": true,\n\"ErrorHandler\": null,\n\"RetryHandler\": null,\n\"CachingHandler\": null}",
    "hash": "539d0d1188ac68c532832b73598927a30022838b52a5bfd18e0b070933dd2de5",
    "Created": "2023-09-17T18:51:16.3247897Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": [{\"Chars\": {},\n\"Length\": {}}]\"StepName\": [{\"Chars\": {},\n\"Length\": {}}]\"StepName\": [{\"Chars\": {},\n\"Length\": {}}]\"StepName\": [{\"Chars\": {},\n\"Length\": {}}]\"StepName\": [{\"Chars\": {},\n\"Length\": {}}]\"StepName\": [{\"Chars\": {},\n\"Length\": {}}]\"StepName\": [{\"Chars\": {},\n\"Length\": {}}]\"StepName\": [{\"Chars\": {},\n\"Length\": {}}]\"StepName\": [{\"Chars\": {},\n\"Length\": {}}],\n\"StepDescription\": [{\"Chars\": {},\n\"Length\": {}}]\"StepDescription\": [{\"Chars\": {},\n\"Length\": {}}]\"StepDescription\": [{\"Chars\": {},\n\"Length\": {}}]\"StepDescription\": [{\"Chars\": {},\n\"Length\": {}}]\"StepDescription\": [{\"Chars\": {},\n\"Length\": {}}]\"StepDescription\": [{\"Chars\": {},\n\"Length\": {}}]\"StepDescription\": [{\"Chars\": {},\n\"Length\": {}}]\"StepDescription\": [{\"Chars\": {},\n\"Length\": {}}]\"StepDescription\": [{\"Chars\": {},\n\"Length\": {}}],\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": [{\"TimeInMilliseconds\": Int64,\n\"CacheKey\": [{\"Chars\": {},\n\"Length\": {}}]\"CacheKey\": [{\"Chars\": {},\n\"Length\": {}}]\"CacheKey\": [{\"Chars\": {},\n\"Length\": {}}]\"CacheKey\": [{\"Chars\": {},\n\"Length\": {}}]\"CacheKey\": [{\"Chars\": {},\n\"Length\": {}}]\"CacheKey\": [{\"Chars\": {},\n\"Length\": {}}]\"CacheKey\": [{\"Chars\": {},\n\"Length\": {}}]\"CacheKey\": [{\"Chars\": {},\n\"Length\": {}}]\"CacheKey\": [{\"Chars\": {},\n\"Length\": {}}],\n\"CachingType\": Int32}],\n\"ErrorHandler\": [{\"IgnoreErrors\": Boolean,\n\"Except\": [[\"Length\": {},\n\"LongLength\": {},\n\"Rank\": {},\n\"SyncRoot\": [{}],\n\"IsReadOnly\": {},\n\"IsFixedSize\": {},\n\"IsSynchronized\": {}]] = null}] = null,\n\"RetryHandler\": [{\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32}] = null}\r\nBe Concise\r\n",
      "question": "select all from comments, write to %comments%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SelectAllFromComments\",\n\"StepDescription\": \"This step involves selecting all data from the 'comments' table in the database and storing the result in the variable '%comments%'.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"SelectAllFromComments\",\n\"StepDescription\": \"This step involves selecting all data from the 'comments' table in the database and storing the result in the variable '%comments%'.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "181c34afb8143dec5d303c965546e2bee4ed9f43c8b2145fa26986ac4eaaa742",
    "Created": "2023-09-17T18:55:27.4873051Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"TimeInMilliseconds\": Int64\"CacheKey\": String\"CachingType\": Int32,\n\"IgnoreErrors\": Boolean\"Except\": String[] = null,\n\"RetryCount\": Int32\"RetryDelayInMilliseconds\": Int32 = null}\r\nBe Concise\r\n",
      "question": "select all from comments, write to %comments%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SelectAllFromComments\",\n\"StepDescription\": \"This step involves selecting all data from the 'comments' database table and writing the result to the 'comments' variable.\",\n\"Modules\": [\"PLang.Modules.DbModule\", \"PLang.Modules.LocalOrGlobalVariableModule\"],\n\"WaitForExecution\": true,\n\"TimeInMilliseconds\": null,\n\"CacheKey\": null,\n\"CachingType\": null,\n\"IgnoreErrors\": false,\n\"Except\": null,\n\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": null}"
    },
    "answer": "{\"StepName\": \"SelectAllFromComments\",\n\"StepDescription\": \"This step involves selecting all data from the 'comments' database table and writing the result to the 'comments' variable.\",\n\"Modules\": [\"PLang.Modules.DbModule\", \"PLang.Modules.LocalOrGlobalVariableModule\"],\n\"WaitForExecution\": true,\n\"TimeInMilliseconds\": null,\n\"CacheKey\": null,\n\"CachingType\": null,\n\"IgnoreErrors\": false,\n\"Except\": null,\n\"RetryCount\": 0,\n\"RetryDelayInMilliseconds\": null}",
    "hash": "c8892dad4f4a916f3d9dd877afc706e92c16cdf0fee74f817abd575dafdb729b",
    "Created": "2023-09-18T09:49:03.166309Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"tableNames\": String[],\n\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: select all from comments, write to %comments%",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%comments%\r\n## defined variables ##\nCreate SQL statement that works with System.Data.SQLite.SQLiteConnection.\r\nYou MUST provide Parameters if SQL has @parameter.\r\ntableNames: is the tables in the sql statement.\r\nChoose the best method to use, if the method is not provided that fits the SQL, you can use Execute to run SQL statement.\r\nIf the statement is to create a table, the id (primary key) and foreign keys MUST be bigInt/long, unless user specifically defines otherwise. \r\n## table & views in db start ##\r\n[{\"name\":\"comments\"}]\r\n## table & view in db end ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"tableNames\": [\"comments\"],\n\"FunctionName\": \"Select\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"sql\",\n\"Value\": \"SELECT * FROM comments\"}],\n\"ReturnValue\": {\"Type\": \"Object\",\n\"VariableName\": \"comments\"}}"
    },
    "answer": "{\"tableNames\": [\"comments\"],\n\"FunctionName\": \"Select\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"sql\",\n\"Value\": \"SELECT * FROM comments\"}],\n\"ReturnValue\": {\"Type\": \"Object\",\n\"VariableName\": \"comments\"}}",
    "hash": "8312bd8e30faf604180c18a00e12274969bc4179760addbe1fd5e67410e4903c",
    "Created": "2023-09-18T09:54:43.731866Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: select all from comments, write to %comments%",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nObject Select(String sql, Dictionary`2? Parameters) \nvoid Execute(String sql) \nvoid Update(String sql, Dictionary`2? Parameters) \nObject InsertAndSelectIdOfInsertedRow(String tableName, String sql, Dictionary`2? Parameters, Nullable`1? disableEventSource) \nInt32 Insert(String sql, Dictionary`2? Parameters) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%comments%\r\n## defined variables ##\nValidate that the sql statement and parameters are valid. If they are not, then fix themIn previous request you generated following scheme:{\"tableNames\":[\"comments\"],\"FunctionName\":\"Select\",\"Parameters\":[{\"Type\":\"String\",\"Name\":\"sql\",\"Value\":\"SELECT * FROM comments\"}],\"ReturnValue\":{\"Type\":\"Object\",\"VariableName\":\"comments\"}}### table info starts ### \ncomments\n[{\"cid\":0,\"name\":\"id\",\"type\":\"INTEGER\",\"notnull\":0,\"dflt_value\":null,\"pk\":1},{\"cid\":1,\"name\":\"text\",\"type\":\"TEXT\",\"notnull\":0,\"dflt_value\":null,\"pk\":0},{\"cid\":2,\"name\":\"created\",\"type\":\"DATETIME\",\"notnull\":0,\"dflt_value\":\"CURRENT_TIMESTAMP\",\"pk\":0}] ### table info ends ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Select\", \"Parameters\": [{\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"SELECT * FROM comments\"}], \"ReturnValue\": {\"Type\": \"Object\", \"VariableName\": \"comments\"}}"
    },
    "answer": "{\"FunctionName\": \"Select\", \"Parameters\": [{\"Type\": \"String\", \"Name\": \"sql\", \"Value\": \"SELECT * FROM comments\"}], \"ReturnValue\": {\"Type\": \"Object\", \"VariableName\": \"comments\"}}",
    "hash": "7451b1e8a41b43e45860109f82812369315e00205a41d034d852130bbbd9b5c6",
    "Created": "2023-09-18T09:55:12.2194738Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32} = null,\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "foreach %comments% call !WriteOut",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"ForEachWriteOut\",\n\"StepDescription\": \"For each item in the 'comments' variable, call the 'WriteOut' function.\",\n\"Modules\": [\"PLang.Modules.LoopModule\", \"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"ForEachWriteOut\",\n\"StepDescription\": \"For each item in the 'comments' variable, call the 'WriteOut' function.\",\n\"Modules\": [\"PLang.Modules.LoopModule\", \"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "4d2c826b2c4644ef6eb8160d5a6451b1b777f9621869a70f2a35988cb2062324",
    "Created": "2023-09-18T09:56:39.90465Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: foreach %comments% call !WriteOut",
      "assistant": "## functions available defined in csharp ##\r\nvoid RunLoop(String VariableToLoopThrough, String GoalNameToCall, Dictionary`2? parameters) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%comments%\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"RunLoop\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"VariableToLoopThrough\",\n\"Value\": \"%comments%\"},\n{\"Type\": \"String\",\n\"Name\": \"GoalNameToCall\",\n\"Value\": \"!WriteOut\"},\n{\"Type\": \"Dictionary`2\",\n\"Name\": \"parameters\",\n\"Value\": null}],\n\"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"RunLoop\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"VariableToLoopThrough\",\n\"Value\": \"%comments%\"},\n{\"Type\": \"String\",\n\"Name\": \"GoalNameToCall\",\n\"Value\": \"!WriteOut\"},\n{\"Type\": \"Dictionary`2\",\n\"Name\": \"parameters\",\n\"Value\": null}],\n\"ReturnValue\": null}",
    "hash": "732446a109c184cfbb58fbb855d298c7ff5fa2a5f86c5e3afd938f5e8ba226c9",
    "Created": "2023-09-18T09:56:51.9529402Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32} = null,\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "write out %item%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"WriteOutItem\",\n\"StepDescription\": \"Write out the value of the variable 'item' to the user interface.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"WriteOutItem\",\n\"StepDescription\": \"Write out the value of the variable 'item' to the user interface.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "d1d9ef8cdd7614c2e857ed77c2208ebce7103dbfda1cf5641097eb32f39395a0",
    "Created": "2023-09-18T09:56:58.5950107Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: write out %item%",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%item%\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"text\",\n\"Value\": \"%item%\"}],\n\"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"text\",\n\"Value\": \"%item%\"}],\n\"ReturnValue\": null}",
    "hash": "09c5fd944295337fca401a565a7f6a04c47ebe63dd4866337193307b75854663",
    "Created": "2023-09-18T09:57:03.2948676Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32} = null,\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "write out %comments.ToJson()%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"WriteOutComments\",\n\"StepDescription\": \"This step involves writing out the JSON representation of the 'comments' variable.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"WriteOutComments\",\n\"StepDescription\": \"This step involves writing out the JSON representation of the 'comments' variable.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "1eaad4ef9b694a4c50cf616b288e9f258e72208528299cd8e03647a04121bddf",
    "Created": "2023-09-18T10:10:46.4703484Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: write out %comments.ToJson()%",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%comments.ToJson()%\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"text\",\n\"Value\": \"%comments.ToJson()%\"}],\n\"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"text\",\n\"Value\": \"%comments.ToJson()%\"}],\n\"ReturnValue\": null}",
    "hash": "6d9b7268ab020ca262e42f22ec57389afe8d59f50193905d9bb48ab4efccdfe8",
    "Created": "2023-09-18T10:10:51.0728106Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": String,\n\"StepDescription\": String,\n\"Modules\": string[],\n\"WaitForExecution\": Boolean,\n\"CachingHandler\": {\"TimeInMilliseconds\": Int64,\n\"CacheKey\": String,\n\"CachingType\": Int32} = null,\n\"ErrorHandler\": {\"IgnoreErrors\": Boolean,\n\"Except\": String[] = null} = null,\n\"RetryHandler\": {\"RetryCount\": Int32,\n\"RetryDelayInMilliseconds\": Int32} = null}\r\nBe Concise\r\n",
      "question": "write out %item.text%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve variables to and from a list or dictionary. It can be local variable or static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.EnvironmentSettingsModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ContactsModule\" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"WriteOutItemText\",\n\"StepDescription\": \"Write out the text contained in the variable 'item.text'\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}"
    },
    "answer": "{\"StepName\": \"WriteOutItemText\",\n\"StepDescription\": \"Write out the text contained in the variable 'item.text'\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true,\n\"CachingHandler\": null,\n\"ErrorHandler\": null,\n\"RetryHandler\": null}",
    "hash": "2553a17ad836a0439a3df9a264e8d62f35aa9e65ba33ad8e13326caa27ce9e02",
    "Created": "2023-09-18T10:42:24.6262247Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": String,\n\"Parameters\": [{\"Type\": String,\n\"Name\": String,\n\"Value\": String}],\n\"ReturnValue\": {\"Type\": String,\n\"VariableName\": String} = null}",
      "question": "command: write out %item.text%",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%item.text%\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"text\",\n\"Value\": \"%item.text%\"},\n{\"Type\": \"Boolean\",\n\"Name\": \"writeToBuffer\",\n\"Value\": \"False\"}],\n\"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"String\",\n\"Name\": \"text\",\n\"Value\": \"%item.text%\"},\n{\"Type\": \"Boolean\",\n\"Name\": \"writeToBuffer\",\n\"Value\": \"False\"}],\n\"ReturnValue\": null}",
    "hash": "b354a16a0928fd03de40d323f7091c5ab2136a939abc148bec13a981bc909351",
    "Created": "2023-09-18T10:42:30.1621921Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "insert into comments table set text=%text%, write to %id%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"InsertIntoCommentsTable\",\n\"StepDescription\": \"Insert a new record into the 'comments' table with the 'text' field set to the value of the variable %text% and write the resulting id to the variable %id%\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"InsertIntoCommentsTable\",\n\"StepDescription\": \"Insert a new record into the 'comments' table with the 'text' field set to the value of the variable %text% and write the resulting id to the variable %id%\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true}",
    "hash": "ce7a551ebf2b224b8b9d4e5f402ad2f550f748eda163851eaabacec8933918a6",
    "Created": "2023-09-28T13:28:30.9794605Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nTableNames: table names in sql statement\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"TableNames\"?: string[]}",
      "question": "command: insert into comments table set text=%text%, write to %id%",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nInt32 Execute(String sql) \nvoid CreateTable(String sql) \nObject Select(String sql, Dictionary`2? Parameters) \nInt32 Update(String sql, Dictionary`2? Parameters) \nInt32 Delete(String sql, Dictionary`2? Parameters) \nInt32 Insert(String sql, Dictionary`2? Parameters)  // Basic insert statement. Will return affected row count. \nObject InsertAndSelectIdOfInsertedRow(String sql, Dictionary`2? Parameters)  // Insert statement that will return the id of the inserted row. Use only if user requests the id. \n\r\n## functions available ends ##\r\n\n## table & views in db start ##\r\n[{\"name\":\"comments\"},{\"name\":\"__Events__\"}]\r\n## table & view in db end ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"InsertAndSelectIdOfInsertedRow\", \"TableNames\": [\"comments\"]}"
    },
    "answer": "{\"FunctionName\": \"InsertAndSelectIdOfInsertedRow\", \"TableNames\": [\"comments\"]}",
    "hash": "bede275baa63046ece3a45e1a2fd6b89379b5df4a266bcd9d3307e3f8a8fa43d",
    "Created": "2023-09-28T13:28:35.341464Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Map user command to this c# function: \r\n\r\n## csharp function ##\r\nObject InsertAndSelectIdOfInsertedRow(String sql, Dictionary`2? Parameters)  \r\n## csharp function ##\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%.\r\nYou MUST modify the user command by adding id to the sql statement and parameter %id%.\r\nYou MUST generate a valid sql statement for SQLiteConnection.\r\nYou MUST provide Parameters if SQL has @parameter.\r\n\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: insert into comments table set text=%text%, write to %id%",
      "assistant": "# examples #\r\n\"insert into users, name=%name%, write to %id%\" => sql: \"insert into users (id, name) values (@id, @name)\"\r\n\"insert into tableX, %phone%, write to %id%\" => sql: \"insert into tableX (id, phone) values (@id, @phone)\"\r\n# examples #\n### comments table info starts ###\n[{\"cid\":0,\"name\":\"id\",\"type\":\"INTEGER\",\"notnull\":0,\"dflt_value\":null,\"pk\":1},{\"cid\":1,\"name\":\"text\",\"type\":\"TEXT\",\"notnull\":0,\"dflt_value\":null,\"pk\":0},{\"cid\":2,\"name\":\"created\",\"type\":\"DATETIME\",\"notnull\":0,\"dflt_value\":\"CURRENT_TIMESTAMP\",\"pk\":0}]\n### table info ends ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"InsertAndSelectIdOfInsertedRow\", \n\"Parameters\": [\n    {\"Type\": \"string\", \n    \"Name\": \"sql\", \n    \"Value\": \"insert into comments (id, text) values (@id, @text)\"},\n    {\"Type\": \"Dictionary`2\", \n    \"Name\": \"Parameters\", \n    \"Value\": {\"@id\": \"%id%\", \"@text\": \"%text%\"}\n    }\n  ], \n\"ReturnValue\": {\"Type\": \"object\", \"VariableName\": \"id\"}}"
    },
    "answer": "{\"FunctionName\": \"InsertAndSelectIdOfInsertedRow\", \n\"Parameters\": [\n    {\"Type\": \"string\", \n    \"Name\": \"sql\", \n    \"Value\": \"insert into comments (id, text) values (@id, @text)\"},\n    {\"Type\": \"Dictionary`2\", \n    \"Name\": \"Parameters\", \n    \"Value\": {\"@id\": \"%id%\", \"@text\": \"%text%\"}\n    }\n  ], \n\"ReturnValue\": {\"Type\": \"object\", \"VariableName\": \"id\"}}",
    "hash": "61263b689f337818cbe7e8496a2be77c5c39fb757ddaae73629961df080d0f76",
    "Created": "2023-09-28T13:28:47.8211444Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "select id from comments, write to %rowId%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SelectIdFromComments\",\n\"StepDescription\": \"Select the 'id' from the 'comments' table in the database and store the result in the variable 'rowId'.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"SelectIdFromComments\",\n\"StepDescription\": \"Select the 'id' from the 'comments' table in the database and store the result in the variable 'rowId'.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true}",
    "hash": "734df8399059a67cbe7bc6486ac7649916d144d9e5369a42f2f8897f75f7ac8b",
    "Created": "2023-09-28T13:28:53.1681469Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nTableNames: table names in sql statement\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"TableNames\"?: string[]}",
      "question": "command: select id from comments, write to %rowId%",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nInt32 Execute(String sql) \nvoid CreateTable(String sql) \nObject Select(String sql, Dictionary`2? Parameters) \nInt32 Update(String sql, Dictionary`2? Parameters) \nInt32 Delete(String sql, Dictionary`2? Parameters) \nInt32 Insert(String sql, Dictionary`2? Parameters)  // Basic insert statement. Will return affected row count. \nObject InsertAndSelectIdOfInsertedRow(String sql, Dictionary`2? Parameters)  // Insert statement that will return the id of the inserted row. Use only if user requests the id. \n\r\n## functions available ends ##\r\n\n## table & views in db start ##\r\n[{\"name\":\"comments\"},{\"name\":\"__Events__\"}]\r\n## table & view in db end ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Select\", \"TableNames\": [\"comments\"]}"
    },
    "answer": "{\"FunctionName\": \"Select\", \"TableNames\": [\"comments\"]}",
    "hash": "f1f91b0441487c3e94290401854453a498953d63b77137794af78a16bf0f751c",
    "Created": "2023-09-28T13:28:55.4672493Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Map user command to this c# function: \r\n\r\n## csharp function ##\r\ndynamic Select(String sql, Dictionary`2? Parameters)  \r\n## csharp function ##\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%.\r\nYou MUST generate a valid sql statement for SQLiteConnection.\r\nYou MUST provide Parameters if SQL has @parameter.\r\n\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: select id from comments, write to %rowId%",
      "assistant": "# examples #\r\n\"select everything from tableX\" => sql: \"SELECT * FROM tableX\"\r\n\"select from tableB where id=%id%\" => sql: \"SELECT * FROM tableB WHERE id=@id\"\r\n# examples #\n### comments table info starts ###\n[{\"cid\":0,\"name\":\"id\",\"type\":\"INTEGER\",\"notnull\":0,\"dflt_value\":null,\"pk\":1},{\"cid\":1,\"name\":\"text\",\"type\":\"TEXT\",\"notnull\":0,\"dflt_value\":null,\"pk\":0},{\"cid\":2,\"name\":\"created\",\"type\":\"DATETIME\",\"notnull\":0,\"dflt_value\":\"CURRENT_TIMESTAMP\",\"pk\":0}]\n### table info ends ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Select\", \n\"Parameters\": [{\"Type\": \"string\", \n\"Name\": \"sql\", \n\"Value\": \"SELECT id FROM comments\"}], \n\"ReturnValue\": {\"Type\": \"dynamic\", \n\"VariableName\": \"rowId\"}}"
    },
    "answer": "{\"FunctionName\": \"Select\", \n\"Parameters\": [{\"Type\": \"string\", \n\"Name\": \"sql\", \n\"Value\": \"SELECT id FROM comments\"}], \n\"ReturnValue\": {\"Type\": \"dynamic\", \n\"VariableName\": \"rowId\"}}",
    "hash": "886f0c2b327f453b87102c603f253b7c3a4da52ceaa416ac448f8e7957b6e7fb",
    "Created": "2023-09-28T13:29:03.2230029Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "if %rowId% is null then",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CheckIfRowIdIsNull\",\n\"StepDescription\": \"This step checks if the variable 'rowId' is null.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"CheckIfRowIdIsNull\",\n\"StepDescription\": \"This step checks if the variable 'rowId' is null.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\"],\n\"WaitForExecution\": true}",
    "hash": "f8892539d6748ab2aea14044a8e43c5cb1b2ee98b07d912fc13a84f50a96956c",
    "Created": "2023-09-28T13:29:07.5035939Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\n\r\nName: is CamelCase name of class\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\n\r\n\r\nBe Concise\n\nYou MUST respond in JSON, scheme:\r\n {\"Name\": string,\n\"Implementation\": string,\n\"Using\": string[],\n\"Assemblies\": string[]}",
      "question": "command: if %rowId% is null then",
      "assistant": "## functions available defined in csharp ##\r\n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%rowId%\r\n## defined variables ##\nName cannot be: \n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(int? rowId)\\n{\\n\\tif(rowId == null)\\n\\t{\\n\\t\\treturn true;\\n\\t}\\n\\treturn false;\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": [\"System.Runtime\"]}"
    },
    "answer": "{\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(int? rowId)\\n{\\n\\tif(rowId == null)\\n\\t{\\n\\t\\treturn true;\\n\\t}\\n\\treturn false;\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": [\"System.Runtime\"]}",
    "hash": "4a36379007ab50ffa0b4137c8c1015eb3693ffc4a1b05b66f0b11fbda33f9d35",
    "Created": "2023-09-28T13:29:14.1224401Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "write out 'row id is null'",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"OutputRowIdIsNull\",\n\"StepDescription\": \"Write out the string 'row id is null' to the user interface.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"OutputRowIdIsNull\",\n\"StepDescription\": \"Write out the string 'row id is null' to the user interface.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true}",
    "hash": "58561dc2eae3814c65dc067fcadabb9c27662f105728171c14de9dbdb80b8c47",
    "Created": "2023-09-28T13:29:21.9425835Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: write out 'row id is null'",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"text\",\n\"Value\": \"row id is null\"}]}"
    },
    "answer": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"text\",\n\"Value\": \"row id is null\"}]}",
    "hash": "910c868de833b72318b00e20ef4637648f1f93b19e7f2681f693a204af4763c7",
    "Created": "2023-09-28T13:29:26.5722761Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "if %rowId% is not null then return true",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CheckRowIdNotNull\",\n\"StepDescription\": \"Check if the variable 'rowId' is not null. If it's not null, then return true.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\", \"PLang.Modules.ReturnModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"CheckRowIdNotNull\",\n\"StepDescription\": \"Check if the variable 'rowId' is not null. If it's not null, then return true.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\", \"PLang.Modules.ReturnModule\"],\n\"WaitForExecution\": true}",
    "hash": "c6a757435b8d554b0e036147cf3216ac31c6fc20eef2a8202f4a31e51a5a27ed",
    "Created": "2023-09-28T13:29:34.3117727Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\n\r\nName: is CamelCase name of class\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\n\r\n\r\nBe Concise\n\nYou MUST respond in JSON, scheme:\r\n {\"Name\": string,\n\"Implementation\": string,\n\"Using\": string[],\n\"Assemblies\": string[]}",
      "question": "command: if %rowId% is not null then return true",
      "assistant": "## functions available defined in csharp ##\r\n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%rowId%\r\n## defined variables ##\nName cannot be: CheckIfRowIdIsNull\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(int rowId)\\n{\\nif(rowId != null)\\n{\\nreturn true;\\n}\\nelse\\n{\\nreturn false;\\n}\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": [\"System.Runtime\"]}"
    },
    "answer": "{\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(int rowId)\\n{\\nif(rowId != null)\\n{\\nreturn true;\\n}\\nelse\\n{\\nreturn false;\\n}\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": [\"System.Runtime\"]}",
    "hash": "3ac1bdf8c8975fae5d5e27f1641793c17892381422ba2f0c09d802b6a4a6a5b2",
    "Created": "2023-09-28T13:29:41.1650229Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "write out 'row id is NOT null'",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"OutputRowIdNotNull\",\n\"StepDescription\": \"Write out the string 'row id is NOT null'\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"OutputRowIdNotNull\",\n\"StepDescription\": \"Write out the string 'row id is NOT null'\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true}",
    "hash": "73f15c3a323e88e573a0562531bd8da0c0330d1c32f4beaa7401d0d6b613d8b9",
    "Created": "2023-09-28T13:29:46.7746098Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: write out 'row id is NOT null'",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"text\",\n\"Value\": \"row id is NOT null\"}],\n\"ReturnValue\": null}"
    },
    "answer": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"text\",\n\"Value\": \"row id is NOT null\"}],\n\"ReturnValue\": null}",
    "hash": "9731b3975f92b9ccbe0b59f4222cee040185d94ed6a0b85e9cf39fbf421d7674",
    "Created": "2023-09-28T13:29:51.4788155Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "select id from comments where id=%id%, write to %rowId%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"FetchCommentId\",\n\"StepDescription\": \"Fetch the id from the comments table where the id matches the provided %id% and write the result to the %rowId% variable.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"FetchCommentId\",\n\"StepDescription\": \"Fetch the id from the comments table where the id matches the provided %id% and write the result to the %rowId% variable.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true}",
    "hash": "1ec7804fe5105ae66dfab321de13b4e84d8a46c2f720fb7f5acb94429290e518",
    "Created": "2023-09-28T13:30:35.4476813Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nTableNames: table names in sql statement\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"TableNames\"?: string[]}",
      "question": "command: select id from comments where id=%id%, write to %rowId%",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nInt32 Execute(String sql) \nvoid CreateTable(String sql) \nObject Select(String sql, Dictionary`2? Parameters) \nInt32 Update(String sql, Dictionary`2? Parameters) \nInt32 Delete(String sql, Dictionary`2? Parameters) \nInt32 Insert(String sql, Dictionary`2? Parameters)  // Basic insert statement. Will return affected row count. \nObject InsertAndSelectIdOfInsertedRow(String sql, Dictionary`2? Parameters)  // Insert statement that will return the id of the inserted row. Use only if user requests the id. \n\r\n## functions available ends ##\r\n\n## table & views in db start ##\r\n[{\"name\":\"comments\"},{\"name\":\"__Events__\"}]\r\n## table & view in db end ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Select\", \"TableNames\": [\"comments\"]}"
    },
    "answer": "{\"FunctionName\": \"Select\", \"TableNames\": [\"comments\"]}",
    "hash": "4306cdc38678058561b9d853e691e01b6d0749015e35c737d371150fc8d62e16",
    "Created": "2023-09-28T13:30:37.5040578Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Map user command to this c# function: \r\n\r\n## csharp function ##\r\ndynamic Select(String sql, Dictionary`2? Parameters)  \r\n## csharp function ##\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%.\r\nYou MUST generate a valid sql statement for SQLiteConnection.\r\nYou MUST provide Parameters if SQL has @parameter.\r\n\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: select id from comments where id=%id%, write to %rowId%",
      "assistant": "# examples #\r\n\"select everything from tableX\" => sql: \"SELECT * FROM tableX\"\r\n\"select from tableB where id=%id%\" => sql: \"SELECT * FROM tableB WHERE id=@id\"\r\n# examples #\n### comments table info starts ###\n[{\"cid\":0,\"name\":\"id\",\"type\":\"INTEGER\",\"notnull\":0,\"dflt_value\":null,\"pk\":1},{\"cid\":1,\"name\":\"text\",\"type\":\"TEXT\",\"notnull\":0,\"dflt_value\":null,\"pk\":0},{\"cid\":2,\"name\":\"created\",\"type\":\"DATETIME\",\"notnull\":0,\"dflt_value\":\"CURRENT_TIMESTAMP\",\"pk\":0}]\n### table info ends ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Select\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"sql\",\n\"Value\": \"SELECT id FROM comments WHERE id=@id\"},\n{\"Type\": \"Dictionary`2\",\n\"Name\": \"Parameters\",\n\"Value\": {\"@id\": \"%id%\"}}],\n\"ReturnValue\": {\"Type\": \"dynamic\",\n\"VariableName\": \"rowId\"}}"
    },
    "answer": "{\"FunctionName\": \"Select\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"sql\",\n\"Value\": \"SELECT id FROM comments WHERE id=@id\"},\n{\"Type\": \"Dictionary`2\",\n\"Name\": \"Parameters\",\n\"Value\": {\"@id\": \"%id%\"}}],\n\"ReturnValue\": {\"Type\": \"dynamic\",\n\"VariableName\": \"rowId\"}}",
    "hash": "901bbf70604dd08f9f3b8d21ad34f97ec87a37ff7f233b43d9956c6760e0a3ba",
    "Created": "2023-09-28T13:30:46.5107442Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "if %rowId% is null",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CheckIfRowIdIsNull\",\n\"StepDescription\": \"This step checks if the variable 'rowId' is null.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"CheckIfRowIdIsNull\",\n\"StepDescription\": \"This step checks if the variable 'rowId' is null.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\"],\n\"WaitForExecution\": true}",
    "hash": "54a2e85d692e55968eeaf1c139788e862cfe16af07cb73bb78952ff14aba8c64",
    "Created": "2023-09-28T13:42:22.7649676Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\n\r\nName: is CamelCase name of class\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\n\r\n\r\nBe Concise\n\nYou MUST respond in JSON, scheme:\r\n {\"Name\": string,\n\"Implementation\": string,\n\"Using\": string[],\n\"Assemblies\": string[]}",
      "question": "command: if %rowId% is null",
      "assistant": "## functions available defined in csharp ##\r\n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%rowId%\r\n## defined variables ##\nName should be: CheckIfRowIdIsNull\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(int? rowId)\\n{\\n    return rowId == null;\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": []}"
    },
    "answer": "{\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(int? rowId)\\n{\\n    return rowId == null;\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": []}",
    "hash": "32486d925d1bdae988544b8e20d8cb752267ee98147f3b9361dba303d1af1b35",
    "Created": "2023-09-28T13:42:28.6536205Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "if %rowId% is not null, return true",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CheckRowIdNotNull\",\n\"StepDescription\": \"Check if the variable 'rowId' is not null. If it's not null, return true.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\", \"PLang.Modules.ReturnModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"CheckRowIdNotNull\",\n\"StepDescription\": \"Check if the variable 'rowId' is not null. If it's not null, return true.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\", \"PLang.Modules.ReturnModule\"],\n\"WaitForExecution\": true}",
    "hash": "dc31e543aaf38978c8000d2f8ac4260c5c81e32de78e15ca526b170a7e7f1200",
    "Created": "2023-09-28T13:42:35.2013484Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\n\r\nName: is CamelCase name of class\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\n\r\n\r\nBe Concise\n\nYou MUST respond in JSON, scheme:\r\n {\"Name\": string,\n\"Implementation\": string,\n\"Using\": string[],\n\"Assemblies\": string[]}",
      "question": "command: if %rowId% is not null, return true",
      "assistant": "## functions available defined in csharp ##\r\n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%rowId%\r\n## defined variables ##\nName should be: CheckIfRowIdIsNull\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(int rowId)\\n{\\nif(rowId != null)\\n{\\nreturn true;\\n}\\nelse\\n{\\nreturn false;\\n}\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": [\"System.Runtime\"]}"
    },
    "answer": "{\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(int rowId)\\n{\\nif(rowId != null)\\n{\\nreturn true;\\n}\\nelse\\n{\\nreturn false;\\n}\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": [\"System.Runtime\"]}",
    "hash": "0ecffad3db2e0658215788b4cbcf6be2b7ca5f2a2820e080dfcf15c090b5df7d",
    "Created": "2023-09-28T13:42:42.4483142Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "if %rowId% is null  then",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CheckIfRowIdIsNull\",\n\"StepDescription\": \"This step checks if the variable 'rowId' is null.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"CheckIfRowIdIsNull\",\n\"StepDescription\": \"This step checks if the variable 'rowId' is null.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\"],\n\"WaitForExecution\": true}",
    "hash": "f6073db17b1df2b8c7eaa4cdacd94cc515046d5ddd5209293eae0b9e616c1fd2",
    "Created": "2023-09-28T13:43:33.9533392Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "if %rowId% is null  then",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false. ALWAYS use long instead of int or int?. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CheckIfRowIdIsNull\",\n\"StepDescription\": \"This step checks if the variable 'rowId' is null.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"CheckIfRowIdIsNull\",\n\"StepDescription\": \"This step checks if the variable 'rowId' is null.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\"],\n\"WaitForExecution\": true}",
    "hash": "1fd44399b1f9f7b8429b56ee19f13ab932341a973664cd25a2e49fbd6615ffed",
    "Created": "2023-09-28T13:43:53.8539343Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\n\r\nName: is CamelCase name of class\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\n\r\n\r\nBe Concise\n\nYou MUST respond in JSON, scheme:\r\n {\"Name\": string,\n\"Implementation\": string,\n\"Using\": string[],\n\"Assemblies\": string[]}",
      "question": "command: if %rowId% is null  then",
      "assistant": "## functions available defined in csharp ##\r\n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%rowId%\r\n## defined variables ##\nName should be: CheckIfRowIdIsNull\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(int? rowId)\\n{\\n    if (rowId == null)\\n    {\\n        return true;\\n    }\\n    return false;\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": [\"System.Runtime\"]}"
    },
    "answer": "{\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(int? rowId)\\n{\\n    if (rowId == null)\\n    {\\n        return true;\\n    }\\n    return false;\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": [\"System.Runtime\"]}",
    "hash": "4120e2caf3a61cd240f684e0f17baaf8f1df26511e56251c268fd78e3286f16d",
    "Created": "2023-09-28T13:44:00.2421836Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "if %rowId% is not null then, return true",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false. ALWAYS use long instead of int or int?. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CheckRowIdNotNull\",\n\"StepDescription\": \"Check if the variable 'rowId' is not null. If it's not null, return true.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\", \"PLang.Modules.ReturnModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"CheckRowIdNotNull\",\n\"StepDescription\": \"Check if the variable 'rowId' is not null. If it's not null, return true.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\", \"PLang.Modules.ReturnModule\"],\n\"WaitForExecution\": true}",
    "hash": "0f8c7a1a8fa85d8a6a163bccef4912a8fd6bc56a6b733c4d0ff406d4bbaeb4d5",
    "Created": "2023-09-28T13:44:08.7876092Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "if %rowId% is not null then, return true",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CheckRowIdNotNull\",\n\"StepDescription\": \"Check if the variable 'rowId' is not null. If it's not null, return true.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\", \"PLang.Modules.ReturnModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"CheckRowIdNotNull\",\n\"StepDescription\": \"Check if the variable 'rowId' is not null. If it's not null, return true.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\", \"PLang.Modules.ReturnModule\"],\n\"WaitForExecution\": true}",
    "hash": "5fa382c43a4c80b94678731a31594cd6f57a866b64939cb50068e5d376885351",
    "Created": "2023-09-28T13:45:46.9724442Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\nALWAYS use long instead of int or int?\r\nName: is CamelCase name of class\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\n\r\n\r\nBe Concise\n\nYou MUST respond in JSON, scheme:\r\n {\"Name\": string,\n\"Implementation\": string,\n\"Using\": string[],\n\"Assemblies\": string[]}",
      "question": "command: if %rowId% is not null then, return true",
      "assistant": "## functions available defined in csharp ##\r\n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%rowId%\r\n## defined variables ##\nName should be: CheckIfRowIdIsNull\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(long rowId)\\n{\\n    if(rowId != null)\\n    {\\n        return true;\\n    }\\n    return false;\\n}\",\n\"Using\": [],\n\"Assemblies\": []\n}"
    },
    "answer": "{\n\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(long rowId)\\n{\\n    if(rowId != null)\\n    {\\n        return true;\\n    }\\n    return false;\\n}\",\n\"Using\": [],\n\"Assemblies\": []\n}",
    "hash": "5ee6dc9edce4bc2bec4c1a100ffb0651ac442f8db88d69f10ba5d22c950ff6b3",
    "Created": "2023-09-28T13:45:53.5881575Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\nALWAYS use long instead of int or int?\r\nName: is CamelCase name of class\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\n\r\n\r\nBe Concise\n\nYou MUST respond in JSON, scheme:\r\n {\"Name\": string,\n\"Implementation\": string,\n\"Using\": string[],\n\"Assemblies\": string[]}",
      "question": "command: if %rowId% is null then",
      "assistant": "## functions available defined in csharp ##\r\n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%rowId%\r\n## defined variables ##\nName should be: CheckIfRowIdIsNull\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(long rowId)\\n{\\n    return rowId == null;\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": []}"
    },
    "answer": "{\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(long rowId)\\n{\\n    return rowId == null;\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": []}",
    "hash": "4a2e5db3b1645d850abc307e9403b52b3a533441725bae0a7bbbeb884f215a46",
    "Created": "2023-09-28T13:46:46.0382063Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\nALWAYS use long or long? instead of int or int?\r\nName: is CamelCase name of class\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\n\r\n\r\nBe Concise\n\nYou MUST respond in JSON, scheme:\r\n {\"Name\": string,\n\"Implementation\": string,\n\"Using\": string[],\n\"Assemblies\": string[]}",
      "question": "command: if %rowId% is null  then",
      "assistant": "## functions available defined in csharp ##\r\n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%rowId%\r\n## defined variables ##\nName should be: CheckIfRowIdIsNull\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(long? rowId)\\n{\\n    if(rowId == null)\\n    {\\n        return true;\\n    }\\n    return false;\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": [\"System.Runtime\"]}"
    },
    "answer": "{\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(long? rowId)\\n{\\n    if(rowId == null)\\n    {\\n        return true;\\n    }\\n    return false;\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": [\"System.Runtime\"]}",
    "hash": "c0868106be96d8f95e10a750291162a3dfe083ef18479ac53a9014cedfe16f06",
    "Created": "2023-09-28T13:50:50.4519375Z"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "System.IO.IOException: The process cannot access the file 'C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLangExamples\\apps\\DbTest\\.build\\Start\\CheckIfRowIdIsNull.dll' because it is being used by another process.\r\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.CreateFile(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options)\r\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)\r\n   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)\r\n   at System.IO.Strategies.FileStreamHelpers.ChooseStrategyCore(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)\r\n   at System.IO.File.Create(String path)\r\n   at System.IO.Abstractions.FileWrapper.Create(String path)\r\n   at PLang.SafeFileSystem.PLangFile.Create(String path) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\SafeFileSystem\\PLangFile.cs:line 93\r\n   at PLang.Modules.Compiler.BuildCode(CodeImplementationResponse answer, GoalStep step) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\Compiler.cs:line 127\r\n   at PLang.Modules.ConditionalModule.Builder.Build(GoalStep step, String error) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\ConditionalModule\\Builder.cs:line 67\r\n   at PLang.Modules.ConditionalModule.Builder.Build(GoalStep step) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\ConditionalModule\\Builder.cs:line 33\r\n   at PLang.Building.InstructionBuilder.BuildInstruction(StepBuilder stepBuilder, Goal goal, GoalStep step, String module, Int32 stepIndex, List`1 excludeModules, Int32 errorCount) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\InstructionBuilder.cs:line 52\r\n   at PLang.Building.StepBuilder.BuildStep(Goal goal, Int32 stepIndex, List`1 excludeModules, Int32 errorCount) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\StepBuilder.cs:line 103",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"The file 'CheckIfRowIdIsNull.dll' cannot be accessed because it is being used by another process.\",\n\"howToFix\": \"Please close any other programs or processes that may be using the file 'CheckIfRowIdIsNull.dll' and try again. If you are unsure which process is using the file, a system restart may help.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"The file 'CheckIfRowIdIsNull.dll' cannot be accessed because it is being used by another process.\",\n\"howToFix\": \"Please close any other programs or processes that may be using the file 'CheckIfRowIdIsNull.dll' and try again. If you are unsure which process is using the file, a system restart may help.\"\n}",
    "hash": "a2e4280b4423a2baf7ff99e1e7b4b4e7a68c07756feb670669f5bc01a945742c",
    "Created": "2023-09-28T13:50:58.6159416Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "if %rowId% is not null  then, return true",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"CheckRowIdNotNull\",\n\"StepDescription\": \"Check if the variable 'rowId' is not null. If it's not null, then return true.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\", \"PLang.Modules.ReturnModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"CheckRowIdNotNull\",\n\"StepDescription\": \"Check if the variable 'rowId' is not null. If it's not null, then return true.\",\n\"Modules\": [\"PLang.Modules.ConditionalModule\", \"PLang.Modules.ReturnModule\"],\n\"WaitForExecution\": true}",
    "hash": "be6879aa540ad1bf906fb694c6374600f0a896b6ddc01a007a721af883d92479",
    "Created": "2023-09-28T13:51:05.8826337Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\nALWAYS use long or long? instead of int or int?\r\nName: is CamelCase name of class\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\n\r\n\r\nBe Concise\n\nYou MUST respond in JSON, scheme:\r\n {\"Name\": string,\n\"Implementation\": string,\n\"Using\": string[],\n\"Assemblies\": string[]}",
      "question": "command: if %rowId% is not null  then, return true",
      "assistant": "## functions available defined in csharp ##\r\n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%rowId%\r\n## defined variables ##\nName should be: CheckIfRowIdIsNull\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(long? rowId) {\\n if(rowId != null) {\\n return true;\\n }\\n return false;\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": [\"System.Runtime\"]\n}"
    },
    "answer": "{\n\"Name\": \"CheckIfRowIdIsNull\",\n\"Implementation\": \"public static bool Process(long? rowId) {\\n if(rowId != null) {\\n return true;\\n }\\n return false;\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": [\"System.Runtime\"]\n}",
    "hash": "c1bd694090c275f90ca3b4d05fd128d1b2dff27c699159954614235632b93fe4",
    "Created": "2023-09-28T13:51:05.3544357Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "select all from comments, write to %comments%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"SelectAllFromComments\",\n\"StepDescription\": \"This step involves selecting all data from the 'comments' table and writing the result to the variable '%comments%'.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"SelectAllFromComments\",\n\"StepDescription\": \"This step involves selecting all data from the 'comments' table and writing the result to the variable '%comments%'.\",\n\"Modules\": [\"PLang.Modules.DbModule\"],\n\"WaitForExecution\": true}",
    "hash": "76bdb04f0a5cb43f8f18ad7834e30d55fcd34d64b1f8cab1e3c2e2bbe4218cbb",
    "Created": "2023-09-28T14:07:06.9931992Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nTableNames: table names in sql statement\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"TableNames\"?: string[]}",
      "question": "command: select all from comments, write to %comments%",
      "assistant": "## functions available defined in csharp ##\r\nvoid SetDataSouceName(String name) \nvoid BeginTransaction() \nvoid EndTransaction() \nInt32 Execute(String sql) \nvoid CreateTable(String sql) \nObject Select(String sql, Dictionary`2? Parameters) \nInt32 Update(String sql, Dictionary`2? Parameters) \nInt32 Delete(String sql, Dictionary`2? Parameters) \nInt32 Insert(String sql, Dictionary`2? Parameters)  // Basic insert statement. Will return affected row count. \nObject InsertAndSelectIdOfInsertedRow(String sql, Dictionary`2? Parameters)  // Insert statement that will return the id of the inserted row. Use only if user requests the id. \n\r\n## functions available ends ##\r\n\n## table & views in db start ##\r\n[{\"name\":\"comments\"},{\"name\":\"__Events__\"}]\r\n## table & view in db end ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Select\", \"TableNames\": [\"comments\"]}"
    },
    "answer": "{\"FunctionName\": \"Select\", \"TableNames\": [\"comments\"]}",
    "hash": "8db97227a756076dc5997974731a99bd99ee6b864067281ad32460c1c4689cb3",
    "Created": "2023-09-28T14:07:14.6157353Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Map user command to this c# function: \r\n\r\n## csharp function ##\r\ndynamic Select(String sql, Dictionary`2? Parameters)  \r\n## csharp function ##\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%.\r\nYou MUST generate a valid sql statement for SQLiteConnection.\r\nYou MUST provide Parameters if SQL has @parameter.\r\n\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: select all from comments, write to %comments%",
      "assistant": "# examples #\r\n\"select everything from tableX\" => sql: \"SELECT * FROM tableX\"\r\n\"select from tableB where id=%id%\" => sql: \"SELECT * FROM tableB WHERE id=@id\"\r\n# examples #\n### comments table info starts ###\n[{\"cid\":0,\"name\":\"id\",\"type\":\"INTEGER\",\"notnull\":0,\"dflt_value\":null,\"pk\":1},{\"cid\":1,\"name\":\"text\",\"type\":\"TEXT\",\"notnull\":0,\"dflt_value\":null,\"pk\":0},{\"cid\":2,\"name\":\"created\",\"type\":\"DATETIME\",\"notnull\":0,\"dflt_value\":\"CURRENT_TIMESTAMP\",\"pk\":0}]\n### table info ends ###",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Select\", \n\"Parameters\": [{\"Type\": \"string\", \n\"Name\": \"sql\", \n\"Value\": \"SELECT * FROM comments\"}], \n\"ReturnValue\": {\"Type\": \"dynamic\", \n\"VariableName\": \"comments\"}}"
    },
    "answer": "{\"FunctionName\": \"Select\", \n\"Parameters\": [{\"Type\": \"string\", \n\"Name\": \"sql\", \n\"Value\": \"SELECT * FROM comments\"}], \n\"ReturnValue\": {\"Type\": \"dynamic\", \n\"VariableName\": \"comments\"}}",
    "hash": "d32c97fa24a24069fd6fcaf6d2d6cd67644884d5bcadd019d75f1c5871f7982a",
    "Created": "2023-09-28T14:07:21.0717674Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "write out %comments.ToJson()%",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"WriteOutComments\",\n\"StepDescription\": \"This step involves writing out the value of the variable 'comments' in JSON format.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"WriteOutComments\",\n\"StepDescription\": \"This step involves writing out the value of the variable 'comments' in JSON format.\",\n\"Modules\": [\"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true}",
    "hash": "d067623be105867d7441b4b559fa6789e6797cb243ab46a167bf9e6aef9353a6",
    "Created": "2023-09-28T14:07:28.9480164Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: write out %comments.ToJson()%",
      "assistant": "## functions available defined in csharp ##\r\nString Ask(String text) \nvoid Write(String? text, Boolean? writeToBuffer = False) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%comments.ToJson()%\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"text\",\n\"Value\": \"%comments.ToJson()%\"}]}"
    },
    "answer": "{\"FunctionName\": \"Write\",\n\"Parameters\": [{\"Type\": \"string\",\n\"Name\": \"text\",\n\"Value\": \"%comments.ToJson()%\"}]}",
    "hash": "80ff0582e2094b4f5c9a080481c58e9155dbe0f3d70a2aabc7ec8539b6a11e0f",
    "Created": "2023-09-28T14:07:32.5614781Z"
  },
  {
    "question": {
      "type": "StepBuilder",
      "system": "You are provided with a statement from the user. \r\nThis statement is a step in a Function. \r\n\r\nYou MUST determine which module can be used to solve the statement. You MUST choose from available modules provided by the assistant to determine which module. If you cannot choose module, set N/A\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n! defines a call to a function\r\n\r\nModules: Name of module. Suggest 1-3 modules that could be used to solve the step.\r\nStepName: Short name for step\r\nStepDescription: Rewrite the step as you understand it, make it detailed\r\nWaitForExecution: Indicates if code should wait for execution to finish, default is true\r\nErrorHandler: How to handle errors, default is null\r\nRetryHandler: If should retry the step if there is error, null\r\nCachingHandler: How should caching be handled, default is null\r\n\r\nRead the description of each module, then determine which module to use\r\n\r\n\r\nYour response MUST be JSON, scheme\r\n{\"StepName\": string,\n\"StepDescription\": string,\n\"Modules\": string[],\n\"WaitForExecution\": boolean,\n\"CachingHandler\"?: {\"TimeInMilliseconds\": int64,\n\"CacheKey\": string,\n\"CachingType\": int32},\n\"ErrorHandler\"?: {\"IgnoreErrors\": boolean,\n\"Except\"?: string[]},\n\"RetryHandler\"?: {\"RetryCount\": int32,\n\"RetryDelayInMilliseconds\": int32}}\r\nBe Concise\r\n",
      "question": "foreach %comments% call !WriteOut",
      "assistant": "This is a list of modules you can choose from\r\n## modules available starts ##\r\n[{ \"module\": \"PLang.Modules.WindowAppModule\" }, \n{ \"module\": \"PLang.Modules.WebserverModule\", \"description\": \"Start webserver, write to Body, Header, Cookie. \" }, \n{ \"module\": \"PLang.Modules.TerminalModule\", \"description\": \"Terminal/Console access to run external applications. \" }, \n{ \"module\": \"PLang.Modules.SeleniumModule\", \"description\": \"Run a browser instance, browse a website, input values and click on html elements, sendkeys, wait for browser and extract content. \" }, \n{ \"module\": \"PLang.Modules.ScheduleModule\", \"description\": \"Wait, Sleep and time delay. Cron scheduler. \" }, \n{ \"module\": \"PLang.Modules.ReturnModule\", \"description\": \"Return true, return false, return. \" }, \n{ \"module\": \"PLang.Modules.PythonModule\", \"description\": \"Runs python scripts. Parameters can be passed to the python process. \" }, \n{ \"module\": \"PLang.Modules.OutputModule\", \"description\": \"Outputs and writes out, to the UI a text or a variable. In console, code can ask user and he gives response. \" }, \n{ \"module\": \"PLang.Modules.MessageModule\", \"description\": \"Send and recieve private messages using Nostr protocol. \" }, \n{ \"module\": \"PLang.Modules.LoopModule\", \"description\": \"While, for, foreach, loops through a list. \" }, \n{ \"module\": \"PLang.Modules.LocalOrGlobalVariableModule\", \"description\": \"Set & Get local and static variables. Bind events to variable.. \" }, \n{ \"module\": \"PLang.Modules.LlmModule\", \"description\": \"Ask LLM a question and recieve and answer. \" }, \n{ \"module\": \"PLang.Modules.ListDictionaryModule\", \"description\": \"Add, update, delete and retrieve list or dictionary. It can be stored as local list/directory or as static/global. \" }, \n{ \"module\": \"PLang.Modules.HttpModule\", \"description\": \"Make Http request. \" }, \n{ \"module\": \"PLang.Modules.HtmlModule\" }, \n{ \"module\": \"PLang.Modules.FileModule\", \"description\": \"Handle file system access. \" }, \n{ \"module\": \"PLang.Modules.DbModule\", \"description\": \"Database access, select, insert, update, delete and execute raw sql. Handles transactions. \" }, \n{ \"module\": \"PLang.Modules.CultureInfoModule\", \"description\": \"Various settings for the program, such as culture, date & number formatting. \" }, \n{ \"module\": \"PLang.Modules.CryptographicModule\", \"description\": \"Encrypt, descryption and hashing & verify using bcrypt, compute Sha256Hash, generate & validate Bearer token. \" }, \n{ \"module\": \"PLang.Modules.ConditionalModule\", \"description\": \"Manages if conditions for the user request. Example 1:'if %isValid% is true then', this condition would return true if %isValid% is true. Example 2:'if %address% is empty then', this would check if the %address% variable is empty and return true if it is, else false.. \" }, \n{ \"module\": \"PLang.Modules.CompressionModule\" }, \n{ \"module\": \"PLang.Modules.CodeModule\", \"description\": \"Generate c# code from user description. Only use if no other module is found. \" }, \n{ \"module\": \"PLang.Modules.CallGoalModule\", \"description\": \"Call another Goal, when ! is prefixed, e.g. !RenameFile. \" }, \n{ \"module\": \"PLang.Modules.CachingModule\" }, \n{ \"module\": \"PLang.Modules.BlockchainModule\", \"description\": \"Use blockchain, create wallet, account info, transfer money, sign message, verify signature. \" }, \n]\r\n## modules available ends ##\r\n## CachingType int ##\r\nSliding = 0, Absolute = 1\r\n## CachingType int ##\r\n",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"StepName\": \"ForEachWriteOut\",\n\"StepDescription\": \"For each item in the 'comments' variable, call the 'WriteOut' function.\",\n\"Modules\": [\"PLang.Modules.LoopModule\", \"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true}"
    },
    "answer": "{\"StepName\": \"ForEachWriteOut\",\n\"StepDescription\": \"For each item in the 'comments' variable, call the 'WriteOut' function.\",\n\"Modules\": [\"PLang.Modules.LoopModule\", \"PLang.Modules.OutputModule\"],\n\"WaitForExecution\": true}",
    "hash": "d30437a79345d102a67ae661d790d79a2454fef1965bc11c5b4ffc9d47c69a4f",
    "Created": "2023-09-28T14:07:40.7110653Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Parse user command.\r\n\r\nSelect the correct function from list of available functions based on user command\r\n\r\nvariable is defined with starting and ending %, e.g. %filePath%\r\n\r\nIf there is some api key, settings, config replace it with %Settings.Get(\"settingName\", \"defaultValue\", \"Explain\")%\r\nwhere the settingName would be the api key, config key, \r\ndefaultValue for settings is the usual value given, make it \"\" if no value can be default\r\nExplain is an explanation about the setting that novice user can understand.\r\n\r\nJSON scheme information\r\nType: the object type in c#\r\nName: name of the variable\r\nValue: %variable% or hardcode string that should be used\r\nFunctionName: Name of the function to use from list of functions, if no function matches set as \"N/A\"\r\nReturnValue: Only if the function returns a value, else null\n\nYou MUST respond in JSON, scheme:\r\n {\"FunctionName\": string,\n\"Parameters\": [{\"Type\": string,\n\"Name\": string,\n\"Value\": object}],\n\"ReturnValue\"?: {\"Type\": string,\n\"VariableName\": string}}",
      "question": "command: foreach %comments% call !WriteOut",
      "assistant": "## functions available defined in csharp ##\r\nvoid RunLoop(String variableToLoopThrough, String goalNameToCall, Dictionary`2? parameters) \n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%comments%\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"FunctionName\": \"RunLoop\",\n\"Parameters\": [\n    {\n        \"Type\": \"String\",\n        \"Name\": \"variableToLoopThrough\",\n        \"Value\": \"%comments%\"\n    },\n    {\n        \"Type\": \"String\",\n        \"Name\": \"goalNameToCall\",\n        \"Value\": \"!WriteOut\"\n    },\n    {\n        \"Type\": \"Dictionary`2\",\n        \"Name\": \"parameters\",\n        \"Value\": null\n    }\n]\n}"
    },
    "answer": "{\n\"FunctionName\": \"RunLoop\",\n\"Parameters\": [\n    {\n        \"Type\": \"String\",\n        \"Name\": \"variableToLoopThrough\",\n        \"Value\": \"%comments%\"\n    },\n    {\n        \"Type\": \"String\",\n        \"Name\": \"goalNameToCall\",\n        \"Value\": \"!WriteOut\"\n    },\n    {\n        \"Type\": \"Dictionary`2\",\n        \"Name\": \"parameters\",\n        \"Value\": null\n    }\n]\n}",
    "hash": "83ccf8ef090e2d12ebc66c5a0809ca85138207ca60750e22415026f0315de8da",
    "Created": "2023-09-28T14:07:50.3188896Z"
  },
  {
    "question": {
      "type": "ErrorInfo",
      "system": "I am getting this error, can you give me user friendly error message and suggestion on how to fix it. Be Concise.You should respond in JSON, scheme {userFriendlyMessage:string, howToFix:string}",
      "question": "System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLangExamples\\apps\\DbTest\\.build\\Start\\00. Goal.pr\\CheckIfRowIdIsNull.dll'.\r\n   at System.IO.FileSystem.DeleteFile(String fullPath)\r\n   at System.IO.Abstractions.FileWrapper.Delete(String path)\r\n   at PLang.SafeFileSystem.PLangFile.Delete(String path) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\SafeFileSystem\\PLangFile.cs:line 130\r\n   at PLang.Modules.Compiler.GetPreviousBuildDllNamesToExclude(GoalStep step) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\Compiler.cs:line 50\r\n   at PLang.Modules.ConditionalModule.Builder.Build(GoalStep step, String error) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\ConditionalModule\\Builder.cs:line 39\r\n   at PLang.Modules.ConditionalModule.Builder.Build(GoalStep step) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Modules\\ConditionalModule\\Builder.cs:line 33\r\n   at PLang.Building.InstructionBuilder.BuildInstruction(StepBuilder stepBuilder, Goal goal, GoalStep step, String module, Int32 stepIndex, List`1 excludeModules, Int32 errorCount) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\InstructionBuilder.cs:line 52\r\n   at PLang.Building.StepBuilder.BuildStep(Goal goal, Int32 stepIndex, List`1 excludeModules, Int32 errorCount) in C:\\Users\\Ingi Gauti\\source\\repos\\ingig\\PLang\\Building\\StepBuilder.cs:line 105",
      "assistant": "",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"userFriendlyMessage\": \"The system cannot find the specified file path 'C:\\\\Users\\\\Ingi Gauti\\\\source\\\\repos\\\\ingig\\\\PLangExamples\\\\apps\\\\DbTest\\\\.build\\\\Start\\\\00. Goal.pr\\\\CheckIfRowIdIsNull.dll'.\",\n\"howToFix\": \"Please ensure that the file 'CheckIfRowIdIsNull.dll' exists at the specified location. If not, you may need to recreate it or change the file path in your code to the correct location.\"\n}"
    },
    "answer": "{\n\"userFriendlyMessage\": \"The system cannot find the specified file path 'C:\\\\Users\\\\Ingi Gauti\\\\source\\\\repos\\\\ingig\\\\PLangExamples\\\\apps\\\\DbTest\\\\.build\\\\Start\\\\00. Goal.pr\\\\CheckIfRowIdIsNull.dll'.\",\n\"howToFix\": \"Please ensure that the file 'CheckIfRowIdIsNull.dll' exists at the specified location. If not, you may need to recreate it or change the file path in your code to the correct location.\"\n}",
    "hash": "916d1062655c7d7108aa36bbf4a043e4a847faa50a40b40f6d38c4abf8856d81",
    "Created": "2023-09-28T14:13:21.756407Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\nALWAYS use long or long? instead of int or int?\r\nName: is CamelCase name of class\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\n\r\n\r\nBe Concise\n\nYou MUST respond in JSON, scheme:\r\n {\"Name\": string,\n\"Implementation\": string,\n\"Using\": string[],\n\"Assemblies\": string[]}",
      "question": "command: if %rowId% is null  then",
      "assistant": "## functions available defined in csharp ##\r\n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%rowId%\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\"Name\": \"ProcessRowId\",\n\"Implementation\": \"public static bool Process(long? rowId)\\n{\\n    if(rowId == null)\\n    {\\n        return true;\\n    }\\n    return false;\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": [\"System.Runtime\"]}"
    },
    "answer": "{\"Name\": \"ProcessRowId\",\n\"Implementation\": \"public static bool Process(long? rowId)\\n{\\n    if(rowId == null)\\n    {\\n        return true;\\n    }\\n    return false;\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": [\"System.Runtime\"]}",
    "hash": "8d38c1f66cd4c34247a47aa4d390e506a209e860d67371baea00c01f9b73d78c",
    "Created": "2023-09-28T14:14:33.175519Z"
  },
  {
    "question": {
      "type": "PLang.Modules.BaseBuilder",
      "system": "Act as a senior c# developer, that converts the user statement into a c# code. \r\n\r\nA variable is defined by starting and ending %.\r\nGenerate static class. The code generated should have 1 method with the static method named Process and return bool. \r\nVariables defined in the user statement can be passed into the Process function by value, but only if defined in statement. \r\nStatement should return true\r\n\r\nThe code will not be modified after it's generated.\r\nALWAYS use long or long? instead of int or int?\r\nName: is CamelCase name of class\r\n\r\nReplace the dot(.) in variables with the letter α e.g. %user.id% to userαid, %product.items[0].title% to productαitemsαtitle\r\n\r\n\r\nBe Concise\n\nYou MUST respond in JSON, scheme:\r\n {\"Name\": string,\n\"Implementation\": string,\n\"Using\": string[],\n\"Assemblies\": string[]}",
      "question": "command: if %rowId% is not null then, return true",
      "assistant": "## functions available defined in csharp ##\r\n\r\n## functions available ends ##\r\n## defined variables ##\r\n\t\t\t\t%rowId%\r\n## defined variables ##",
      "model": "gpt-4",
      "caching": true,
      "Reload": false,
      "PreviousResult": null,
      "RawResponse": "{\n\"Name\": \"RowIdCheck\",\n\"Implementation\": \"public static class RowIdCheck {\\n\\tpublic static bool Process(long? rowId) {\\n\\t\\tif(rowId != null) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": []\n}"
    },
    "answer": "{\n\"Name\": \"RowIdCheck\",\n\"Implementation\": \"public static class RowIdCheck {\\n\\tpublic static bool Process(long? rowId) {\\n\\t\\tif(rowId != null) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n}\",\n\"Using\": [\"System\"],\n\"Assemblies\": []\n}",
    "hash": "b51c3367f02bcc9cf5b390b4698762d0a0f6cc36e9f3572a741b3b79a08a15e1",
    "Created": "2023-09-28T14:14:43.6666325Z"
  }
]